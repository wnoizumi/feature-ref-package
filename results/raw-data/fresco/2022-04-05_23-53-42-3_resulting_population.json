{
  "executionId" : "7f65b11a-94b2-4a07-bdfe-801fe6a7aecb",
  "computingTime" : 243752,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.407747196738023,
    "meanNumConcerns" : 1.7946954813359526,
    "meanMetricsIntensity" : 0.05729714156167041,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "392c49e5-c0a3-41c4-976b-693c2d8b847c",
    "objectives" : {
      "NumberOfConcerns" : 1.0076628352490422,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.572117948662166,
      "MetricsIntensity" : 0.05609485702747409,
      "Density" : 1.0047861202512713
    },
    "euclideanDistance" : 10.117086790037837,
    "generation" : 15,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.792599805258033,
      "LackOfCohesion" : 0.572117948662166,
      "MetricsIntensity" : 0.0560948570274741,
      "Density" : 3.3929292929292934
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "8c6ffcb2-9338-4ec9-91f0-6e1033c96fcf",
    "objectives" : {
      "NumberOfConcerns" : 1.0082101806239738,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5733534548590151,
      "MetricsIntensity" : 0.0560127959905952,
      "Density" : 1.003888722704158
    },
    "euclideanDistance" : 10.11712172277273,
    "generation" : 38,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7918287937743191,
      "LackOfCohesion" : 0.5733534548590151,
      "MetricsIntensity" : 0.0560127959905952,
      "Density" : 3.38989898989899
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "7b8ff7f8-aefa-4913-8c09-40d776a0d550",
    "objectives" : {
      "NumberOfConcerns" : 1.0087575259989052,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5733083497527688,
      "MetricsIntensity" : 0.056032779898189854,
      "Density" : 1.0041878552198624
    },
    "euclideanDistance" : 10.117203523264216,
    "generation" : 38,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7928015564202333,
      "LackOfCohesion" : 0.5733083497527688,
      "MetricsIntensity" : 0.056032779898189854,
      "Density" : 3.394337714863499
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "40205c5c-be59-4ee6-8d5e-9c98773cf18b",
    "objectives" : {
      "NumberOfConcerns" : 1.0093048713738368,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5721517867340234,
      "MetricsIntensity" : 0.05602016615704122,
      "Density" : 1.0047861202512713
    },
    "euclideanDistance" : 10.117251968637916,
    "generation" : 39,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7937743190661477,
      "LackOfCohesion" : 0.5721517867340234,
      "MetricsIntensity" : 0.056020166157041223,
      "Density" : 3.392929292929293
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "cb27667b-5b2c-4899-b361-4cea5063a153",
    "objectives" : {
      "NumberOfConcerns" : 1.0087575259989052,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5718819224998931,
      "MetricsIntensity" : 0.056109198514208224,
      "Density" : 1.0059826503140892
    },
    "euclideanDistance" : 10.117301518410551,
    "generation" : 38,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7945472249269712,
      "LackOfCohesion" : 0.5718819224998931,
      "MetricsIntensity" : 0.05610919851420823,
      "Density" : 3.4004044489383203
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "541d635f-5f4e-45fc-9a73-937e1e4b4b24",
    "objectives" : {
      "NumberOfConcerns" : 1.0098522167487685,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5721066816277771,
      "MetricsIntensity" : 0.056040150064635884,
      "Density" : 1.0050852527669758
    },
    "euclideanDistance" : 10.117333859203445,
    "generation" : 40,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7947470817120623,
      "LackOfCohesion" : 0.5721066816277771,
      "MetricsIntensity" : 0.056040150064635884,
      "Density" : 3.3973710819009098
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "cd7264af-f262-4f2d-8fdf-f3f23879c609",
    "objectives" : {
      "NumberOfConcerns" : 1.0098522167487685,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5719611549257445,
      "MetricsIntensity" : 0.05601450616082929,
      "Density" : 1.0056835177983847
    },
    "euclideanDistance" : 10.117384940056802,
    "generation" : 39,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7947470817120623,
      "LackOfCohesion" : 0.5719611549257445,
      "MetricsIntensity" : 0.05601450616082929,
      "Density" : 3.395959595959596
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "7dda3de4-6910-449f-a5f8-42145773021e",
    "objectives" : {
      "NumberOfConcerns" : 1.0098522167487685,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5706787799354841,
      "MetricsIntensity" : 0.05611657772380325,
      "Density" : 1.0068800478612026
    },
    "euclideanDistance" : 10.117432098641308,
    "generation" : 17,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7964946445959107,
      "LackOfCohesion" : 0.5706787799354841,
      "MetricsIntensity" : 0.056116577723803254,
      "Density" : 3.403437815975733
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "28a9fd4a-e576-410e-9925-9f963266c133",
    "objectives" : {
      "NumberOfConcerns" : 1.0103995621237,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5719160498194983,
      "MetricsIntensity" : 0.056034490068423946,
      "Density" : 1.0059826503140892
    },
    "euclideanDistance" : 10.117466886528025,
    "generation" : 37,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.795719844357977,
      "LackOfCohesion" : 0.5719160498194983,
      "MetricsIntensity" : 0.05603449006842396,
      "Density" : 3.4004044489383207
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "f459cb0c-6036-44c3-ad31-0dd1910f073d",
    "objectives" : {
      "NumberOfConcerns" : 1.0071154898741106,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5727788374212144,
      "MetricsIntensity" : 0.05610607533002625,
      "Density" : 1.0
    },
    "euclideanDistance" : 12.097334627852158,
    "generation" : 46,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7916260954235637,
      "LackOfCohesion" : 0.5727788374212144,
      "MetricsIntensity" : 0.05610607533002625,
      "Density" : 3.380182002022244
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "4ab6a08a-ba1a-44b0-89b9-2884922b5ea8",
    "objectives" : {
      "NumberOfConcerns" : 1.0082101806239738,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5725428112589412,
      "MetricsIntensity" : 0.056120506675699795,
      "Density" : 1.0011965300628178
    },
    "euclideanDistance" : 12.097513671912814,
    "generation" : 46,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7935735150925018,
      "LackOfCohesion" : 0.5725428112589412,
      "MetricsIntensity" : 0.056120506675699795,
      "Density" : 3.387651821862348
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "2627fd86-7eeb-46cc-bed4-5bc9f9e780ac",
    "objectives" : {
      "NumberOfConcerns" : 1.0093048713738368,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5713396686945323,
      "MetricsIntensity" : 0.056127855932315014,
      "Density" : 1.0020939276099312
    },
    "euclideanDistance" : 12.097622407579399,
    "generation" : 39,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.795520934761441,
      "LackOfCohesion" : 0.5713396686945323,
      "MetricsIntensity" : 0.05612785593231502,
      "Density" : 3.390688259109312
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5a8af1a0-49f9-444d-8f24-5be767418f5a",
    "objectives" : {
      "NumberOfConcerns" : 1.0082101806239738,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5700272914984796,
      "MetricsIntensity" : 0.0561929076436806,
      "Density" : 1.006580915345498
    },
    "euclideanDistance" : 12.09784202506274,
    "generation" : 39,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7953216374268999,
      "LackOfCohesion" : 0.5700272914984796,
      "MetricsIntensity" : 0.05619290764368061,
      "Density" : 3.4058704453441297
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d8c7dba3-fa3f-42d3-93b5-8643c2b7cb9a",
    "objectives" : {
      "NumberOfConcerns" : 1.006568144499179,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5715724222224535,
      "MetricsIntensity" : 0.05616390781760284,
      "Density" : 1.0011965300628178
    },
    "euclideanDistance" : 14.083516014820907,
    "generation" : 39,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7923976608187135,
      "LackOfCohesion" : 0.5715724222224535,
      "MetricsIntensity" : 0.05616390781760283,
      "Density" : 3.3842264914054603
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "ba35a1cd-0533-4b1d-82b7-8d62aeae97eb",
    "objectives" : {
      "NumberOfConcerns" : 1.0082101806239738,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5698263762609946,
      "MetricsIntensity" : 0.056100875329942894,
      "Density" : 1.0044869877355669
    },
    "euclideanDistance" : 14.08379676380412,
    "generation" : 41,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7935735150925025,
      "LackOfCohesion" : 0.5698263762609946,
      "MetricsIntensity" : 0.05610087532994289,
      "Density" : 3.398785425101215
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "ebbb9b18-b75f-4697-958a-c0fc15384cc2",
    "objectives" : {
      "NumberOfConcerns" : 1.0060207991242474,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5730920238182454,
      "MetricsIntensity" : 0.05566689338827317,
      "Density" : 1.0017947950942268
    },
    "euclideanDistance" : 16.073182756707897,
    "generation" : 40,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7896786757546248,
      "LackOfCohesion" : 0.5730920238182454,
      "MetricsIntensity" : 0.055666893388273166,
      "Density" : 3.3862487360970683
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "7d593df2-9691-4a47-ba53-fd30115f0b90",
    "objectives" : {
      "NumberOfConcerns" : 1.0060207991242474,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5718094627025577,
      "MetricsIntensity" : 0.05576770949826789,
      "Density" : 1.0029913251570446
    },
    "euclideanDistance" : 16.073212048177233,
    "generation" : 46,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7914230019493176,
      "LackOfCohesion" : 0.5718094627025577,
      "MetricsIntensity" : 0.055767709498267884,
      "Density" : 3.393724696356275
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "27d484fb-b31d-41a7-afe9-ae94726c313f",
    "objectives" : {
      "NumberOfConcerns" : 1.006568144499179,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5729011581059074,
      "MetricsIntensity" : 0.055661861537272865,
      "Density" : 1.0026921926413401
    },
    "euclideanDistance" : 16.073266159760227,
    "generation" : 10,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7906523855890943,
      "LackOfCohesion" : 0.5729011581059074,
      "MetricsIntensity" : 0.05566186153727286,
      "Density" : 3.389282103134479
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "641eda8a-af56-4c1f-8500-519227314ea4",
    "objectives" : {
      "NumberOfConcerns" : 1.0076628352490422,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5718437208039014,
      "MetricsIntensity" : 0.05569332839060652,
      "Density" : 1.0029913251570446
    },
    "euclideanDistance" : 16.07331586747839,
    "generation" : 39,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.792599805258033,
      "LackOfCohesion" : 0.5718437208039014,
      "MetricsIntensity" : 0.05569332839060652,
      "Density" : 3.393724696356275
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "faec5857-90b3-461e-ba62-427b36747ecb",
    "objectives" : {
      "NumberOfConcerns" : 1.0071154898741106,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5704589578145335,
      "MetricsIntensity" : 0.05575034466759136,
      "Density" : 1.0044869877355669
    },
    "euclideanDistance" : 16.073325954573182,
    "generation" : 49,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.793372319688109,
      "LackOfCohesion" : 0.5704589578145335,
      "MetricsIntensity" : 0.05575034466759135,
      "Density" : 3.395348837209302
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "09a3f4ad-f306-404c-ab29-f184db551aa8",
    "objectives" : {
      "NumberOfConcerns" : 1.0054734537493157,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5724711633642583,
      "MetricsIntensity" : 0.05577960744249667,
      "Density" : 0.9982052049057732
    },
    "euclideanDistance" : 18.06483393487982,
    "generation" : 45,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.790448343079922,
      "LackOfCohesion" : 0.5724711633642583,
      "MetricsIntensity" : 0.05577960744249668,
      "Density" : 3.3809523809523814
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "1602d250-705d-4929-ac83-877c8aabe4a8",
    "objectives" : {
      "NumberOfConcerns" : 1.003831417624521,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5712038352262263,
      "MetricsIntensity" : 0.055823646543725916,
      "Density" : 1.0023930601256357
    },
    "euclideanDistance" : 18.06493452694719,
    "generation" : 38,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.789268292682927,
      "LackOfCohesion" : 0.5712038352262263,
      "MetricsIntensity" : 0.055823646543725916,
      "Density" : 3.3917004048583
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "733b54ce-5ae5-4ef4-aaf5-ae0f7ab8eca7",
    "objectives" : {
      "NumberOfConcerns" : 1.0043787629994527,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5710124999795406,
      "MetricsIntensity" : 0.05581860231424836,
      "Density" : 1.003290457672749
    },
    "euclideanDistance" : 18.0650087028354,
    "generation" : 40,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7902439024390242,
      "LackOfCohesion" : 0.5710124999795406,
      "MetricsIntensity" : 0.055818602314248365,
      "Density" : 3.3947368421052633
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "33cbd070-c7a2-46aa-a534-e1b14f647813",
    "objectives" : {
      "NumberOfConcerns" : 1.0076628352490422,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5686058066855082,
      "MetricsIntensity" : 0.05628120629900402,
      "Density" : 1.0059826503140892
    },
    "euclideanDistance" : 18.065266829467372,
    "generation" : 42,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7960975609756098,
      "LackOfCohesion" : 0.5686058066855082,
      "MetricsIntensity" : 0.05628120629900403,
      "Density" : 3.407294832826748
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "6515a5f5-8a36-4c0b-ad3e-0e89bbd7c80b",
    "objectives" : {
      "NumberOfConcerns" : 1.0049261083743843,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.5705053245275669,
      "MetricsIntensity" : 0.056182297586523836,
      "Density" : 0.9985043374214777
    },
    "euclideanDistance" : 19.0613619705156,
    "generation" : 46,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.789473684210526,
      "LackOfCohesion" : 0.5705053245275669,
      "MetricsIntensity" : 0.05618229758652384,
      "Density" : 3.3785425101214583
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "c59f8715-56e3-49e0-9410-d0c5b69efba0",
    "objectives" : {
      "NumberOfConcerns" : 1.0043787629994527,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.569225288949146,
      "MetricsIntensity" : 0.055919573981552784,
      "Density" : 1.0002991325157045
    },
    "euclideanDistance" : 20.05832793336497,
    "generation" : 46,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7919921875,
      "LackOfCohesion" : 0.569225288949146,
      "MetricsIntensity" : 0.055919573981552784,
      "Density" : 3.388044579533941
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "ad962573-a547-476e-abc4-cba8aed3c668",
    "objectives" : {
      "NumberOfConcerns" : 1.0043787629994527,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.5708101275876099,
      "MetricsIntensity" : 0.05572787057855883,
      "Density" : 1.0011965300628178
    },
    "euclideanDistance" : 20.058417210455314,
    "generation" : 22,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7884990253411306,
      "LackOfCohesion" : 0.5708101275876099,
      "MetricsIntensity" : 0.05572787057855884,
      "Density" : 3.387651821862348
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d4d3b2e2-f173-4767-835f-731cc9c3d4e1",
    "objectives" : {
      "NumberOfConcerns" : 1.0071154898741106,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.5685974911103461,
      "MetricsIntensity" : 0.05619462635128581,
      "Density" : 1.0029913251570446
    },
    "euclideanDistance" : 20.058582555883962,
    "generation" : 46,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7933723196881093,
      "LackOfCohesion" : 0.5685974911103461,
      "MetricsIntensity" : 0.05619462635128581,
      "Density" : 3.3971631205673756
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "b74be042-8224-4cfb-b039-7893c935ebcb",
    "objectives" : {
      "NumberOfConcerns" : 1.0054734537493157,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.5690303772836319,
      "MetricsIntensity" : 0.05627537064932238,
      "Density" : 0.9991026024528866
    },
    "euclideanDistance" : 22.05303029889625,
    "generation" : 47,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7921951219512193,
      "LackOfCohesion" : 0.5690303772836319,
      "MetricsIntensity" : 0.05627537064932238,
      "Density" : 3.3874239350912783
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "f8a2fc16-d5bf-4c83-ac20-854ba02e2c19",
    "objectives" : {
      "NumberOfConcerns" : 1.0060207991242474,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.5682461821678392,
      "MetricsIntensity" : 0.05635646170823748,
      "Density" : 1.0014956625785223
    },
    "euclideanDistance" : 22.053143793680725,
    "generation" : 45,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.794921875,
      "LackOfCohesion" : 0.5682461821678392,
      "MetricsIntensity" : 0.05635646170823747,
      "Density" : 3.3955375253549698
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "baedc5c8-96d7-4d60-958e-d64d290e0ca6",
    "objectives" : {
      "NumberOfConcerns" : 1.0027367268746579,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.5720235163009987,
      "MetricsIntensity" : 0.05573518783425273,
      "Density" : 0.9994017349685911
    },
    "euclideanDistance" : 23.050696347087776,
    "generation" : 36,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7855750487329436,
      "LackOfCohesion" : 0.5720235163009987,
      "MetricsIntensity" : 0.05573518783425272,
      "Density" : 3.38157894736842
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "8fa0af5b-f702-491f-8b9b-f97c483c776d",
    "objectives" : {
      "NumberOfConcerns" : 1.0054734537493157,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.5698918537647794,
      "MetricsIntensity" : 0.05585441912100543,
      "Density" : 0.9982052049057732
    },
    "euclideanDistance" : 24.048602598455037,
    "generation" : 43,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7921951219512193,
      "LackOfCohesion" : 0.5698918537647794,
      "MetricsIntensity" : 0.05585441912100543,
      "Density" : 3.3809523809523814
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "67e5d26c-2bb4-4996-a860-b13e70173f69",
    "objectives" : {
      "NumberOfConcerns" : 1.0032840722495895,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5699301714503197,
      "MetricsIntensity" : 0.055831961677897654,
      "Density" : 1.0011965300628178
    },
    "euclideanDistance" : 25.04669461285688,
    "generation" : 41,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7882926829268289,
      "LackOfCohesion" : 0.5699301714503197,
      "MetricsIntensity" : 0.05583196167789766,
      "Density" : 3.394523326572009
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "76ef909b-ddaf-4208-9171-7836a1f62aa3",
    "objectives" : {
      "NumberOfConcerns" : 1.003831417624521,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.5695356693735898,
      "MetricsIntensity" : 0.055839425806342276,
      "Density" : 1.0
    },
    "euclideanDistance" : 26.04486833207596,
    "generation" : 39,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.789268292682927,
      "LackOfCohesion" : 0.5695356693735898,
      "MetricsIntensity" : 0.05583942580634228,
      "Density" : 3.3904665314401625
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d923b6a8-7b64-4a54-9019-ecd810b5400f",
    "objectives" : {
      "NumberOfConcerns" : 1.0049261083743843,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.5683295670488747,
      "MetricsIntensity" : 0.05584650484280982,
      "Density" : 1.0008973975471134
    },
    "euclideanDistance" : 26.044918687002923,
    "generation" : 40,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.791219512195122,
      "LackOfCohesion" : 0.5683295670488747,
      "MetricsIntensity" : 0.05584650484280983,
      "Density" : 3.3935091277890472
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "09ab4538-26b3-49bb-b9f1-ab27b41aa339",
    "objectives" : {
      "NumberOfConcerns" : 0.9994526546250684,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5695489447958054,
      "MetricsIntensity" : 0.05598633259829836,
      "Density" : 0.996111277295842
    },
    "euclideanDistance" : 27.0429041294671,
    "generation" : 39,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7849462365591395,
      "LackOfCohesion" : 0.5695489447958054,
      "MetricsIntensity" : 0.055986332598298355,
      "Density" : 3.3772819472616633
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "3509709b-7e62-4463-91c2-dfb29eea4a5d",
    "objectives" : {
      "NumberOfConcerns" : 1.0032840722495895,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5669445092796477,
      "MetricsIntensity" : 0.056444701626497194,
      "Density" : 0.9997008674842955
    },
    "euclideanDistance" : 27.043124686970305,
    "generation" : 33,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7917888563049853,
      "LackOfCohesion" : 0.5669445092796477,
      "MetricsIntensity" : 0.0564447016264972,
      "Density" : 3.392893401015228
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "de42af7a-baba-474d-9d4f-542f6d7d097b",
    "objectives" : {
      "NumberOfConcerns" : 1.0027367268746579,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5684861251620751,
      "MetricsIntensity" : 0.05582282406333041,
      "Density" : 1.0
    },
    "euclideanDistance" : 27.043146518214396,
    "generation" : 42,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7873170731707317,
      "LackOfCohesion" : 0.5684861251620751,
      "MetricsIntensity" : 0.05582282406333042,
      "Density" : 3.3904665314401625
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "a9bce458-4c5c-4599-b95a-31bcc79403e6",
    "objectives" : {
      "NumberOfConcerns" : 1.0032840722495895,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.5676735808412293,
      "MetricsIntensity" : 0.055922052728961905,
      "Density" : 1.000598265031409
    },
    "euclideanDistance" : 28.0416325556837,
    "generation" : 44,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7900390625,
      "LackOfCohesion" : 0.5676735808412293,
      "MetricsIntensity" : 0.0559220527289619,
      "Density" : 3.3959390862944168
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "55cdad4f-4032-4849-9d7b-3b8ba9f5b602",
    "objectives" : {
      "NumberOfConcerns" : 0.9994526546250684,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.5693478763575692,
      "MetricsIntensity" : 0.05589514075739456,
      "Density" : 0.9940173496859108
    },
    "euclideanDistance" : 29.039873577055854,
    "generation" : 41,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.783203125,
      "LackOfCohesion" : 0.5693478763575692,
      "MetricsIntensity" : 0.05589514075739457,
      "Density" : 3.3701825557809326
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "35ce91e5-01e0-4ac4-912e-f490d6bf3f06",
    "objectives" : {
      "NumberOfConcerns" : 1.0021893814997263,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.567089125741568,
      "MetricsIntensity" : 0.0560159391582953,
      "Density" : 0.996709542327251
    },
    "euclideanDistance" : 30.038684081199882,
    "generation" : 48,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.789833822091887,
      "LackOfCohesion" : 0.567089125741568,
      "MetricsIntensity" : 0.056015939158295315,
      "Density" : 3.3861788617886175
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "21ae2271-734c-4863-a776-b57dc6f6904c",
    "objectives" : {
      "NumberOfConcerns" : 1.0027367268746579,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.5689856191257885,
      "MetricsIntensity" : 0.055907434532825394,
      "Density" : 0.9964104098115465
    },
    "euclideanDistance" : 30.038728084328273,
    "generation" : 38,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7890625,
      "LackOfCohesion" : 0.5689856191257885,
      "MetricsIntensity" : 0.0559074345328254,
      "Density" : 3.3817258883248735
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "0fa47755-c968-4080-bcd9-c66513126c07",
    "objectives" : {
      "NumberOfConcerns" : 1.0010946907498632,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.5661332845841953,
      "MetricsIntensity" : 0.056408754471194436,
      "Density" : 0.9970086748429554
    },
    "euclideanDistance" : 31.037395279260384,
    "generation" : 45,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7878787878787878,
      "LackOfCohesion" : 0.5661332845841953,
      "MetricsIntensity" : 0.05640875447119444,
      "Density" : 3.3837563451776647
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "8fab40fe-86e2-4fd7-98c4-edc6588ba605",
    "objectives" : {
      "NumberOfConcerns" : 1.0021893814997263,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.567060991763944,
      "MetricsIntensity" : 0.055910138256500264,
      "Density" : 0.9994017349685911
    },
    "euclideanDistance" : 33.035251951456175,
    "generation" : 35,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7880859375,
      "LackOfCohesion" : 0.567060991763944,
      "MetricsIntensity" : 0.05591013825650027,
      "Density" : 3.3918781725888323
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5350d9cf-2ab4-4ef8-a3d0-1f3894507501",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5665944395810372,
      "MetricsIntensity" : 0.055990914428552564,
      "Density" : 0.9982052049057732
    },
    "euclideanDistance" : 35.03313542737167,
    "generation" : 44,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7859237536656893,
      "LackOfCohesion" : 0.5665944395810372,
      "MetricsIntensity" : 0.05599091442855256,
      "Density" : 3.3912601626016263
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "8801780f-43aa-4ea6-85ca-1c162ffd2b97",
    "objectives" : {
      "NumberOfConcerns" : 1.0043787629994527,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5720381230637939,
      "MetricsIntensity" : 0.05623812890257092,
      "Density" : 0.9922225545916841
    },
    "euclideanDistance" : 35.033179596473765,
    "generation" : 39,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7884990253411306,
      "LackOfCohesion" : 0.5720381230637939,
      "MetricsIntensity" : 0.05623812890257092,
      "Density" : 3.357287449392712
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "7e7042b3-5bc8-4a5a-a83b-9ad55c83aaff",
    "objectives" : {
      "NumberOfConcerns" : 0.9978106185002736,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.567218500029071,
      "MetricsIntensity" : 0.056077956802130305,
      "Density" : 0.9934190846545019
    },
    "euclideanDistance" : 37.03116780594641,
    "generation" : 38,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7837573385518597,
      "LackOfCohesion" : 0.567218500029071,
      "MetricsIntensity" : 0.0560779568021303,
      "Density" : 3.3784333672431335
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "3a494f9e-ed57-47ef-8cf5-a4b383e9bda2",
    "objectives" : {
      "NumberOfConcerns" : 0.9989053092501369,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.5660079306587091,
      "MetricsIntensity" : 0.05608503191937669,
      "Density" : 0.9943164822016153
    },
    "euclideanDistance" : 37.03120289150758,
    "generation" : 36,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7857142857142863,
      "LackOfCohesion" : 0.5660079306587091,
      "MetricsIntensity" : 0.05608503191937669,
      "Density" : 3.381485249237029
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "a05ae6c9-f0cb-4c41-8055-37978961a19e",
    "objectives" : {
      "NumberOfConcerns" : 0.9994526546250684,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.5658158867629614,
      "MetricsIntensity" : 0.05608008955906673,
      "Density" : 0.9952138797487287
    },
    "euclideanDistance" : 37.031238824395814,
    "generation" : 18,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.786692759295499,
      "LackOfCohesion" : 0.5658158867629614,
      "MetricsIntensity" : 0.05608008955906672,
      "Density" : 3.384537131230926
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "7869c3fb-e1ab-4b75-a494-937a3ec66807",
    "objectives" : {
      "NumberOfConcerns" : 1.0005473453749316,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.5666990189855609,
      "MetricsIntensity" : 0.05598337470153072,
      "Density" : 0.9949147472330242
    },
    "euclideanDistance" : 37.031273705625644,
    "generation" : 44,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7869012707722387,
      "LackOfCohesion" : 0.5666990189855609,
      "MetricsIntensity" : 0.05598337470153072,
      "Density" : 3.380081300813007
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "e261521e-4918-4f87-b28b-8a4a52291b7e",
    "objectives" : {
      "NumberOfConcerns" : 0.9989053092501369,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5660394000365837,
      "MetricsIntensity" : 0.056059336831024945,
      "Density" : 0.9946156147173197
    },
    "euclideanDistance" : 39.02961203098908,
    "generation" : 35,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7857142857142858,
      "LackOfCohesion" : 0.5660394000365837,
      "MetricsIntensity" : 0.056059336831024945,
      "Density" : 3.382502543234995
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "cb3d6b3e-a7b7-43fd-a2ec-dd5a10b8c967",
    "objectives" : {
      "NumberOfConcerns" : 1.0032840722495895,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5723516942106982,
      "MetricsIntensity" : 0.055795516019580896,
      "Density" : 0.9940173496859108
    },
    "euclideanDistance" : 39.029800781231,
    "generation" : 42,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7865497076023393,
      "LackOfCohesion" : 0.5723516942106982,
      "MetricsIntensity" : 0.0557955160195809,
      "Density" : 3.3633603238866407
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "37cea913-1bb4-41ad-a46e-b7bd1f6571ad",
    "objectives" : {
      "NumberOfConcerns" : 1.0049261083743843,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.5709559733930708,
      "MetricsIntensity" : 0.05579754832680802,
      "Density" : 0.9958121447801376
    },
    "euclideanDistance" : 39.02986833696645,
    "generation" : 41,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7894736842105263,
      "LackOfCohesion" : 0.5709559733930708,
      "MetricsIntensity" : 0.05579754832680803,
      "Density" : 3.369433198380567
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "f25da68a-0287-41eb-8330-fdc8b5636226",
    "objectives" : {
      "NumberOfConcerns" : 1.0016420361247949,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.5717014621400386,
      "MetricsIntensity" : 0.05587090826402398,
      "Density" : 0.9937182171702064
    },
    "euclideanDistance" : 41.02829178486318,
    "generation" : 40,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7853658536585368,
      "LackOfCohesion" : 0.5717014621400386,
      "MetricsIntensity" : 0.05587090826402399,
      "Density" : 3.3657548125633228
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "71d0b0e2-9aeb-44bc-9d45-76c8fcee41df",
    "objectives" : {
      "NumberOfConcerns" : 1.0049261083743843,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.569413009273666,
      "MetricsIntensity" : 0.05633385051656629,
      "Density" : 0.9925216871073885
    },
    "euclideanDistance" : 41.0283119377402,
    "generation" : 44,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.791219512195122,
      "LackOfCohesion" : 0.569413009273666,
      "MetricsIntensity" : 0.05633385051656629,
      "Density" : 3.3617021276595738
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "0b1b8511-098e-4283-88ee-b1d4a5e20868",
    "objectives" : {
      "NumberOfConcerns" : 1.0016420361247949,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5713975092633099,
      "MetricsIntensity" : 0.05630724000493276,
      "Density" : 0.990128626981753
    },
    "euclideanDistance" : 42.027530347206586,
    "generation" : 40,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7853658536585368,
      "LackOfCohesion" : 0.5713975092633099,
      "MetricsIntensity" : 0.05630724000493276,
      "Density" : 3.3535967578520767
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "2f89f089-dda7-4477-8dd2-3bc7218e34a1",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.56987833668051,
      "MetricsIntensity" : 0.05604688394584106,
      "Density" : 0.9907268920131619
    },
    "euclideanDistance" : 43.02684560069883,
    "generation" : 25,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7859237536656893,
      "LackOfCohesion" : 0.56987833668051,
      "MetricsIntensity" : 0.05604688394584106,
      "Density" : 3.3590263691683573
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "a56e5a26-91fc-4d12-8180-4b1508167c37",
    "objectives" : {
      "NumberOfConcerns" : 1.0005473453749316,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.5711226872576165,
      "MetricsIntensity" : 0.055964706274812315,
      "Density" : 0.9898294944660485
    },
    "euclideanDistance" : 43.02685406337187,
    "generation" : 46,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.78515625,
      "LackOfCohesion" : 0.5711226872576165,
      "MetricsIntensity" : 0.055964706274812315,
      "Density" : 3.3559837728194735
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "a18434a1-6c41-437f-8ca6-6fb4e1db620a",
    "objectives" : {
      "NumberOfConcerns" : 1.0027367268746579,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.5675110914507304,
      "MetricsIntensity" : 0.05649362245100987,
      "Density" : 0.9931199521387974
    },
    "euclideanDistance" : 43.02693375725322,
    "generation" : 43,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7908113391984366,
      "LackOfCohesion" : 0.5675110914507304,
      "MetricsIntensity" : 0.05649362245100986,
      "Density" : 3.3671399594320484
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "2692e5f0-2d9a-486a-97b7-8bf8d2f22b5e",
    "objectives" : {
      "NumberOfConcerns" : 1.0005473453749316,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5723405186934043,
      "MetricsIntensity" : 0.05628019302961506,
      "Density" : 0.9892312294346396
    },
    "euclideanDistance" : 44.02624688234385,
    "generation" : 18,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7834146341463415,
      "LackOfCohesion" : 0.5723405186934043,
      "MetricsIntensity" : 0.05628019302961506,
      "Density" : 3.3505572441742655
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "178cc73b-b875-48bb-8744-5489e58d8f94",
    "objectives" : {
      "NumberOfConcerns" : 0.9994526546250684,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5720668580293736,
      "MetricsIntensity" : 0.055937337335863306,
      "Density" : 0.9889320969189351
    },
    "euclideanDistance" : 45.02562916580864,
    "generation" : 43,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.783203125,
      "LackOfCohesion" : 0.5720668580293736,
      "MetricsIntensity" : 0.055937337335863306,
      "Density" : 3.3529411764705883
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "9a262f6a-498b-49e2-bd54-4844185e1f71",
    "objectives" : {
      "NumberOfConcerns" : 1.0016420361247949,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.5690702145243983,
      "MetricsIntensity" : 0.055947952307333314,
      "Density" : 0.9946156147173197
    },
    "euclideanDistance" : 46.0252052474728,
    "generation" : 39,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.787109375,
      "LackOfCohesion" : 0.5690702145243983,
      "MetricsIntensity" : 0.05594795230733332,
      "Density" : 3.368794326241134
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "5d5c942a-472e-4da5-a69a-b0440839780c",
    "objectives" : {
      "NumberOfConcerns" : 1.0005473453749316,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.5690348992233242,
      "MetricsIntensity" : 0.056040361121252734,
      "Density" : 0.9940173496859108
    },
    "euclideanDistance" : 47.02463297805122,
    "generation" : 48,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7869012707722385,
      "LackOfCohesion" : 0.5690348992233242,
      "MetricsIntensity" : 0.056040361121252734,
      "Density" : 3.370182555780932
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "71679603-7b70-4cd1-9ea9-f981928657d8",
    "objectives" : {
      "NumberOfConcerns" : 1.0021893814997263,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.568768373641174,
      "MetricsIntensity" : 0.05640316461488427,
      "Density" : 0.9904277594974574
    },
    "euclideanDistance" : 48.02407739335558,
    "generation" : 46,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7880859375,
      "LackOfCohesion" : 0.568768373641174,
      "MetricsIntensity" : 0.056403164614884274,
      "Density" : 3.3580121703853956
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "022a43c3-9450-40c3-a06b-480c7977436e",
    "objectives" : {
      "NumberOfConcerns" : 0.9983579638752053,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.5708598875821247,
      "MetricsIntensity" : 0.05606386383543714,
      "Density" : 0.9958121447801376
    },
    "euclideanDistance" : 49.02364107876732,
    "generation" : 41,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7829912023460412,
      "LackOfCohesion" : 0.5708598875821247,
      "MetricsIntensity" : 0.056063863835437135,
      "Density" : 3.379695431472082
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "e907c3ce-bb7c-4899-9d72-3998f0b86d4f",
    "objectives" : {
      "NumberOfConcerns" : 0.9983579638752053,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.572076874316073,
      "MetricsIntensity" : 0.055930473304984504,
      "Density" : 0.9871373018247084
    },
    "euclideanDistance" : 50.02301029371041,
    "generation" : 41,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.78125,
      "LackOfCohesion" : 0.572076874316073,
      "MetricsIntensity" : 0.055930473304984504,
      "Density" : 3.3468559837728193
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "32d5e76a-5635-48a0-bf54-a5bf43dde288",
    "objectives" : {
      "NumberOfConcerns" : 0.9989053092501369,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.5706443825837323,
      "MetricsIntensity" : 0.05602490039150628,
      "Density" : 0.9883338318875262
    },
    "euclideanDistance" : 51.02257725145741,
    "generation" : 47,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7839687194525904,
      "LackOfCohesion" : 0.5706443825837323,
      "MetricsIntensity" : 0.05602490039150628,
      "Density" : 3.3543147208121824
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "42e03b10-1d6f-4272-a207-c84c3ed5b1fd",
    "objectives" : {
      "NumberOfConcerns" : 0.9961685823754789,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.5700172323119762,
      "MetricsIntensity" : 0.05604755443923149,
      "Density" : 0.992820819623093
    },
    "euclideanDistance" : 51.02260387316469,
    "generation" : 42,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7790811339198433,
      "LackOfCohesion" : 0.5700172323119762,
      "MetricsIntensity" : 0.05604755443923149,
      "Density" : 3.369543147208122
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "5084d319-918f-43e7-b4c2-c7136fa85b21",
    "objectives" : {
      "NumberOfConcerns" : 1.0005473453749316,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.567835851177463,
      "MetricsIntensity" : 0.05604058512072809,
      "Density" : 0.9931199521387974
    },
    "euclideanDistance" : 52.02223524927332,
    "generation" : 40,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7869012707722383,
      "LackOfCohesion" : 0.567835851177463,
      "MetricsIntensity" : 0.05604058512072809,
      "Density" : 3.367139959432049
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "03d853be-93ec-45d0-becf-bae45978980d",
    "objectives" : {
      "NumberOfConcerns" : 0.9978106185002736,
      "NumberOfRefactorings" : 53.0,
      "LackOfCohesion" : 0.5667994982721591,
      "MetricsIntensity" : 0.05656486595542916,
      "Density" : 0.9958121447801376
    },
    "euclideanDistance" : 53.02180428006374,
    "generation" : 43,
    "numberOfRefactorings" : 53,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7837573385518597,
      "LackOfCohesion" : 0.5667994982721591,
      "MetricsIntensity" : 0.05656486595542916,
      "Density" : 3.3831300813008136
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "86761a31-9159-44ab-97b4-13427ff1def0",
    "objectives" : {
      "NumberOfConcerns" : 0.9978106185002736,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.5668309676500337,
      "MetricsIntensity" : 0.056540270378728705,
      "Density" : 0.996111277295842
    },
    "euclideanDistance" : 55.02101741930269,
    "generation" : 44,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7837573385518593,
      "LackOfCohesion" : 0.5668309676500337,
      "MetricsIntensity" : 0.056540270378728705,
      "Density" : 3.3841463414634148
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "1406d118-8a2d-4b47-bec3-0a3325f0bb9d",
    "objectives" : {
      "NumberOfConcerns" : 0.9983579638752053,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.566398841427742,
      "MetricsIntensity" : 0.05620615069382425,
      "Density" : 0.9898294944660485
    },
    "euclideanDistance" : 56.02053594737464,
    "generation" : 41,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.786483839373164,
      "LackOfCohesion" : 0.566398841427742,
      "MetricsIntensity" : 0.05620615069382426,
      "Density" : 3.362804878048781
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "e5555bcc-45e7-4573-b6cd-5ab5d1aed5fb",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 56.0,
      "LackOfCohesion" : 0.5670903003441714,
      "MetricsIntensity" : 0.05610368291703771,
      "Density" : 0.9904277594974574
    },
    "euclideanDistance" : 56.02058270117123,
    "generation" : 41,
    "numberOfRefactorings" : 56,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7876712328767124,
      "LackOfCohesion" : 0.5670903003441714,
      "MetricsIntensity" : 0.05610368291703772,
      "Density" : 3.3614213197969547
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "bc1cf798-a8d0-4647-8569-2df2a48b8c52",
    "objectives" : {
      "NumberOfConcerns" : 0.9978106185002736,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.5729594569192369,
      "MetricsIntensity" : 0.05596979630019245,
      "Density" : 0.9982052049057732
    },
    "euclideanDistance" : 57.02037754012914,
    "generation" : 36,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7802734375,
      "LackOfCohesion" : 0.5729594569192369,
      "MetricsIntensity" : 0.05596979630019245,
      "Density" : 3.3878172588832483
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "a36cb02d-804c-48ee-82eb-e257ed094a6e",
    "objectives" : {
      "NumberOfConcerns" : 0.9983579638752053,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.566430349704724,
      "MetricsIntensity" : 0.05617988765511665,
      "Density" : 0.990128626981753
    },
    "euclideanDistance" : 58.01983344377029,
    "generation" : 38,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7864838393731635,
      "LackOfCohesion" : 0.566430349704724,
      "MetricsIntensity" : 0.05617988765511665,
      "Density" : 3.363821138211381
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d3e1e0e9-60b6-41e2-9eb5-f9b6712d74cb",
    "objectives" : {
      "NumberOfConcerns" : 0.9972632731253421,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.5692404683848598,
      "MetricsIntensity" : 0.05622965384955926,
      "Density" : 0.9934190846545019
    },
    "euclideanDistance" : 60.01923534999842,
    "generation" : 48,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7845249755142016,
      "LackOfCohesion" : 0.5692404683848598,
      "MetricsIntensity" : 0.05622965384955927,
      "Density" : 3.3715736040609143
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "fe29fbd9-ce1e-427f-8814-3facaf889dde",
    "objectives" : {
      "NumberOfConcerns" : 0.9967159277504105,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.5680123037334169,
      "MetricsIntensity" : 0.05619056121686505,
      "Density" : 0.9976069398743643
    },
    "euclideanDistance" : 60.019284047741515,
    "generation" : 45,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.783545543584721,
      "LackOfCohesion" : 0.5680123037334169,
      "MetricsIntensity" : 0.05619056121686504,
      "Density" : 3.392675483214649
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "34df2d0e-dce5-497f-8cba-f418b3ef427d",
    "objectives" : {
      "NumberOfConcerns" : 0.9961685823754789,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.5665140398970874,
      "MetricsIntensity" : 0.05621450119626383,
      "Density" : 0.9943164822016153
    },
    "euclideanDistance" : 61.01889146271698,
    "generation" : 41,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.78256611165524,
      "LackOfCohesion" : 0.5665140398970874,
      "MetricsIntensity" : 0.05621450119626383,
      "Density" : 3.3849287169042768
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "4a2fef40-1659-4e96-b3dc-bf3a7cc6675a",
    "objectives" : {
      "NumberOfConcerns" : 0.9950738916256158,
      "NumberOfRefactorings" : 63.0,
      "LackOfCohesion" : 0.5717603854076236,
      "MetricsIntensity" : 0.05611399117139359,
      "Density" : 0.992820819623093
    },
    "euclideanDistance" : 63.01829832634327,
    "generation" : 41,
    "numberOfRefactorings" : 63,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7788649706457929,
      "LackOfCohesion" : 0.5717603854076236,
      "MetricsIntensity" : 0.05611399117139359,
      "Density" : 3.376398779247202
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "065ca125-e8e6-4653-bcec-eacee6559ec9",
    "objectives" : {
      "NumberOfConcerns" : 0.9972632731253421,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.5730127358379361,
      "MetricsIntensity" : 0.056435761675906394,
      "Density" : 0.9880346993718218
    },
    "euclideanDistance" : 66.01743917476439,
    "generation" : 40,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.779296875,
      "LackOfCohesion" : 0.5730127358379361,
      "MetricsIntensity" : 0.056435761675906394,
      "Density" : 3.3498985801217045
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "7d262eee-79ac-4474-8a1e-7177e4730a68",
    "objectives" : {
      "NumberOfConcerns" : 0.9972632731253421,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.5689602867540693,
      "MetricsIntensity" : 0.056630524263841096,
      "Density" : 0.9904277594974574
    },
    "euclideanDistance" : 66.01744015036398,
    "generation" : 43,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7827788649706462,
      "LackOfCohesion" : 0.5689602867540693,
      "MetricsIntensity" : 0.0566305242638411,
      "Density" : 3.361421319796955
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "2cbbcb33-6e05-4440-8c21-32f6809f91df",
    "objectives" : {
      "NumberOfConcerns" : 0.9945265462506842,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.5676031093998629,
      "MetricsIntensity" : 0.05631222938736583,
      "Density" : 0.9946156147173197
    },
    "euclideanDistance" : 67.01718949366062,
    "generation" : 39,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.781372549019608,
      "LackOfCohesion" : 0.5676031093998629,
      "MetricsIntensity" : 0.056312229387365825,
      "Density" : 3.3825025432349944
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "7f42e915-bb38-43aa-a428-04f7ec41dfd9",
    "objectives" : {
      "NumberOfConcerns" : 0.9950738916256158,
      "NumberOfRefactorings" : 70.0,
      "LackOfCohesion" : 0.5704859757708266,
      "MetricsIntensity" : 0.056174436678267665,
      "Density" : 0.9913251570445707
    },
    "euclideanDistance" : 70.01643740888757,
    "generation" : 39,
    "numberOfRefactorings" : 70,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7788649706457929,
      "LackOfCohesion" : 0.5704859757708266,
      "MetricsIntensity" : 0.05617443667826767,
      "Density" : 3.364467005076142
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "56f21032-0a36-4835-b4eb-f29e34ccb3d8",
    "objectives" : {
      "NumberOfConcerns" : 0.9978106185002736,
      "NumberOfRefactorings" : 71.0,
      "LackOfCohesion" : 0.5677169587893287,
      "MetricsIntensity" : 0.05628991232286596,
      "Density" : 0.9907268920131619
    },
    "euclideanDistance" : 71.01621390150615,
    "generation" : 43,
    "numberOfRefactorings" : 71,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.785504407443683,
      "LackOfCohesion" : 0.5677169587893287,
      "MetricsIntensity" : 0.05628991232286596,
      "Density" : 3.3658536585365857
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "1ee213f3-2d59-434b-826c-2e990f4c883d",
    "objectives" : {
      "NumberOfConcerns" : 0.9967159277504105,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.5675304546679254,
      "MetricsIntensity" : 0.05671980043615026,
      "Density" : 0.9898294944660485
    },
    "euclideanDistance" : 72.01596012705436,
    "generation" : 42,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.783545543584721,
      "LackOfCohesion" : 0.5675304546679254,
      "MetricsIntensity" : 0.05671980043615027,
      "Density" : 3.36280487804878
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "90fce71f-23b0-4b5d-94c9-9d5074a30333",
    "objectives" : {
      "NumberOfConcerns" : 0.9972632731253421,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.5673381733878816,
      "MetricsIntensity" : 0.05671421216644106,
      "Density" : 0.9907268920131619
    },
    "euclideanDistance" : 72.01597852501435,
    "generation" : 42,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7845249755142016,
      "LackOfCohesion" : 0.5673381733878816,
      "MetricsIntensity" : 0.05671421216644107,
      "Density" : 3.3658536585365852
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "1dbc9b32-d296-4457-b6b5-786742c267e0",
    "objectives" : {
      "NumberOfConcerns" : 0.9967159277504105,
      "NumberOfRefactorings" : 73.0,
      "LackOfCohesion" : 0.5701055961581236,
      "MetricsIntensity" : 0.0561847676905828,
      "Density" : 0.9880346993718218
    },
    "euclideanDistance" : 73.01573688135103,
    "generation" : 45,
    "numberOfRefactorings" : 73,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.781800391389433,
      "LackOfCohesion" : 0.5701055961581236,
      "MetricsIntensity" : 0.0561847676905828,
      "Density" : 3.356707317073171
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "b2bc4741-8624-41fb-b559-fbf57d07ea83",
    "objectives" : {
      "NumberOfConcerns" : 0.9972632731253421,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.5673696816648637,
      "MetricsIntensity" : 0.05668934788115816,
      "Density" : 0.9910260245288662
    },
    "euclideanDistance" : 74.01555099203851,
    "generation" : 37,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7845249755142016,
      "LackOfCohesion" : 0.5673696816648637,
      "MetricsIntensity" : 0.05668934788115817,
      "Density" : 3.366869918699187
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mForwardingRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfControllerListener2, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mPipelineDraweeController, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mEnabled, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfState, com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginListener], extractedMethods=[com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset(), com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "07f83edc-ce32-47b0-a30a-95f074ca3205",
    "objectives" : {
      "NumberOfConcerns" : 0.9972632731253421,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.5685041667994927,
      "MetricsIntensity" : 0.05619336652854672,
      "Density" : 0.9919234220759796
    },
    "euclideanDistance" : 74.01557134004506,
    "generation" : 39,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7827788649706464,
      "LackOfCohesion" : 0.5685041667994927,
      "MetricsIntensity" : 0.05619336652854673,
      "Density" : 3.366497461928934
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "2f0d61c3-e9fa-4f89-907a-398637e5653e",
    "objectives" : {
      "NumberOfConcerns" : 0.9967159277504105,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.5687619653616526,
      "MetricsIntensity" : 0.056416299424471586,
      "Density" : 0.9913251570445707
    },
    "euclideanDistance" : 77.01495206243852,
    "generation" : 45,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.785294117647059,
      "LackOfCohesion" : 0.5687619653616526,
      "MetricsIntensity" : 0.056416299424471586,
      "Density" : 3.367886178861789
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "43b33d3b-4f44-449a-bce2-15fc05b0ea2b",
    "objectives" : {
      "NumberOfConcerns" : 0.9956212370005474,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.5701156371763951,
      "MetricsIntensity" : 0.05617788671147961,
      "Density" : 0.986239904277595
    },
    "euclideanDistance" : 78.01469168426588,
    "generation" : 45,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7798434442270066,
      "LackOfCohesion" : 0.5701156371763951,
      "MetricsIntensity" : 0.056177886711479615,
      "Density" : 3.3506097560975605
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "27517182-cbcc-4997-a19a-af233daaf2db",
    "objectives" : {
      "NumberOfConcerns" : 0.9950738916256158,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.5670670328189478,
      "MetricsIntensity" : 0.05635951518133192,
      "Density" : 0.9886329644032307
    },
    "euclideanDistance" : 78.01469290206019,
    "generation" : 46,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7823529411764707,
      "LackOfCohesion" : 0.5670670328189478,
      "MetricsIntensity" : 0.05635951518133193,
      "Density" : 3.3621566632756874
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "518a457f-e3de-4607-89a5-b372c895c839",
    "objectives" : {
      "NumberOfConcerns" : 0.9978106185002736,
      "NumberOfRefactorings" : 79.0,
      "LackOfCohesion" : 0.5741871413114833,
      "MetricsIntensity" : 0.05609342516718274,
      "Density" : 0.989530361950344
    },
    "euclideanDistance" : 79.01460392682613,
    "generation" : 46,
    "numberOfRefactorings" : 79,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7820136852394919,
      "LackOfCohesion" : 0.5741871413114833,
      "MetricsIntensity" : 0.05609342516718274,
      "Density" : 3.358375634517767
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.debug.FlipperImageTracker.mImageDebugDataMap], extractedMethods=[com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String), com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey), com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "475d39fc-a57e-4c30-8bdf-76367688a4a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9928845101258894,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.5706714918853105,
      "MetricsIntensity" : 0.05624701033172192,
      "Density" : 0.9850433742147772
    },
    "euclideanDistance" : 80.01427972416771,
    "generation" : 8,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.776689520078355,
      "LackOfCohesion" : 0.5706714918853105,
      "MetricsIntensity" : 0.05624701033172192,
      "Density" : 3.3499491353001023
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "4657ad27-b3fd-413f-acc6-e422b736ed01",
    "objectives" : {
      "NumberOfConcerns" : 0.9939792008757526,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.5694594261374821,
      "MetricsIntensity" : 0.05625412436960587,
      "Density" : 0.9859407717618905
    },
    "euclideanDistance" : 80.01429573783501,
    "generation" : 40,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7786483839373166,
      "LackOfCohesion" : 0.5694594261374821,
      "MetricsIntensity" : 0.05625412436960587,
      "Density" : 3.353001017293998
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "0c2833a1-d93a-4045-98a6-f37361c8a775",
    "objectives" : {
      "NumberOfConcerns" : 0.9956212370005474,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.5749674585760791,
      "MetricsIntensity" : 0.05607474265774805,
      "Density" : 0.9880346993718218
    },
    "euclideanDistance" : 80.01438124593551,
    "generation" : 40,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7781036168132947,
      "LackOfCohesion" : 0.5749674585760791,
      "MetricsIntensity" : 0.056074742657748054,
      "Density" : 3.3532994923857866
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "0ad9fca7-c6cb-41eb-bacb-ae5472b92f68",
    "objectives" : {
      "NumberOfConcerns" : 0.993431855500821,
      "NumberOfRefactorings" : 82.0,
      "LackOfCohesion" : 0.5745100914729614,
      "MetricsIntensity" : 0.056155821768779736,
      "Density" : 0.9868381693090039
    },
    "euclideanDistance" : 82.0139864397863,
    "generation" : 40,
    "numberOfRefactorings" : 82,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.775929549902153,
      "LackOfCohesion" : 0.5745100914729614,
      "MetricsIntensity" : 0.056155821768779736,
      "Density" : 3.3526422764227646
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "ad1975e2-3fa4-45f1-9caf-0317cbad1f25",
    "objectives" : {
      "NumberOfConcerns" : 0.9917898193760263,
      "NumberOfRefactorings" : 82.0,
      "LackOfCohesion" : 0.5700885770650366,
      "MetricsIntensity" : 0.056341768374427795,
      "Density" : 0.9946156147173197
    },
    "euclideanDistance" : 82.01402979153885,
    "generation" : 48,
    "numberOfRefactorings" : 82,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7764705882352936,
      "LackOfCohesion" : 0.5700885770650366,
      "MetricsIntensity" : 0.056341768374427795,
      "Density" : 3.3859470468431763
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "f2ff58e5-a32d-4bea-a345-c3a2f9e12828",
    "objectives" : {
      "NumberOfConcerns" : 0.9928845101258894,
      "NumberOfRefactorings" : 82.0,
      "LackOfCohesion" : 0.568875011235837,
      "MetricsIntensity" : 0.056348861004340625,
      "Density" : 0.9955130122644331
    },
    "euclideanDistance" : 82.01404550307576,
    "generation" : 40,
    "numberOfRefactorings" : 82,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7784313725490202,
      "LackOfCohesion" : 0.568875011235837,
      "MetricsIntensity" : 0.05634886100434063,
      "Density" : 3.3890020366598774
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "06f91318-579d-42d8-a2ff-fe506ba36a89",
    "objectives" : {
      "NumberOfConcerns" : 0.9939792008757526,
      "NumberOfRefactorings" : 84.0,
      "LackOfCohesion" : 0.5681125289583123,
      "MetricsIntensity" : 0.056486176201917336,
      "Density" : 0.9892312294346396
    },
    "euclideanDistance" : 84.01364481803373,
    "generation" : 45,
    "numberOfRefactorings" : 84,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7821393523061824,
      "LackOfCohesion" : 0.5681125289583123,
      "MetricsIntensity" : 0.056486176201917336,
      "Density" : 3.364191251271616
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "54e028a2-e25a-4002-a0cb-9cf7cccfb10a",
    "objectives" : {
      "NumberOfConcerns" : 0.9923371647509579,
      "NumberOfRefactorings" : 86.0,
      "LackOfCohesion" : 0.5715276358060756,
      "MetricsIntensity" : 0.056367438654264586,
      "Density" : 0.9865390367932995
    },
    "euclideanDistance" : 86.01330021250372,
    "generation" : 47,
    "numberOfRefactorings" : 86,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7774509803921568,
      "LackOfCohesion" : 0.5715276358060756,
      "MetricsIntensity" : 0.05636743865426459,
      "Density" : 3.355035605289929
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "73e0deea-a09b-4f0d-808b-9ceba6ddabce",
    "objectives" : {
      "NumberOfConcerns" : 0.9950738916256158,
      "NumberOfRefactorings" : 86.0,
      "LackOfCohesion" : 0.5735468079762418,
      "MetricsIntensity" : 0.056162583452128725,
      "Density" : 0.9874364343404128
    },
    "euclideanDistance" : 86.013355433551,
    "generation" : 45,
    "numberOfRefactorings" : 86,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7788649706457929,
      "LackOfCohesion" : 0.5735468079762418,
      "MetricsIntensity" : 0.056162583452128725,
      "Density" : 3.3546747967479673
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "d5311c7d-4f55-46c8-abd0-48d23eae364f",
    "objectives" : {
      "NumberOfConcerns" : 0.9923371647509579,
      "NumberOfRefactorings" : 90.0,
      "LackOfCohesion" : 0.5697615762958208,
      "MetricsIntensity" : 0.05644276737730828,
      "Density" : 0.9973078073586599
    },
    "euclideanDistance" : 90.01281669824013,
    "generation" : 46,
    "numberOfRefactorings" : 90,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7791952894995096,
      "LackOfCohesion" : 0.5697615762958208,
      "MetricsIntensity" : 0.05644276737730829,
      "Density" : 3.395112016293279
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "8d456172-ad95-498e-9297-05cd3b29ed4b",
    "objectives" : {
      "NumberOfConcerns" : 0.9923371647509579,
      "NumberOfRefactorings" : 94.0,
      "LackOfCohesion" : 0.573946253025677,
      "MetricsIntensity" : 0.056364356226660924,
      "Density" : 0.9877355668561173
    },
    "euclideanDistance" : 94.01219572928075,
    "generation" : 26,
    "numberOfRefactorings" : 94,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7774509803921568,
      "LackOfCohesion" : 0.573946253025677,
      "MetricsIntensity" : 0.05636435622666093,
      "Density" : 3.35910478128179
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "31287e08-7846-4d4f-aa53-e78f7a4233ba",
    "objectives" : {
      "NumberOfConcerns" : 0.9906951286261632,
      "NumberOfRefactorings" : 97.0,
      "LackOfCohesion" : 0.5719230452124763,
      "MetricsIntensity" : 0.05645563695005572,
      "Density" : 0.9922225545916841
    },
    "euclideanDistance" : 97.01183569876571,
    "generation" : 33,
    "numberOfRefactorings" : 97,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7762512266928363,
      "LackOfCohesion" : 0.5719230452124763,
      "MetricsIntensity" : 0.056455636950055725,
      "Density" : 3.377800407331976
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.PLACEHOLDER_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions, com.facebook.fresco.vito.core.FrescoDrawable2.PROGRESS_DRAWABLE_INDEX], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float), com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.close(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "72293967-aaca-4f8a-a160-39c582c006f4",
    "objectives" : {
      "NumberOfConcerns" : 0.9912424740010947,
      "NumberOfRefactorings" : 98.0,
      "LackOfCohesion" : 0.5733982601910271,
      "MetricsIntensity" : 0.0564324889615599,
      "Density" : 0.9958121447801376
    },
    "euclideanDistance" : 98.01176548588724,
    "generation" : 42,
    "numberOfRefactorings" : 98,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7772325809617273,
      "LackOfCohesion" : 0.5733982601910271,
      "MetricsIntensity" : 0.05643248896155989,
      "Density" : 3.3900203665987787
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.FadeDrawable.mTransitionState, com.facebook.drawee.drawable.FadeDrawable.mStartAlphas, com.facebook.drawee.drawable.FadeDrawable.mAlphas, com.facebook.drawee.drawable.FadeDrawable.mIsLayerOn, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_NONE, com.facebook.drawee.drawable.FadeDrawable.TRANSITION_STARTING, com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs, com.facebook.drawee.drawable.FadeDrawable.mAlpha, com.facebook.drawee.drawable.FadeDrawable.mMutateDrawables, com.facebook.drawee.drawable.FadeDrawable.mOnFadeListenerShowImmediately, com.facebook.drawee.drawable.FadeDrawable.mDefaultLayerIsOn, com.facebook.drawee.drawable.FadeDrawable.mLayers], extractedMethods=[com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean), com.facebook.drawee.drawable.FadeDrawable.reset(), com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs(), com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int), com.facebook.drawee.drawable.FadeDrawable.getTransitionState(), com.facebook.drawee.drawable.FadeDrawable.getAlpha(), com.facebook.drawee.drawable.FadeDrawable.invalidateSelf(), com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately(), com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float), com.facebook.drawee.drawable.FadeDrawable.setAlpha(int), com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int), com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int), com.facebook.drawee.drawable.FadeDrawable.draw(Canvas), com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn(), com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int), com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener), com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately(), com.facebook.drawee.drawable.FadeDrawable.resetInternal(), com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers(), com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int), com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers(), com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "27348c0a-6185-4b49-aa8c-39a532b2cec1",
    "objectives" : {
      "NumberOfConcerns" : 0.9928845101258894,
      "NumberOfRefactorings" : 100.0,
      "LackOfCohesion" : 0.5748295744210452,
      "MetricsIntensity" : 0.05624180060475858,
      "Density" : 0.9907268920131619
    },
    "euclideanDistance" : 100.0115040963027,
    "generation" : 44,
    "numberOfRefactorings" : 100,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7749510763209395,
      "LackOfCohesion" : 0.5748295744210452,
      "MetricsIntensity" : 0.05624180060475858,
      "Density" : 3.3658536585365852
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "813cd6cb-df49-4324-a5ed-ae2f4d45eac0",
    "objectives" : {
      "NumberOfConcerns" : 0.9923371647509579,
      "NumberOfRefactorings" : 102.0,
      "LackOfCohesion" : 0.5758493156156836,
      "MetricsIntensity" : 0.056232629147174404,
      "Density" : 0.986239904277595
    },
    "euclideanDistance" : 102.01123549266626,
    "generation" : 32,
    "numberOfRefactorings" : 102,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7739726027397265,
      "LackOfCohesion" : 0.5758493156156836,
      "MetricsIntensity" : 0.0562326291471744,
      "Density" : 3.3506097560975605
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "bb313d0a-65f4-49a8-8df9-5e502da54145",
    "objectives" : {
      "NumberOfConcerns" : 0.9928845101258894,
      "NumberOfRefactorings" : 102.0,
      "LackOfCohesion" : 0.575657271719936,
      "MetricsIntensity" : 0.05622756623536546,
      "Density" : 0.9871373018247084
    },
    "euclideanDistance" : 102.01124841181384,
    "generation" : 40,
    "numberOfRefactorings" : 102,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7749510763209397,
      "LackOfCohesion" : 0.575657271719936,
      "MetricsIntensity" : 0.05622756623536547,
      "Density" : 3.3536585365853666
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "06a85cf8-2a79-4d4a-848f-7e3e7a9512a0",
    "objectives" : {
      "NumberOfConcerns" : 0.9906951286261632,
      "NumberOfRefactorings" : 104.0,
      "LackOfCohesion" : 0.5752001919419611,
      "MetricsIntensity" : 0.056308934472093876,
      "Density" : 0.9859407717618905
    },
    "euclideanDistance" : 104.01099740892893,
    "generation" : 43,
    "numberOfRefactorings" : 104,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.772771792360431,
      "LackOfCohesion" : 0.5752001919419611,
      "MetricsIntensity" : 0.05630893447209387,
      "Density" : 3.353001017293998
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "cbc2068b-05dd-40fa-a024-8c09f0416cdc",
    "objectives" : {
      "NumberOfConcerns" : 0.9917898193760263,
      "NumberOfRefactorings" : 104.0,
      "LackOfCohesion" : 0.572846450803975,
      "MetricsIntensity" : 0.05638800926225284,
      "Density" : 0.9889320969189351
    },
    "euclideanDistance" : 104.01102329273527,
    "generation" : 47,
    "numberOfRefactorings" : 104,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7764705882352936,
      "LackOfCohesion" : 0.572846450803975,
      "MetricsIntensity" : 0.05638800926225284,
      "Density" : 3.363173957273652
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "0c0d27a9-3c79-455e-8805-63fd8be9d00c",
    "objectives" : {
      "NumberOfConcerns" : 0.9896004378762999,
      "NumberOfRefactorings" : 106.0,
      "LackOfCohesion" : 0.5746228819484901,
      "MetricsIntensity" : 0.05640382957853428,
      "Density" : 0.9955130122644331
    },
    "euclideanDistance" : 106.01086608472114,
    "generation" : 33,
    "numberOfRefactorings" : 106,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7725490196078426,
      "LackOfCohesion" : 0.5746228819484901,
      "MetricsIntensity" : 0.05640382957853428,
      "Density" : 3.3890020366598774
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "2b4186cb-f8e8-409f-ac1a-b4fc2efe9bb6",
    "objectives" : {
      "NumberOfConcerns" : 0.9912424740010947,
      "NumberOfRefactorings" : 106.0,
      "LackOfCohesion" : 0.575305029886422,
      "MetricsIntensity" : 0.056301229098416394,
      "Density" : 0.996111277295842
    },
    "euclideanDistance" : 106.01089069064946,
    "generation" : 35,
    "numberOfRefactorings" : 106,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7737512242899127,
      "LackOfCohesion" : 0.575305029886422,
      "MetricsIntensity" : 0.0563012290984164,
      "Density" : 3.3875890132248228
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "2c04ecd8-5b95-4b12-808e-0fe553c39c7a",
    "objectives" : {
      "NumberOfConcerns" : 0.9917898193760263,
      "NumberOfRefactorings" : 108.0,
      "LackOfCohesion" : 0.5744279990163897,
      "MetricsIntensity" : 0.056320773683562246,
      "Density" : 0.9856416392461861
    },
    "euclideanDistance" : 108.01059335103402,
    "generation" : 41,
    "numberOfRefactorings" : 108,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7747306562193925,
      "LackOfCohesion" : 0.5744279990163897,
      "MetricsIntensity" : 0.05632077368356225,
      "Density" : 3.351983723296032
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "53a13380-d83e-4cb6-8106-3d031f99ca1f",
    "objectives" : {
      "NumberOfConcerns" : 0.9923371647509579,
      "NumberOfRefactorings" : 108.0,
      "LackOfCohesion" : 0.5742357177363457,
      "MetricsIntensity" : 0.05631570451351869,
      "Density" : 0.9865390367932995
    },
    "euclideanDistance" : 108.01060554611183,
    "generation" : 44,
    "numberOfRefactorings" : 108,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7757100881488739,
      "LackOfCohesion" : 0.5742357177363457,
      "MetricsIntensity" : 0.056315704513518694,
      "Density" : 3.3550356052899293
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "f6003a59-962a-4c1f-82a2-414c3afa42b9",
    "objectives" : {
      "NumberOfConcerns" : 0.9896004378762999,
      "NumberOfRefactorings" : 108.0,
      "LackOfCohesion" : 0.5746544292208644,
      "MetricsIntensity" : 0.056377772637138224,
      "Density" : 0.9958121447801376
    },
    "euclideanDistance" : 108.01066779267966,
    "generation" : 36,
    "numberOfRefactorings" : 108,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7725490196078426,
      "LackOfCohesion" : 0.5746544292208644,
      "MetricsIntensity" : 0.056377772637138224,
      "Density" : 3.3900203665987783
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "4ac95cf3-48c5-4ca9-990e-870ad715a219",
    "objectives" : {
      "NumberOfConcerns" : 0.9901477832512315,
      "NumberOfRefactorings" : 110.0,
      "LackOfCohesion" : 0.5737763129165868,
      "MetricsIntensity" : 0.05639728253553778,
      "Density" : 0.9853425067304816
    },
    "euclideanDistance" : 110.01037993025471,
    "generation" : 21,
    "numberOfRefactorings" : 110,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7735294117647058,
      "LackOfCohesion" : 0.5737763129165868,
      "MetricsIntensity" : 0.05639728253553778,
      "Density" : 3.354378818737271
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "0e7b3582-ed86-473f-b65e-2749c82e23e6",
    "objectives" : {
      "NumberOfConcerns" : 0.9917898193760263,
      "NumberOfRefactorings" : 110.0,
      "LackOfCohesion" : 0.5726664960525474,
      "MetricsIntensity" : 0.056393627465360426,
      "Density" : 0.9874364343404128
    },
    "euclideanDistance" : 110.01040771179153,
    "generation" : 35,
    "numberOfRefactorings" : 110,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7764705882352936,
      "LackOfCohesion" : 0.5726664960525474,
      "MetricsIntensity" : 0.05639362746536043,
      "Density" : 3.3615071283095723
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.ResizeOptions.width, com.facebook.imagepipeline.common.ResizeOptions.height], extractedMethods=[com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int), com.facebook.imagepipeline.common.ResizeOptions.toString(), com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int), com.facebook.imagepipeline.common.ResizeOptions.hashCode(), com.facebook.imagepipeline.common.ResizeOptions.equals(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "241be48c-e58e-48eb-a6e1-28c698f8121a",
    "objectives" : {
      "NumberOfConcerns" : 0.9906951286261632,
      "NumberOfRefactorings" : 112.0,
      "LackOfCohesion" : 0.573881280610979,
      "MetricsIntensity" : 0.05638956762550674,
      "Density" : 0.9955130122644331
    },
    "euclideanDistance" : 112.01028989562987,
    "generation" : 36,
    "numberOfRefactorings" : 112,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774509803921569,
      "LackOfCohesion" : 0.573881280610979,
      "MetricsIntensity" : 0.056389567625506745,
      "Density" : 3.3890020366598774
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "3f988133-bee5-4171-8949-93655b39426f",
    "objectives" : {
      "NumberOfConcerns" : 0.9890530925013684,
      "NumberOfRefactorings" : 112.0,
      "LackOfCohesion" : 0.5754849831604372,
      "MetricsIntensity" : 0.05652558477823509,
      "Density" : 0.9970086748429554
    },
    "euclideanDistance" : 112.01029698391606,
    "generation" : 45,
    "numberOfRefactorings" : 112,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.773307163886163,
      "LackOfCohesion" : 0.5754849831604372,
      "MetricsIntensity" : 0.05652558477823509,
      "Density" : 3.394093686354379
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "eafe8b7b-979a-440a-ac0b-af89a125a59e",
    "objectives" : {
      "NumberOfConcerns" : 0.9890530925013684,
      "NumberOfRefactorings" : 112.0,
      "LackOfCohesion" : 0.5754849831604372,
      "MetricsIntensity" : 0.05652558477823509,
      "Density" : 0.9970086748429554
    },
    "euclideanDistance" : 112.01029698391606,
    "generation" : 44,
    "numberOfRefactorings" : 112,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.773307163886163,
      "LackOfCohesion" : 0.5754849831604372,
      "MetricsIntensity" : 0.05652558477823509,
      "Density" : 3.394093686354379
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpDecodingTest.mInstrumentation, com.facebook.webpsupport.WebpDecodingTest.mWebpBitmapFactory], extractedMethods=[com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String), com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int), com.facebook.webpsupport.WebpDecodingTest.setUp(), com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap(), com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "aff2564d-f8fc-499b-aba1-75818ad64cb7",
    "objectives" : {
      "NumberOfConcerns" : 0.9901477832512315,
      "NumberOfRefactorings" : 114.0,
      "LackOfCohesion" : 0.5724384565269693,
      "MetricsIntensity" : 0.05663016165217897,
      "Density" : 0.9886329644032307
    },
    "euclideanDistance" : 114.01003763060821,
    "generation" : 33,
    "numberOfRefactorings" : 114,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7770137524557958,
      "LackOfCohesion" : 0.5724384565269693,
      "MetricsIntensity" : 0.056630161652178976,
      "Density" : 3.3655804480651725
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "df309b97-6375-423f-8f80-986600becd8b",
    "objectives" : {
      "NumberOfConcerns" : 0.9890530925013684,
      "NumberOfRefactorings" : 114.0,
      "LackOfCohesion" : 0.5732281094993977,
      "MetricsIntensity" : 0.056466315479056076,
      "Density" : 0.9937182171702064
    },
    "euclideanDistance" : 114.0100762249777,
    "generation" : 33,
    "numberOfRefactorings" : 114,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7733071638861633,
      "LackOfCohesion" : 0.5732281094993977,
      "MetricsIntensity" : 0.05646631547905609,
      "Density" : 3.3863404689092764
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "f5936a0b-ff99-4039-9e80-68f734ce75e8",
    "objectives" : {
      "NumberOfConcerns" : 0.9901477832512315,
      "NumberOfRefactorings" : 116.0,
      "LackOfCohesion" : 0.5724700820804166,
      "MetricsIntensity" : 0.05660207146279845,
      "Density" : 0.9871373018247084
    },
    "euclideanDistance" : 116.00985198884922,
    "generation" : 42,
    "numberOfRefactorings" : 116,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7770137524557956,
      "LackOfCohesion" : 0.5724700820804166,
      "MetricsIntensity" : 0.05660207146279845,
      "Density" : 3.360488798370672
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.ResizeOptions(int, int)', targetType='com.facebook.imageutils.BitmapUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "2c5a5cac-6417-42e7-9548-fba1d30171e0",
    "objectives" : {
      "NumberOfConcerns" : 0.9896004378762999,
      "NumberOfRefactorings" : 116.0,
      "LackOfCohesion" : 0.5746373650962763,
      "MetricsIntensity" : 0.05651810679845648,
      "Density" : 0.9868381693090039
    },
    "euclideanDistance" : 116.00985544770242,
    "generation" : 35,
    "numberOfRefactorings" : 116,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7742885181550543,
      "LackOfCohesion" : 0.5746373650962763,
      "MetricsIntensity" : 0.05651810679845649,
      "Density" : 3.359470468431771
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config), com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "0e4f957d-07f2-47f2-b31f-19a60701d529",
    "objectives" : {
      "NumberOfConcerns" : 0.9885057471264368,
      "NumberOfRefactorings" : 118.0,
      "LackOfCohesion" : 0.5740579242754693,
      "MetricsIntensity" : 0.056614420864548785,
      "Density" : 0.9964104098115465
    },
    "euclideanDistance" : 118.0097569059862,
    "generation" : 24,
    "numberOfRefactorings" : 118,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774066797642436,
      "LackOfCohesion" : 0.5740579242754693,
      "MetricsIntensity" : 0.056614420864548785,
      "Density" : 3.3955147808358817
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "fbf31ad5-7aa5-4908-a18e-f2f8bef9012e",
    "objectives" : {
      "NumberOfConcerns" : 0.9885057471264368,
      "NumberOfRefactorings" : 118.0,
      "LackOfCohesion" : 0.5740579242754693,
      "MetricsIntensity" : 0.056614420864548785,
      "Density" : 0.9964104098115465
    },
    "euclideanDistance" : 118.0097569059862,
    "generation" : 39,
    "numberOfRefactorings" : 118,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774066797642436,
      "LackOfCohesion" : 0.5740579242754693,
      "MetricsIntensity" : 0.05661442086454879,
      "Density" : 3.3955147808358817
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkFinalImageBounds(Bitmap, int, int, int, int)', targetType='com.facebook.common.internal.Preconditions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  }, {
    "solutionId" : "7700f5d3-0c24-4153-8bc1-2dad13435d02",
    "objectives" : {
      "NumberOfConcerns" : 0.9885057471264368,
      "NumberOfRefactorings" : 120.0,
      "LackOfCohesion" : 0.5740895498289165,
      "MetricsIntensity" : 0.056586514822817846,
      "Density" : 0.9949147472330242
    },
    "euclideanDistance" : 120.00958203331619,
    "generation" : 40,
    "numberOfRefactorings" : 120,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7740667976424358,
      "LackOfCohesion" : 0.5740895498289165,
      "MetricsIntensity" : 0.05658651482281785,
      "Density" : 3.390417940876657
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.debug.FlipperImageTracker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getImageDebugData(CacheKey)', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getCacheKey(String)', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getLocalPath(CacheKey)', targetType='com.facebook.samples.scrollperf.conf.Const'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.trackImage(String, CacheKey)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageVisibilityUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.getUriString(CacheKey)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.debug.FlipperImageTracker.onImageLoadStatusUpdated(ImagePerfData, int)', targetType='com.facebook.fresco.vito.core.impl.VitoImagePipelineImpl'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.ResizeOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forSquareSize(int)', targetType='com.facebook.imagepipeline.producers.ThumbnailSizeChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.hashCode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.toString()', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.ResizeOptions.forDimensions(int, int)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.samples.animation2.MediaControlFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.datasource.ListDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream.InvalidStreamException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.memory.BucketMap.LinkedEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageId()', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setVisible(boolean, boolean)', targetType='com.facebook.fresco.vito.options.RoundingOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.fresco.vito.core.impl.ImagePipelineUtilsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showImageImmediately()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest()', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener)', targetType='com.facebook.imagepipeline.request.BasePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpDecodingTest",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.getTestImageInputStream(String)', targetType='com.facebook.fresco.vito.core.impl.NoOpVitoImagePerfListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.assertBitmap(Bitmap, int, int)', targetType='com.facebook.drawee.drawable.MatrixDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_lossless_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.setUp()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_plain_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_with_alpha_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpDecodingTest.test_webp_extended_decoding_inputstream_bitmap()', targetType='com.facebook.imagepipeline.debug.NoOpDebugImageTracker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, Object)', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkXYSign(int, int)', targetType='com.facebook.imagepipeline.producers.BaseConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(Bitmap, int, int, int, int, Matrix, boolean)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.checkWidthHeight(int, int)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory.createBitmap(DisplayMetrics, int[], int, int, int, int, Bitmap.Config)', targetType='com.facebook.samples.animation2.color.ExampleColorBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.determineImageFormat(InputStream)', targetType='com.facebook.cache.disk.DiskCacheConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.addViewportData()', targetType='com.facebook.imagepipeline.systrace.FrescoSystrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.reset()', targetType='com.facebook.fresco.samples.showcase.BaseShowcaseFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setupListeners()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImageOriginRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.mImagePerfRequestListener', targetTypeName='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.notifyListenersOfVisibilityStateUpdate(ImagePerfState, int)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor.setEnabled(boolean)', targetType='com.facebook.drawee.span.DraweeSpanStringBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.BucketsBitmapPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.ImageListAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgFormatChecker'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.FadeDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getTransitionState()', targetType='com.facebook.fresco.vito.draweesupport.DrawableFactoryWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.reset()', targetType='com.facebook.imagepipeline.producers.PostprocessorProducer.RepeatedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.drawDrawableWithAlpha(Canvas, Drawable, int)', targetType='com.facebook.common.time.RealtimeSinceBootClock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getCurrentTimeMs()', targetType='com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setOnFadeListener(OnFadeListener)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.invalidateSelf()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.getAlpha()', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.core.DefaultExecutorSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isDefaultLayerIsOn()', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.isLayerOn(int)', targetType='com.facebook.common.internal.Ints'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInLayer(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.showLayerImmediately(int)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.setMutateDrawables(boolean)', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.finishTransitionImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.maybeOnImageShownImmediately()', targetType='com.facebook.imagepipeline.debug.FlipperCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.resetInternal()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeInAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.updateAlphas(float)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.fadeOutAllLayers()', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.FadeDrawable.hideLayerImmediately(int)', targetType='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.FadeDrawable.mStartTimeMs', targetTypeName='com.facebook.imagepipeline.producers.PriorityNetworkFetcher'"
      } ]
    } ]
  } ]
}