{
  "executionId" : "85925b56-4684-4f30-97d2-ca3ac3e96938",
  "computingTime" : 245777,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.3435897435897437,
    "meanNumConcerns" : 1.7288801571709231,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.565791528040293
  },
  "population" : [ {
    "solutionId" : "469bfd44-3023-403a-a4fc-cc93d783c25c",
    "objectives" : {
      "NumberOfConcerns" : 1.0102272727272728,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5659772322586841,
      "MetricsIntensity" : 0.059939061383649454,
      "Density" : 1.0052147239263804
    },
    "euclideanDistance" : 10.11706176230407,
    "generation" : 14,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.729571984435798,
      "LackOfCohesion" : 0.5659772322586841,
      "MetricsIntensity" : 0.05993906138364946,
      "Density" : 3.326903553299493
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "99abd41d-fb36-4453-915b-5bcae5048ac8",
    "objectives" : {
      "NumberOfConcerns" : 1.0102272727272728,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.565977232258684,
      "MetricsIntensity" : 0.05993906138364946,
      "Density" : 1.0052147239263804
    },
    "euclideanDistance" : 10.11706176230407,
    "generation" : 33,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.729571984435798,
      "LackOfCohesion" : 0.565977232258684,
      "MetricsIntensity" : 0.05993906138364947,
      "Density" : 3.326903553299493
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "df0a196e-8642-4806-b5d3-fdca9f30e904",
    "objectives" : {
      "NumberOfConcerns" : 1.009659090909091,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5684282126508409,
      "MetricsIntensity" : 0.05995360297927322,
      "Density" : 1.005521472392638
    },
    "euclideanDistance" : 10.117173023070508,
    "generation" : 25,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7285992217898825,
      "LackOfCohesion" : 0.5684282126508409,
      "MetricsIntensity" : 0.05995360297927323,
      "Density" : 3.3279187817258884
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "42b463c3-c41f-4e70-b505-8e33b9f94ba3",
    "objectives" : {
      "NumberOfConcerns" : 1.009659090909091,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.5684282126508409,
      "MetricsIntensity" : 0.05995360297927322,
      "Density" : 1.005521472392638
    },
    "euclideanDistance" : 10.117173023070508,
    "generation" : 26,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.728599221789883,
      "LackOfCohesion" : 0.5684282126508409,
      "MetricsIntensity" : 0.05995360297927323,
      "Density" : 3.3279187817258884
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "e703f6b1-2fe2-4e5d-bef6-dbb35e7cf8f3",
    "objectives" : {
      "NumberOfConcerns" : 1.009090909090909,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.5665080836684084,
      "MetricsIntensity" : 0.06003387875517933,
      "Density" : 1.0033742331288344
    },
    "euclideanDistance" : 11.106284697862595,
    "generation" : 30,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7293086660175265,
      "LackOfCohesion" : 0.5665080836684084,
      "MetricsIntensity" : 0.06003387875517932,
      "Density" : 3.3241869918699187
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "dbcafc2a-0edd-4667-ac14-0842776c4cba",
    "objectives" : {
      "NumberOfConcerns" : 1.0085227272727273,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.5689620713984698,
      "MetricsIntensity" : 0.06004843819325171,
      "Density" : 1.0052147239263804
    },
    "euclideanDistance" : 11.106525036492895,
    "generation" : 29,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7283349561830572,
      "LackOfCohesion" : 0.5689620713984698,
      "MetricsIntensity" : 0.06004843819325171,
      "Density" : 3.3302845528455287
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "ea42ba47-836f-4914-b6f4-0ebbba939edb",
    "objectives" : {
      "NumberOfConcerns" : 1.0085227272727273,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.566722807594789,
      "MetricsIntensity" : 0.059999030884987994,
      "Density" : 1.0039877300613498
    },
    "euclideanDistance" : 12.097515615939274,
    "generation" : 9,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7283349561830574,
      "LackOfCohesion" : 0.566722807594789,
      "MetricsIntensity" : 0.059999030884988,
      "Density" : 3.3262195121951206
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "ba142162-f37f-4e56-beb7-baac6bd15530",
    "objectives" : {
      "NumberOfConcerns" : 1.0079545454545455,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5705571634230097,
      "MetricsIntensity" : 0.060019319317106946,
      "Density" : 1.0042944785276073
    },
    "euclideanDistance" : 12.097674055814535,
    "generation" : 32,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7273612463485881,
      "LackOfCohesion" : 0.5705571634230097,
      "MetricsIntensity" : 0.06001931931710695,
      "Density" : 3.327235772357723
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "a96786e7-74c9-46b8-a8bb-0963e476f15d",
    "objectives" : {
      "NumberOfConcerns" : 1.009090909090909,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.5673114725086071,
      "MetricsIntensity" : 0.06001023753021776,
      "Density" : 1.0027607361963191
    },
    "euclideanDistance" : 13.09004343355343,
    "generation" : 34,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7293086660175265,
      "LackOfCohesion" : 0.5673114725086071,
      "MetricsIntensity" : 0.06001023753021775,
      "Density" : 3.322154471544716
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "f4edff7d-7a34-48af-ba91-b7a1fe380be7",
    "objectives" : {
      "NumberOfConcerns" : 1.0068181818181818,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.571094293435405,
      "MetricsIntensity" : 0.06011435176886406,
      "Density" : 1.0039877300613498
    },
    "euclideanDistance" : 13.090127449365665,
    "generation" : 33,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7270955165692008,
      "LackOfCohesion" : 0.571094293435405,
      "MetricsIntensity" : 0.060114351768864066,
      "Density" : 3.329603255340794
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "220c0895-2d33-45b6-ae1e-7d0325a18ec1",
    "objectives" : {
      "NumberOfConcerns" : 1.0068181818181818,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5688522786933901,
      "MetricsIntensity" : 0.060064883763661515,
      "Density" : 0.9993865030674847
    },
    "euclideanDistance" : 14.083311291702294,
    "generation" : 36,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7270955165692008,
      "LackOfCohesion" : 0.5688522786933901,
      "MetricsIntensity" : 0.0600648837636615,
      "Density" : 3.3143438453713125
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "bbbc8491-83b2-470f-909a-d53c1d33073f",
    "objectives" : {
      "NumberOfConcerns" : 1.0056818181818181,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.5693879723531196,
      "MetricsIntensity" : 0.060160089151332884,
      "Density" : 0.999079754601227
    },
    "euclideanDistance" : 15.077711304268385,
    "generation" : 15,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7268292682926831,
      "LackOfCohesion" : 0.5693879723531196,
      "MetricsIntensity" : 0.06016008915133289,
      "Density" : 3.3167006109979638
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "275d9ce7-7c4f-4dde-9d6b-1066b792cc39",
    "objectives" : {
      "NumberOfConcerns" : 1.0073863636363636,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5665698826609942,
      "MetricsIntensity" : 0.06012892909322398,
      "Density" : 1.0030674846625767
    },
    "euclideanDistance" : 16.07313250690357,
    "generation" : 28,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7280701754385963,
      "LackOfCohesion" : 0.5665698826609942,
      "MetricsIntensity" : 0.06012892909322398,
      "Density" : 3.326551373346897
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "6485ccbc-5123-4be1-b984-bd3b25169b5d",
    "objectives" : {
      "NumberOfConcerns" : 1.00625,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5706239367150482,
      "MetricsIntensity" : 0.06011435176886405,
      "Density" : 1.0039877300613498
    },
    "euclideanDistance" : 17.068970555866997,
    "generation" : 37,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7261208576998053,
      "LackOfCohesion" : 0.5706239367150482,
      "MetricsIntensity" : 0.06011435176886406,
      "Density" : 3.329603255340794
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "bf1314a0-cbfe-42fb-8f72-fc890fae5843",
    "objectives" : {
      "NumberOfConcerns" : 1.0056818181818181,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5673180210980514,
      "MetricsIntensity" : 0.06018927966062932,
      "Density" : 1.0033742331288344
    },
    "euclideanDistance" : 18.06498348345708,
    "generation" : 39,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7268292682926831,
      "LackOfCohesion" : 0.5673180210980514,
      "MetricsIntensity" : 0.06018927966062932,
      "Density" : 3.330957230142566
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "9ce41d52-4c66-4fbd-b3a0-8e92c47ad14a",
    "objectives" : {
      "NumberOfConcerns" : 1.0039772727272727,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.5694534702209144,
      "MetricsIntensity" : 0.06025552903503305,
      "Density" : 0.9987730061349693
    },
    "euclideanDistance" : 20.05825081769252,
    "generation" : 42,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7255859375,
      "LackOfCohesion" : 0.5694534702209144,
      "MetricsIntensity" : 0.06025552903503304,
      "Density" : 3.319062181447502
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "0ede9144-91f3-4297-985e-70bd628ef8ca",
    "objectives" : {
      "NumberOfConcerns" : 1.0068181818181818,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.568511512970647,
      "MetricsIntensity" : 0.06006258482282911,
      "Density" : 1.0033742331288344
    },
    "euclideanDistance" : 21.055812868598125,
    "generation" : 33,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7254138266796497,
      "LackOfCohesion" : 0.568511512970647,
      "MetricsIntensity" : 0.06006258482282911,
      "Density" : 3.3275686673448623
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "6ff57f14-1caf-4753-8aea-d85fb0ad11b6",
    "objectives" : {
      "NumberOfConcerns" : 1.0039772727272727,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.5702598272464833,
      "MetricsIntensity" : 0.06023180046564427,
      "Density" : 0.9914110429447853
    },
    "euclideanDistance" : 22.05265721768205,
    "generation" : 25,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7255859375,
      "LackOfCohesion" : 0.5702598272464833,
      "MetricsIntensity" : 0.060231800465644275,
      "Density" : 3.2945973496432215
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "1afbaa03-8a20-48b9-b943-d8662c38a594",
    "objectives" : {
      "NumberOfConcerns" : 1.0056818181818181,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.5668041151569335,
      "MetricsIntensity" : 0.060108202421110576,
      "Density" : 0.9984662576687117
    },
    "euclideanDistance" : 23.050666165820058,
    "generation" : 32,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7251461988304098,
      "LackOfCohesion" : 0.5668041151569335,
      "MetricsIntensity" : 0.06010820242111057,
      "Density" : 3.314663951120163
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "fe5d0f1d-aa9a-4fa1-9f51-aa2887cc654f",
    "objectives" : {
      "NumberOfConcerns" : 1.00625,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5677013927451532,
      "MetricsIntensity" : 0.060053915844434855,
      "Density" : 1.0046012269938651
    },
    "euclideanDistance" : 25.046909071418582,
    "generation" : 34,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7244401168451802,
      "LackOfCohesion" : 0.5677013927451532,
      "MetricsIntensity" : 0.06005391584443486,
      "Density" : 3.328252032520325
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "c02a81f9-4ce8-4783-a06a-c1954bdf2ac4",
    "objectives" : {
      "NumberOfConcerns" : 1.00625,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5677013927451531,
      "MetricsIntensity" : 0.06005391584443488,
      "Density" : 1.0046012269938651
    },
    "euclideanDistance" : 25.046909071418582,
    "generation" : 35,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7244401168451802,
      "LackOfCohesion" : 0.5677013927451531,
      "MetricsIntensity" : 0.06005391584443488,
      "Density" : 3.328252032520325
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "e13c3440-d486-4aee-8218-80d477f424a1",
    "objectives" : {
      "NumberOfConcerns" : 1.0051136363636364,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.5682350144397622,
      "MetricsIntensity" : 0.0601489907980683,
      "Density" : 1.0042944785276073
    },
    "euclideanDistance" : 26.045064210985053,
    "generation" : 41,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7241715399610136,
      "LackOfCohesion" : 0.5682350144397622,
      "MetricsIntensity" : 0.060148990798068305,
      "Density" : 3.3306205493387577
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "4de89a22-9464-4a5c-88f1-06ab989fc80c",
    "objectives" : {
      "NumberOfConcerns" : 1.0045454545454546,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5698320660368139,
      "MetricsIntensity" : 0.060119836149348425,
      "Density" : 1.0033742331288344
    },
    "euclideanDistance" : 27.04337616497129,
    "generation" : 34,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.723196881091618,
      "LackOfCohesion" : 0.5698320660368139,
      "MetricsIntensity" : 0.06011983614934843,
      "Density" : 3.3275686673448623
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "c48e211a-57f4-4189-abb5-864e9bcf6e57",
    "objectives" : {
      "NumberOfConcerns" : 1.0039772727272727,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.5690475923347772,
      "MetricsIntensity" : 0.0602459993610945,
      "Density" : 0.997239263803681
    },
    "euclideanDistance" : 28.041574514570428,
    "generation" : 39,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7255859375,
      "LackOfCohesion" : 0.5690475923347772,
      "MetricsIntensity" : 0.0602459993610945,
      "Density" : 3.3139653414882773
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "ef419e6f-1df9-4f06-ae43-dd3859643a5b",
    "objectives" : {
      "NumberOfConcerns" : 1.003409090909091,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.5681241923993028,
      "MetricsIntensity" : 0.06016558027767272,
      "Density" : 0.9984662576687117
    },
    "euclideanDistance" : 29.040147204627967,
    "generation" : 38,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7229268292682929,
      "LackOfCohesion" : 0.5681241923993028,
      "MetricsIntensity" : 0.06016558027767273,
      "Density" : 3.3146639511201625
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "5184a26a-ab50-497d-b610-17844b87696f",
    "objectives" : {
      "NumberOfConcerns" : 1.0028409090909092,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.5682066189722521,
      "MetricsIntensity" : 0.06027522581929397,
      "Density" : 0.9904907975460123
    },
    "euclideanDistance" : 31.037288118868588,
    "generation" : 41,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7236328125,
      "LackOfCohesion" : 0.5682066189722521,
      "MetricsIntensity" : 0.060275225819293975,
      "Density" : 3.294897959183674
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "ff0f36c2-02a2-4afb-b593-cac14d2e6f29",
    "objectives" : {
      "NumberOfConcerns" : 1.0017045454545455,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.5704006472456777,
      "MetricsIntensity" : 0.06029238609084557,
      "Density" : 1.0027607361963191
    },
    "euclideanDistance" : 31.03768569272909,
    "generation" : 34,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7216796875,
      "LackOfCohesion" : 0.5704006472456777,
      "MetricsIntensity" : 0.06029238609084557,
      "Density" : 3.3323139653414886
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "3f7176c7-4c7c-460e-8d44-cfb8e00aa23d",
    "objectives" : {
      "NumberOfConcerns" : 1.0039772727272727,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.5658389889917131,
      "MetricsIntensity" : 0.06022970438377835,
      "Density" : 1.003680981595092
    },
    "euclideanDistance" : 31.037705251125153,
    "generation" : 35,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7239024390243902,
      "LackOfCohesion" : 0.5658389889917131,
      "MetricsIntensity" : 0.06022970438377835,
      "Density" : 3.331975560081466
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "924a201b-b0bc-4c97-9c93-cb2607deabb5",
    "objectives" : {
      "NumberOfConcerns" : 1.0022727272727272,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.5694660061478592,
      "MetricsIntensity" : 0.06023729835445497,
      "Density" : 0.9941717791411043
    },
    "euclideanDistance" : 32.036242729298735,
    "generation" : 41,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.72265625,
      "LackOfCohesion" : 0.5694660061478592,
      "MetricsIntensity" : 0.060237298354454974,
      "Density" : 3.303771661569827
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "118c8763-037c-4ba9-a896-4cdc476a9843",
    "objectives" : {
      "NumberOfConcerns" : 1.0005681818181817,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.5717469224844869,
      "MetricsIntensity" : 0.06036434895664129,
      "Density" : 1.001840490797546
    },
    "euclideanDistance" : 34.03432619361611,
    "generation" : 35,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7214076246334309,
      "LackOfCohesion" : 0.5717469224844869,
      "MetricsIntensity" : 0.0603643489566413,
      "Density" : 3.332653061224489
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "b69918c3-0ea5-4bed-890f-61fd76106151",
    "objectives" : {
      "NumberOfConcerns" : 1.0005681818181817,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5687243296961727,
      "MetricsIntensity" : 0.06035670895015328,
      "Density" : 0.9978527607361963
    },
    "euclideanDistance" : 35.03318337111372,
    "generation" : 37,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7214076246334313,
      "LackOfCohesion" : 0.5687243296961727,
      "MetricsIntensity" : 0.06035670895015327,
      "Density" : 3.3193877551020408
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "db8578f1-f3d8-42bf-b6d1-a68ebf1ebebc",
    "objectives" : {
      "NumberOfConcerns" : 0.9994318181818181,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5700701974753392,
      "MetricsIntensity" : 0.06042884006993061,
      "Density" : 0.993558282208589
    },
    "euclideanDistance" : 38.03044377461432,
    "generation" : 41,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7211350293542071,
      "LackOfCohesion" : 0.5700701974753392,
      "MetricsIntensity" : 0.060428840069930614,
      "Density" : 3.3084780388151174
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "0dfc48c0-898e-4ef1-b15a-13bf22a83758",
    "objectives" : {
      "NumberOfConcerns" : 1.0022727272727272,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5660735095965036,
      "MetricsIntensity" : 0.06020895221760332,
      "Density" : 0.9975460122699387
    },
    "euclideanDistance" : 38.030562880433735,
    "generation" : 37,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7209756097560975,
      "LackOfCohesion" : 0.5660735095965036,
      "MetricsIntensity" : 0.06020895221760332,
      "Density" : 3.3149847094801226
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "0f66e487-f587-447b-bd4c-a2c98d4eb8fa",
    "objectives" : {
      "NumberOfConcerns" : 0.9988636363636364,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.571815494359525,
      "MetricsIntensity" : 0.060460276666974434,
      "Density" : 1.0015337423312884
    },
    "euclideanDistance" : 39.02987864195483,
    "generation" : 38,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7201565557729936,
      "LackOfCohesion" : 0.571815494359525,
      "MetricsIntensity" : 0.06046027666697443,
      "Density" : 3.3350357507660875
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "c0bda7c0-eb1d-42c4-a8a1-5d797ebd17c6",
    "objectives" : {
      "NumberOfConcerns" : 1.0011363636363637,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.567412797873628,
      "MetricsIntensity" : 0.060280723708104667,
      "Density" : 0.9932515337423313
    },
    "euclideanDistance" : 41.02821484876863,
    "generation" : 23,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.720703125,
      "LackOfCohesion" : 0.567412797873628,
      "MetricsIntensity" : 0.06028072370810467,
      "Density" : 3.304081632653061
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "ee69fd60-bdb1-464e-bcbb-4d9effd171f9",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5679480376572783,
      "MetricsIntensity" : 0.060376430021447824,
      "Density" : 0.9929447852760737
    },
    "euclideanDistance" : 42.02751657704019,
    "generation" : 39,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7204301075268815,
      "LackOfCohesion" : 0.5679480376572783,
      "MetricsIntensity" : 0.06037643002144782,
      "Density" : 3.306435137895812
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "8087df08-c362-40b9-9f8f-4b895066e3d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9994318181818181,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5688549693910115,
      "MetricsIntensity" : 0.060443074024381975,
      "Density" : 0.9960122699386503
    },
    "euclideanDistance" : 44.02633477525083,
    "generation" : 38,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7211350293542071,
      "LackOfCohesion" : 0.5688549693910115,
      "MetricsIntensity" : 0.06044307402438197,
      "Density" : 3.316649642492339
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "530b5a9b-0bcb-46d3-a8d0-adbd3de52e0d",
    "objectives" : {
      "NumberOfConcerns" : 0.9988636363636364,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5706002662751973,
      "MetricsIntensity" : 0.060474510621425774,
      "Density" : 1.0006134969325153
    },
    "euclideanDistance" : 45.02586143278773,
    "generation" : 37,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7201565557729934,
      "LackOfCohesion" : 0.5706002662751973,
      "MetricsIntensity" : 0.060474510621425774,
      "Density" : 3.3319713993871303
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "afa00d70-de06-4769-8648-479648253058",
    "objectives" : {
      "NumberOfConcerns" : 0.9994318181818181,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.5674759410230362,
      "MetricsIntensity" : 0.060376430021447804,
      "Density" : 0.9895705521472392
    },
    "euclideanDistance" : 46.02503436276624,
    "generation" : 35,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7194525904203326,
      "LackOfCohesion" : 0.5674759410230362,
      "MetricsIntensity" : 0.060376430021447804,
      "Density" : 3.2951991828396325
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "49c9250c-146e-43d4-aca0-02e4d376018b",
    "objectives" : {
      "NumberOfConcerns" : 0.9994318181818181,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.567475941023036,
      "MetricsIntensity" : 0.06037643002144782,
      "Density" : 0.9895705521472392
    },
    "euclideanDistance" : 46.02503436276624,
    "generation" : 41,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7194525904203324,
      "LackOfCohesion" : 0.567475941023036,
      "MetricsIntensity" : 0.06037643002144782,
      "Density" : 3.2951991828396325
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "406ee1ce-d889-4741-84e5-0f9297372750",
    "objectives" : {
      "NumberOfConcerns" : 0.9982954545454545,
      "NumberOfRefactorings" : 47.0,
      "LackOfCohesion" : 0.5680119195510481,
      "MetricsIntensity" : 0.06047237264667573,
      "Density" : 0.992638036809816
    },
    "euclideanDistance" : 47.024549105071635,
    "generation" : 39,
    "numberOfRefactorings" : 47,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7191780821917806,
      "LackOfCohesion" : 0.5680119195510481,
      "MetricsIntensity" : 0.06047237264667574,
      "Density" : 3.3087934560327192
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "b1bd94d9-cb40-4a70-b241-7fddd387605f",
    "objectives" : {
      "NumberOfConcerns" : 0.9971590909090909,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.5706675055367195,
      "MetricsIntensity" : 0.06057069307758721,
      "Density" : 1.0003067484662578
    },
    "euclideanDistance" : 50.023237300821954,
    "generation" : 34,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7189030362389814,
      "LackOfCohesion" : 0.5706675055367195,
      "MetricsIntensity" : 0.06057069307758721,
      "Density" : 3.3343558282208594
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "2e1f56f0-2259-48c4-b2e7-603aaf9d52be",
    "objectives" : {
      "NumberOfConcerns" : 1.0079545454545455,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.5649585352377702,
      "MetricsIntensity" : 0.06007646153915981,
      "Density" : 1.0021472392638038
    },
    "euclideanDistance" : 54.02169063239909,
    "generation" : 10,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7273612463485875,
      "LackOfCohesion" : 0.5649585352377702,
      "MetricsIntensity" : 0.06007646153915981,
      "Density" : 3.3201219512195124
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "50a6be7a-487d-4e74-818b-ee20e29c56f9",
    "objectives" : {
      "NumberOfConcerns" : 1.0073863636363636,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.5674125229678314,
      "MetricsIntensity" : 0.06009102097723219,
      "Density" : 1.0024539877300613
    },
    "euclideanDistance" : 54.021711461089225,
    "generation" : 41,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7263875365141186,
      "LackOfCohesion" : 0.5674125229678314,
      "MetricsIntensity" : 0.0600910209772322,
      "Density" : 3.3211382113821144
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "bbc43ad4-1795-4e71-b3a3-c8cb6f6010dd",
    "objectives" : {
      "NumberOfConcerns" : 1.0068181818181818,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.5662931631329376,
      "MetricsIntensity" : 0.06014789392197142,
      "Density" : 1.0012269938650307
    },
    "euclideanDistance" : 57.020526515108905,
    "generation" : 36,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7270955165692012,
      "LackOfCohesion" : 0.5662931631329376,
      "MetricsIntensity" : 0.060147893921971424,
      "Density" : 3.320447609359105
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "aff33157-7c76-4a2f-bf01-a7f68cf275b9",
    "objectives" : {
      "NumberOfConcerns" : 1.0005681818181817,
      "NumberOfRefactorings" : 57.0,
      "LackOfCohesion" : 0.5741516735182557,
      "MetricsIntensity" : 0.060350424673595006,
      "Density" : 1.003680981595092
    },
    "euclideanDistance" : 57.020538444645055,
    "generation" : 35,
    "numberOfRefactorings" : 57,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7197265625,
      "LackOfCohesion" : 0.5741516735182557,
      "MetricsIntensity" : 0.060350424673595006,
      "Density" : 3.331975560081466
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "34f97279-4569-4df7-b656-4e6125f5c426",
    "objectives" : {
      "NumberOfConcerns" : 0.9988636363636364,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.5738372584782389,
      "MetricsIntensity" : 0.06051953160687819,
      "Density" : 0.9923312883435583
    },
    "euclideanDistance" : 58.019956926585174,
    "generation" : 37,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.720156555772994,
      "LackOfCohesion" : 0.5738372584782389,
      "MetricsIntensity" : 0.06051953160687819,
      "Density" : 3.3043922369765064
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "0f27e1be-8947-415e-b356-bd488e1eff09",
    "objectives" : {
      "NumberOfConcerns" : 1.0045454545454546,
      "NumberOfRefactorings" : 58.0,
      "LackOfCohesion" : 0.5678346119952227,
      "MetricsIntensity" : 0.06020277669000954,
      "Density" : 0.996319018404908
    },
    "euclideanDistance" : 58.020063975124884,
    "generation" : 28,
    "numberOfRefactorings" : 58,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7248780487804878,
      "LackOfCohesion" : 0.5678346119952227,
      "MetricsIntensity" : 0.060202776690009535,
      "Density" : 3.3075356415478625
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "8b178e42-0327-42c8-9011-cae505c05f3b",
    "objectives" : {
      "NumberOfConcerns" : 0.9988636363636364,
      "NumberOfRefactorings" : 60.0,
      "LackOfCohesion" : 0.5732755891642016,
      "MetricsIntensity" : 0.06040931442916469,
      "Density" : 0.993558282208589
    },
    "euclideanDistance" : 60.01930673383854,
    "generation" : 34,
    "numberOfRefactorings" : 60,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7184750733137828,
      "LackOfCohesion" : 0.5732755891642016,
      "MetricsIntensity" : 0.060409314429164696,
      "Density" : 3.301732925586136
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "28165a52-3b62-41e1-93f0-eb7660f7c127",
    "objectives" : {
      "NumberOfConcerns" : 0.9977272727272727,
      "NumberOfRefactorings" : 63.0,
      "LackOfCohesion" : 0.5746270757822174,
      "MetricsIntensity" : 0.060481510493977854,
      "Density" : 0.9892638036809815
    },
    "euclideanDistance" : 63.018314455984545,
    "generation" : 30,
    "numberOfRefactorings" : 63,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7181996086105669,
      "LackOfCohesion" : 0.5746270757822174,
      "MetricsIntensity" : 0.060481510493977854,
      "Density" : 3.2908163265306123
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "afe6785d-ea0f-426f-8ae7-74dfc27b859b",
    "objectives" : {
      "NumberOfConcerns" : 1.0051136363636364,
      "NumberOfRefactorings" : 65.0,
      "LackOfCohesion" : 0.5650376753891567,
      "MetricsIntensity" : 0.060185728198936146,
      "Density" : 1.0
    },
    "euclideanDistance" : 65.01794477925684,
    "generation" : 37,
    "numberOfRefactorings" : 65,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7241715399610138,
      "LackOfCohesion" : 0.5650376753891567,
      "MetricsIntensity" : 0.060185728198936146,
      "Density" : 3.319755600814664
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "a0435f77-5a8f-463a-abf3-07aa28100b85",
    "objectives" : {
      "NumberOfConcerns" : 1.0017045454545455,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.5692413864609629,
      "MetricsIntensity" : 0.06037023926443948,
      "Density" : 0.9883435582822085
    },
    "euclideanDistance" : 66.0174818915977,
    "generation" : 37,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7233626588465298,
      "LackOfCohesion" : 0.5692413864609629,
      "MetricsIntensity" : 0.06037023926443949,
      "Density" : 3.287755102040817
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "10133d7e-c1b4-4299-ae53-8b7192576f4f",
    "objectives" : {
      "NumberOfConcerns" : 1.003409090909091,
      "NumberOfRefactorings" : 67.0,
      "LackOfCohesion" : 0.5657839291924234,
      "MetricsIntensity" : 0.06024614862994011,
      "Density" : 0.995398773006135
    },
    "euclideanDistance" : 67.017321563712,
    "generation" : 36,
    "numberOfRefactorings" : 67,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7229268292682929,
      "LackOfCohesion" : 0.5657839291924234,
      "MetricsIntensity" : 0.06024614862994011,
      "Density" : 3.3078491335372076
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "f89706ce-f4d6-4d05-a469-516609c827f3",
    "objectives" : {
      "NumberOfConcerns" : 0.9971590909090909,
      "NumberOfRefactorings" : 68.0,
      "LackOfCohesion" : 0.5730414773275194,
      "MetricsIntensity" : 0.06052504307072299,
      "Density" : 0.991717791411043
    },
    "euclideanDistance" : 68.01698221948664,
    "generation" : 35,
    "numberOfRefactorings" : 68,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7172211350293538,
      "LackOfCohesion" : 0.5730414773275194,
      "MetricsIntensity" : 0.06052504307072299,
      "Density" : 3.302349336057201
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "bae57c76-6a2d-4b84-be89-acedb7c9fa84",
    "objectives" : {
      "NumberOfConcerns" : 1.0045454545454546,
      "NumberOfRefactorings" : 69.0,
      "LackOfCohesion" : 0.5642265599299707,
      "MetricsIntensity" : 0.0601770485706913,
      "Density" : 1.0012269938650307
    },
    "euclideanDistance" : 69.01690763828525,
    "generation" : 11,
    "numberOfRefactorings" : 69,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.723196881091618,
      "LackOfCohesion" : 0.5642265599299707,
      "MetricsIntensity" : 0.060177048570691304,
      "Density" : 3.3204476093591047
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "53acff30-269e-4882-832b-1508d1fb29b0",
    "objectives" : {
      "NumberOfConcerns" : 1.0022727272727272,
      "NumberOfRefactorings" : 70.0,
      "LackOfCohesion" : 0.5671228608434348,
      "MetricsIntensity" : 0.06031796592883105,
      "Density" : 0.9911042944785277
    },
    "euclideanDistance" : 70.01651308754724,
    "generation" : 41,
    "numberOfRefactorings" : 70,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.72265625,
      "LackOfCohesion" : 0.5671228608434348,
      "MetricsIntensity" : 0.06031796592883105,
      "Density" : 3.2969387755102044
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "ddf1a83e-caf4-428e-af1b-9accb184b5bf",
    "objectives" : {
      "NumberOfConcerns" : 1.003409090909091,
      "NumberOfRefactorings" : 70.0,
      "LackOfCohesion" : 0.5647565638987244,
      "MetricsIntensity" : 0.06027239192245496,
      "Density" : 1.0009202453987731
    },
    "euclideanDistance" : 70.0166498333008,
    "generation" : 33,
    "numberOfRefactorings" : 70,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7229268292682929,
      "LackOfCohesion" : 0.5647565638987244,
      "MetricsIntensity" : 0.06027239192245496,
      "Density" : 3.3228105906313647
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "1890dccf-1bcf-4f47-8aad-5e2083296285",
    "objectives" : {
      "NumberOfConcerns" : 1.0017045454545455,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.5658449885834195,
      "MetricsIntensity" : 0.060341694498219835,
      "Density" : 0.991717791411043
    },
    "euclideanDistance" : 72.01604500280048,
    "generation" : 41,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7216796875,
      "LackOfCohesion" : 0.5658449885834195,
      "MetricsIntensity" : 0.06034169449821982,
      "Density" : 3.298979591836735
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "8dcb2e0a-4047-40b7-8d69-412d2e9ced63",
    "objectives" : {
      "NumberOfConcerns" : 1.0017045454545455,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.5655033905373518,
      "MetricsIntensity" : 0.06033299349158028,
      "Density" : 1.0012269938650307
    },
    "euclideanDistance" : 72.01617388923437,
    "generation" : 33,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7216796875,
      "LackOfCohesion" : 0.5655033905373518,
      "MetricsIntensity" : 0.06033299349158027,
      "Density" : 3.3272171253822633
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "ebab35d1-8393-43ee-a020-dc65b80513e5",
    "objectives" : {
      "NumberOfConcerns" : 1.0011363636363637,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.5667482088734936,
      "MetricsIntensity" : 0.060408213495573015,
      "Density" : 0.9947852760736197
    },
    "euclideanDistance" : 74.01565188829053,
    "generation" : 41,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7223851417399803,
      "LackOfCohesion" : 0.5667482088734936,
      "MetricsIntensity" : 0.060408213495573015,
      "Density" : 3.3091836734693874
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "e37f3b17-e208-4e78-a621-5de086cd6865",
    "objectives" : {
      "NumberOfConcerns" : 1.0005681818181817,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.5671856464872567,
      "MetricsIntensity" : 0.06041371816353142,
      "Density" : 0.9874233128834355
    },
    "euclideanDistance" : 75.01534170328237,
    "generation" : 40,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.721407624633431,
      "LackOfCohesion" : 0.5671856464872567,
      "MetricsIntensity" : 0.06041371816353143,
      "Density" : 3.2880490296220626
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.ProgressBarDrawable.mLevel, com.facebook.drawee.drawable.ProgressBarDrawable.mRadius, com.facebook.drawee.drawable.ProgressBarDrawable.mPaint, com.facebook.drawee.drawable.ProgressBarDrawable.mPath, com.facebook.drawee.drawable.ProgressBarDrawable.mColor, com.facebook.drawee.drawable.ProgressBarDrawable.mPadding, com.facebook.drawee.drawable.ProgressBarDrawable.mBarWidth], extractedMethods=[com.facebook.drawee.drawable.ProgressBarDrawable.getRadius(), com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity(), com.facebook.drawee.drawable.ProgressBarDrawable.getColor(), com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int), com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect), com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int), com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int), com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int), com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int), com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int), com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth(), com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int), com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "21328c15-9f22-4106-83fb-6d1b13500a29",
    "objectives" : {
      "NumberOfConcerns" : 0.9948863636363636,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.5740273014829873,
      "MetricsIntensity" : 0.06068839999511634,
      "Density" : 0.994478527607362
    },
    "euclideanDistance" : 75.01541159550591,
    "generation" : 31,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7166666666666666,
      "LackOfCohesion" : 0.5740273014829873,
      "MetricsIntensity" : 0.06068839999511635,
      "Density" : 3.314928425357873
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "37d7c68d-1f85-48ba-bcad-834087942b87",
    "objectives" : {
      "NumberOfConcerns" : 0.9943181818181818,
      "NumberOfRefactorings" : 76.0,
      "LackOfCohesion" : 0.5757769184089654,
      "MetricsIntensity" : 0.06071991440551918,
      "Density" : 0.999079754601227
    },
    "euclideanDistance" : 76.01527501081954,
    "generation" : 39,
    "numberOfRefactorings" : 76,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.715686274509804,
      "LackOfCohesion" : 0.5757769184089654,
      "MetricsIntensity" : 0.06071991440551919,
      "Density" : 3.330265848670757
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "dfaa8bc9-3d44-48ca-9b2d-40d04ace5d54",
    "objectives" : {
      "NumberOfConcerns" : 0.9988636363636364,
      "NumberOfRefactorings" : 77.0,
      "LackOfCohesion" : 0.5689837634005245,
      "MetricsIntensity" : 0.060471685710602345,
      "Density" : 0.99079754601227
    },
    "euclideanDistance" : 77.01497781398771,
    "generation" : 34,
    "numberOfRefactorings" : 77,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7201565557729936,
      "LackOfCohesion" : 0.5689837634005245,
      "MetricsIntensity" : 0.06047168571060235,
      "Density" : 3.2992849846782426
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "62df4006-4be1-4fe0-89b0-67361ff8e414",
    "objectives" : {
      "NumberOfConcerns" : 0.9977272727272727,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.5697205815032195,
      "MetricsIntensity" : 0.06067222076401688,
      "Density" : 0.9889570552147239
    },
    "euclideanDistance" : 78.01475346642559,
    "generation" : 27,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7181996086105673,
      "LackOfCohesion" : 0.5697205815032195,
      "MetricsIntensity" : 0.060672220764016876,
      "Density" : 3.2931562819203273
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "2a30165e-3fbf-4033-ab1e-2887d337b4ba",
    "objectives" : {
      "NumberOfConcerns" : 0.9994318181818181,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.5671671386098961,
      "MetricsIntensity" : 0.060399501760195304,
      "Density" : 0.991717791411043
    },
    "euclideanDistance" : 78.0147915128915,
    "generation" : 36,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7194525904203324,
      "LackOfCohesion" : 0.5671671386098961,
      "MetricsIntensity" : 0.060399501760195304,
      "Density" : 3.2989795918367353
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "ffd138bd-7c76-4b62-a861-e09c17048fa4",
    "objectives" : {
      "NumberOfConcerns" : 0.9988636363636364,
      "NumberOfRefactorings" : 78.0,
      "LackOfCohesion" : 0.5676872651982848,
      "MetricsIntensity" : 0.06063474748418839,
      "Density" : 1.0009202453987731
    },
    "euclideanDistance" : 78.01490572515851,
    "generation" : 35,
    "numberOfRefactorings" : 78,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7184750733137828,
      "LackOfCohesion" : 0.5676872651982848,
      "MetricsIntensity" : 0.06063474748418839,
      "Density" : 3.3295918367346946
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "80406927-8328-433d-9d1b-21ad499af523",
    "objectives" : {
      "NumberOfConcerns" : 1.0017045454545455,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.5643048970860852,
      "MetricsIntensity" : 0.060286573353089144,
      "Density" : 0.999079754601227
    },
    "euclideanDistance" : 80.01452147479381,
    "generation" : 40,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.72,
      "LackOfCohesion" : 0.5643048970860852,
      "MetricsIntensity" : 0.060286573353089165,
      "Density" : 3.3200815494393465
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "a7528508-1ea9-427d-9acc-ef5893c676b8",
    "objectives" : {
      "NumberOfConcerns" : 1.0005681818181817,
      "NumberOfRefactorings" : 81.0,
      "LackOfCohesion" : 0.564835650243416,
      "MetricsIntensity" : 0.06038216900551068,
      "Density" : 0.9987730061349693
    },
    "euclideanDistance" : 81.0143281742333,
    "generation" : 41,
    "numberOfRefactorings" : 81,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7197265625,
      "LackOfCohesion" : 0.564835650243416,
      "MetricsIntensity" : 0.060382169005510675,
      "Density" : 3.3224489795918366
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback), com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable), com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties), com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int), com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "02766b0f-f437-4767-861d-cb9ed1898a79",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 82.0,
      "LackOfCohesion" : 0.5650511674847953,
      "MetricsIntensity" : 0.060347192387030506,
      "Density" : 0.9960122699386503
    },
    "euclideanDistance" : 82.01411442579486,
    "generation" : 30,
    "numberOfRefactorings" : 82,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.71875,
      "LackOfCohesion" : 0.5650511674847953,
      "MetricsIntensity" : 0.06034719238703051,
      "Density" : 3.313265306122449
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "92aff4d1-9f14-4404-a65b-50a3ca704a25",
    "objectives" : {
      "NumberOfConcerns" : 0.9960227272727272,
      "NumberOfRefactorings" : 83.0,
      "LackOfCohesion" : 0.5697867333917231,
      "MetricsIntensity" : 0.06076864760848807,
      "Density" : 0.9852760736196319
    },
    "euclideanDistance" : 83.01380114152448,
    "generation" : 32,
    "numberOfRefactorings" : 83,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7169441723800187,
      "LackOfCohesion" : 0.5697867333917231,
      "MetricsIntensity" : 0.06076864760848807,
      "Density" : 3.284253578732107
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "915394f4-1886-407e-9e9e-93c6ccbf60f2",
    "objectives" : {
      "NumberOfConcerns" : 0.9977272727272727,
      "NumberOfRefactorings" : 86.0,
      "LackOfCohesion" : 0.5669254854762336,
      "MetricsIntensity" : 0.06051521828734747,
      "Density" : 0.9898773006134969
    },
    "euclideanDistance" : 86.01337328217478,
    "generation" : 37,
    "numberOfRefactorings" : 86,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.718199608610567,
      "LackOfCohesion" : 0.5669254854762336,
      "MetricsIntensity" : 0.06051521828734747,
      "Density" : 3.29959100204499
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "817b8395-d0ad-4caa-a673-c06e483ee9ad",
    "objectives" : {
      "NumberOfConcerns" : 0.9982954545454545,
      "NumberOfRefactorings" : 87.0,
      "LackOfCohesion" : 0.56511139863619,
      "MetricsIntensity" : 0.06044298065928725,
      "Density" : 0.99079754601227
    },
    "euclideanDistance" : 87.0132247295693,
    "generation" : 38,
    "numberOfRefactorings" : 87,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7174975562072339,
      "LackOfCohesion" : 0.56511139863619,
      "MetricsIntensity" : 0.06044298065928725,
      "Density" : 3.2992849846782426
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "3ae9b9f2-c8ef-4189-babe-ea8057937430",
    "objectives" : {
      "NumberOfConcerns" : 0.9971590909090909,
      "NumberOfRefactorings" : 88.0,
      "LackOfCohesion" : 0.5656444579760701,
      "MetricsIntensity" : 0.060539005445796476,
      "Density" : 0.9938650306748467
    },
    "euclideanDistance" : 88.01309966462834,
    "generation" : 37,
    "numberOfRefactorings" : 88,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7172211350293538,
      "LackOfCohesion" : 0.5656444579760701,
      "MetricsIntensity" : 0.06053900544579648,
      "Density" : 3.312883435582822
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "31424759-bcb8-486f-91b5-10a08640d5e1",
    "objectives" : {
      "NumberOfConcerns" : 0.9971590909090909,
      "NumberOfRefactorings" : 88.0,
      "LackOfCohesion" : 0.567832274292232,
      "MetricsIntensity" : 0.060582116223864876,
      "Density" : 0.9929447852760737
    },
    "euclideanDistance" : 88.01310339536792,
    "generation" : 42,
    "numberOfRefactorings" : 88,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7189030362389817,
      "LackOfCohesion" : 0.567832274292232,
      "MetricsIntensity" : 0.06058211622386487,
      "Density" : 3.309815950920245
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "00bc2c5d-f731-4a75-8494-cb0d5da21412",
    "objectives" : {
      "NumberOfConcerns" : 0.9977272727272727,
      "NumberOfRefactorings" : 89.0,
      "LackOfCohesion" : 0.5660148283464406,
      "MetricsIntensity" : 0.06050970682350267,
      "Density" : 0.9938650306748467
    },
    "euclideanDistance" : 89.01296120015596,
    "generation" : 37,
    "numberOfRefactorings" : 89,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7181996086105673,
      "LackOfCohesion" : 0.5660148283464406,
      "MetricsIntensity" : 0.06050970682350268,
      "Density" : 3.30949948927477
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "0da5d2f8-2b6c-4e35-b625-5c1d6805f32d",
    "objectives" : {
      "NumberOfConcerns" : 0.9954545454545455,
      "NumberOfRefactorings" : 93.0,
      "LackOfCohesion" : 0.56789617103801,
      "MetricsIntensity" : 0.060678550892970105,
      "Density" : 0.992638036809816
    },
    "euclideanDistance" : 93.01237792881014,
    "generation" : 41,
    "numberOfRefactorings" : 93,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7176470588235295,
      "LackOfCohesion" : 0.56789617103801,
      "MetricsIntensity" : 0.06067855089297012,
      "Density" : 3.312180143295803
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "9bd47b2f-e3e9-448e-8c25-f44cc8d83587",
    "objectives" : {
      "NumberOfConcerns" : 0.9948863636363636,
      "NumberOfRefactorings" : 94.0,
      "LackOfCohesion" : 0.5696457879639882,
      "MetricsIntensity" : 0.06071006530337295,
      "Density" : 0.997239263803681
    },
    "euclideanDistance" : 94.01229955203519,
    "generation" : 39,
    "numberOfRefactorings" : 94,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.716666666666667,
      "LackOfCohesion" : 0.5696457879639882,
      "MetricsIntensity" : 0.060710065303372945,
      "Density" : 3.327533265097236
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "01d55623-62c4-46dd-a425-f64f70f7065b",
    "objectives" : {
      "NumberOfConcerns" : 0.9954545454545455,
      "NumberOfRefactorings" : 95.0,
      "LackOfCohesion" : 0.5768833303232651,
      "MetricsIntensity" : 0.06077779675102789,
      "Density" : 0.9895705521472392
    },
    "euclideanDistance" : 95.01213958198777,
    "generation" : 34,
    "numberOfRefactorings" : 95,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7159647404505394,
      "LackOfCohesion" : 0.5768833303232651,
      "MetricsIntensity" : 0.06077779675102788,
      "Density" : 3.2918367346938777
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "727773d4-2137-4970-b3d8-de6b8c39d964",
    "objectives" : {
      "NumberOfConcerns" : 0.9948863636363636,
      "NumberOfRefactorings" : 97.0,
      "LackOfCohesion" : 0.575600719352768,
      "MetricsIntensity" : 0.060801613312639356,
      "Density" : 0.9901840490797545
    },
    "euclideanDistance" : 97.01188214003429,
    "generation" : 38,
    "numberOfRefactorings" : 97,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7149853085210576,
      "LackOfCohesion" : 0.575600719352768,
      "MetricsIntensity" : 0.060801613312639356,
      "Density" : 3.293877551020408
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "8f6457ae-ca11-4334-bda2-2b70b86eb963",
    "objectives" : {
      "NumberOfConcerns" : 0.99375,
      "NumberOfRefactorings" : 100.0,
      "LackOfCohesion" : 0.5769584288710616,
      "MetricsIntensity" : 0.06087447359900338,
      "Density" : 0.9858895705521472
    },
    "euclideanDistance" : 100.01147986125396,
    "generation" : 24,
    "numberOfRefactorings" : 100,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714705882352941,
      "LackOfCohesion" : 0.5769584288710616,
      "MetricsIntensity" : 0.06087447359900339,
      "Density" : 3.2829417773238
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "e9e89efa-6f51-48d5-98e2-04e7053311d2",
    "objectives" : {
      "NumberOfConcerns" : 0.9943181818181818,
      "NumberOfRefactorings" : 100.0,
      "LackOfCohesion" : 0.5781575208125361,
      "MetricsIntensity" : 0.06080921024706273,
      "Density" : 0.9978527607361963
    },
    "euclideanDistance" : 100.01161103920747,
    "generation" : 34,
    "numberOfRefactorings" : 100,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7140058765915769,
      "LackOfCohesion" : 0.5781575208125361,
      "MetricsIntensity" : 0.060809210247062734,
      "Density" : 3.3193877551020403
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "a8f2c1c5-797b-40aa-8c8c-579cbd3f526e",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 101.0,
      "LackOfCohesion" : 0.5787080457970399,
      "MetricsIntensity" : 0.060905925973127384,
      "Density" : 1.0006134969325153
    },
    "euclideanDistance" : 101.01151543278766,
    "generation" : 8,
    "numberOfRefactorings" : 101,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7137254901960783,
      "LackOfCohesion" : 0.5787080457970399,
      "MetricsIntensity" : 0.060905925973127384,
      "Density" : 3.3319713993871303
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "e535059d-24a0-4660-830e-2b0465fcd997",
    "objectives" : {
      "NumberOfConcerns" : 0.9954545454545455,
      "NumberOfRefactorings" : 103.0,
      "LackOfCohesion" : 0.5742774598100978,
      "MetricsIntensity" : 0.06072489118806412,
      "Density" : 0.9855828220858895
    },
    "euclideanDistance" : 103.01114398629166,
    "generation" : 32,
    "numberOfRefactorings" : 103,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7142857142857144,
      "LackOfCohesion" : 0.5742774598100978,
      "MetricsIntensity" : 0.06072489118806412,
      "Density" : 3.278571428571429
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "773b703d-0688-4dc8-91af-68747bb0c05f",
    "objectives" : {
      "NumberOfConcerns" : 0.9943181818181818,
      "NumberOfRefactorings" : 104.0,
      "LackOfCohesion" : 0.5748225081740989,
      "MetricsIntensity" : 0.06082138313812746,
      "Density" : 0.9886503067484662
    },
    "euclideanDistance" : 104.01105815360346,
    "generation" : 27,
    "numberOfRefactorings" : 104,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714005876591577,
      "LackOfCohesion" : 0.5748225081740989,
      "MetricsIntensity" : 0.06082138313812746,
      "Density" : 3.2921348314606744
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "625b64a7-4dd1-4155-a7c9-ab7cd377c116",
    "objectives" : {
      "NumberOfConcerns" : 0.9965909090909091,
      "NumberOfRefactorings" : 104.0,
      "LackOfCohesion" : 0.5722596142072395,
      "MetricsIntensity" : 0.06054814329309858,
      "Density" : 0.9920245398773007
    },
    "euclideanDistance" : 104.01109774092143,
    "generation" : 32,
    "numberOfRefactorings" : 104,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7162426614481403,
      "LackOfCohesion" : 0.5722596142072395,
      "MetricsIntensity" : 0.06054814329309858,
      "Density" : 3.3
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "51f00248-6c78-46e4-bf27-5f253571c125",
    "objectives" : {
      "NumberOfConcerns" : 0.9954545454545455,
      "NumberOfRefactorings" : 105.0,
      "LackOfCohesion" : 0.5728021683245125,
      "MetricsIntensity" : 0.0606444167661595,
      "Density" : 0.9950920245398773
    },
    "euclideanDistance" : 105.0110133174549,
    "generation" : 36,
    "numberOfRefactorings" : 105,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7159647404505391,
      "LackOfCohesion" : 0.5728021683245125,
      "MetricsIntensity" : 0.0606444167661595,
      "Density" : 3.3135852911133807
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "85bb1f32-cefc-4080-8ee7-821126dad832",
    "objectives" : {
      "NumberOfConcerns" : 0.9960227272727272,
      "NumberOfRefactorings" : 106.0,
      "LackOfCohesion" : 0.5720045934231058,
      "MetricsIntensity" : 0.06064993504269135,
      "Density" : 0.995398773006135
    },
    "euclideanDistance" : 106.01091334225956,
    "generation" : 41,
    "numberOfRefactorings" : 106,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7169441723800196,
      "LackOfCohesion" : 0.5720045934231058,
      "MetricsIntensity" : 0.06064993504269136,
      "Density" : 3.3146067415730345
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "4e77f7a3-311a-4c36-9673-13b3dde01194",
    "objectives" : {
      "NumberOfConcerns" : 0.9954545454545455,
      "NumberOfRefactorings" : 107.0,
      "LackOfCohesion" : 0.5736115155491873,
      "MetricsIntensity" : 0.060620600204548,
      "Density" : 0.9877300613496932
    },
    "euclideanDistance" : 107.01074359826727,
    "generation" : 31,
    "numberOfRefactorings" : 107,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7159647404505387,
      "LackOfCohesion" : 0.5736115155491873,
      "MetricsIntensity" : 0.06062060020454799,
      "Density" : 3.2890704800817163
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "0fbc96c7-abf5-4293-a92a-e60934a4ac6e",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 108.0,
      "LackOfCohesion" : 0.5744559944361142,
      "MetricsIntensity" : 0.0609125888235693,
      "Density" : 0.9923312883435583
    },
    "euclideanDistance" : 108.01067003561644,
    "generation" : 24,
    "numberOfRefactorings" : 108,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7137254901960786,
      "LackOfCohesion" : 0.5744559944361142,
      "MetricsIntensity" : 0.06091258882356931,
      "Density" : 3.304392236976506
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "54502851-85ed-4a13-8add-4c70de2c4643",
    "objectives" : {
      "NumberOfConcerns" : 0.9971590909090909,
      "NumberOfRefactorings" : 108.0,
      "LackOfCohesion" : 0.5701347547384611,
      "MetricsIntensity" : 0.06049558613829868,
      "Density" : 0.9947852760736197
    },
    "euclideanDistance" : 108.0107061237569,
    "generation" : 40,
    "numberOfRefactorings" : 108,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7155425219941352,
      "LackOfCohesion" : 0.5701347547384611,
      "MetricsIntensity" : 0.06049558613829868,
      "Density" : 3.3091836734693874
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "399441f6-6996-4d9a-bf33-e0754a335c70",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 109.0,
      "LackOfCohesion" : 0.5760966986633695,
      "MetricsIntensity" : 0.06085279663416232,
      "Density" : 0.9969325153374233
    },
    "euclideanDistance" : 109.01062276233988,
    "generation" : 35,
    "numberOfRefactorings" : 109,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.712047012732615,
      "LackOfCohesion" : 0.5760966986633695,
      "MetricsIntensity" : 0.06085279663416232,
      "Density" : 3.319713993871298
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "2bbfb77f-aca4-4d1b-b276-14708aa5bbe8",
    "objectives" : {
      "NumberOfConcerns" : 0.99375,
      "NumberOfRefactorings" : 109.0,
      "LackOfCohesion" : 0.5759060312155319,
      "MetricsIntensity" : 0.06074859691274507,
      "Density" : 0.9987730061349693
    },
    "euclideanDistance" : 109.01064372220311,
    "generation" : 40,
    "numberOfRefactorings" : 109,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714705882352941,
      "LackOfCohesion" : 0.5759060312155319,
      "MetricsIntensity" : 0.06074859691274507,
      "Density" : 3.3292433537832307
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "64ae0643-a896-4501-839e-872f8606d821",
    "objectives" : {
      "NumberOfConcerns" : 0.9920454545454546,
      "NumberOfRefactorings" : 110.0,
      "LackOfCohesion" : 0.5766446731254117,
      "MetricsIntensity" : 0.060949566303775383,
      "Density" : 0.9996932515337423
    },
    "euclideanDistance" : 110.01054392516076,
    "generation" : 27,
    "numberOfRefactorings" : 110,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.711764705882353,
      "LackOfCohesion" : 0.5766446731254117,
      "MetricsIntensity" : 0.06094956630377538,
      "Density" : 3.3323108384458084
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "2aea4a32-2f7c-487d-accb-df3b85251908",
    "objectives" : {
      "NumberOfConcerns" : 0.9926136363636363,
      "NumberOfRefactorings" : 111.0,
      "LackOfCohesion" : 0.5770159602541246,
      "MetricsIntensity" : 0.06092019516013928,
      "Density" : 0.9966257668711657
    },
    "euclideanDistance" : 111.01042835445169,
    "generation" : 36,
    "numberOfRefactorings" : 111,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7127450980392156,
      "LackOfCohesion" : 0.5770159602541246,
      "MetricsIntensity" : 0.06092019516013927,
      "Density" : 3.3186925434116445
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "11581bdb-ccb2-43dc-adb0-dbe07fd3e9dc",
    "objectives" : {
      "NumberOfConcerns" : 0.9977272727272727,
      "NumberOfRefactorings" : 112.0,
      "LackOfCohesion" : 0.5702197458831028,
      "MetricsIntensity" : 0.060671533827943484,
      "Density" : 0.9852760736196319
    },
    "euclideanDistance" : 112.0102453360656,
    "generation" : 26,
    "numberOfRefactorings" : 112,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7181996086105675,
      "LackOfCohesion" : 0.5702197458831028,
      "MetricsIntensity" : 0.06067153382794348,
      "Density" : 3.277551020408163
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "f850d979-d3c7-483d-80fa-5b9b58af6516",
    "objectives" : {
      "NumberOfConcerns" : 0.9914772727272727,
      "NumberOfRefactorings" : 112.0,
      "LackOfCohesion" : 0.5775657528525394,
      "MetricsIntensity" : 0.06101716825998228,
      "Density" : 0.9993865030674847
    },
    "euclideanDistance" : 112.01035267268172,
    "generation" : 20,
    "numberOfRefactorings" : 112,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7124631992149169,
      "LackOfCohesion" : 0.5775657528525394,
      "MetricsIntensity" : 0.06101716825998229,
      "Density" : 3.331288343558282
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.DEBUG, com.facebook.common.logging.FLog.ERROR, com.facebook.common.logging.FLog.INFO], extractedMethods=[com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object), com.facebook.common.logging.FLog.i(String, String, Object, Object), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.d(String, String, Object), com.facebook.common.logging.FLog.d(Class<?>, String, Object), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.i(Class<?>, String, Object), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.isLoggable(int), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object), com.facebook.common.logging.FLog.v(Class<?>, String, Object), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "c9a13f29-6ec1-48d4-8a07-8480e5d2307d",
    "objectives" : {
      "NumberOfConcerns" : 0.9965909090909091,
      "NumberOfRefactorings" : 113.0,
      "LackOfCohesion" : 0.5707597785314955,
      "MetricsIntensity" : 0.06076795982329715,
      "Density" : 0.9883435582822085
    },
    "euclideanDistance" : 113.01017421409017,
    "generation" : 34,
    "numberOfRefactorings" : 113,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7179236043095,
      "LackOfCohesion" : 0.5707597785314955,
      "MetricsIntensity" : 0.060767959823297156,
      "Density" : 3.291113381001021
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "f10d7283-0fa2-47dc-ba34-a62b285ad997",
    "objectives" : {
      "NumberOfConcerns" : 0.9954545454545455,
      "NumberOfRefactorings" : 113.0,
      "LackOfCohesion" : 0.5702013362829484,
      "MetricsIntensity" : 0.06059167586984371,
      "Density" : 0.9911042944785277
    },
    "euclideanDistance" : 113.01018546303551,
    "generation" : 40,
    "numberOfRefactorings" : 113,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714285714285714,
      "LackOfCohesion" : 0.5702013362829484,
      "MetricsIntensity" : 0.0605916758698437,
      "Density" : 3.3003064351378955
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "dd5db9b3-a0ec-4074-a21f-c9ca764637b0",
    "objectives" : {
      "NumberOfConcerns" : 0.9943181818181818,
      "NumberOfRefactorings" : 114.0,
      "LackOfCohesion" : 0.5729381782149182,
      "MetricsIntensity" : 0.0607313516893541,
      "Density" : 0.9932515337423313
    },
    "euclideanDistance" : 114.01011869000537,
    "generation" : 38,
    "numberOfRefactorings" : 114,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.715686274509804,
      "LackOfCohesion" : 0.5729381782149182,
      "MetricsIntensity" : 0.0607313516893541,
      "Density" : 3.3108384458077706
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "c0963e37-b5ed-4e89-9720-fdde1b13f7d1",
    "objectives" : {
      "NumberOfConcerns" : 0.9965909090909091,
      "NumberOfRefactorings" : 116.0,
      "LackOfCohesion" : 0.5686795926595916,
      "MetricsIntensity" : 0.06079729466144051,
      "Density" : 0.9892638036809815
    },
    "euclideanDistance" : 116.00990875396593,
    "generation" : 37,
    "numberOfRefactorings" : 116,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7179236043095,
      "LackOfCohesion" : 0.5686795926595916,
      "MetricsIntensity" : 0.0607972946614405,
      "Density" : 3.29417773237998
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "f4ecf7bb-cc07-4d88-9c65-79fc4fb8f0c7",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 117.0,
      "LackOfCohesion" : 0.5720930416179251,
      "MetricsIntensity" : 0.06076072283299019,
      "Density" : 0.9898773006134969
    },
    "euclideanDistance" : 117.00981689374589,
    "generation" : 27,
    "numberOfRefactorings" : 117,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7137254901960786,
      "LackOfCohesion" : 0.5720930416179251,
      "MetricsIntensity" : 0.060760722832990194,
      "Density" : 3.3029682702149437
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "70e23893-0057-4fd1-bdbe-01509c241eae",
    "objectives" : {
      "NumberOfConcerns" : 0.9948863636363636,
      "NumberOfRefactorings" : 118.0,
      "LackOfCohesion" : 0.5708272984260844,
      "MetricsIntensity" : 0.06086462449685714,
      "Density" : 0.9846625766871165
    },
    "euclideanDistance" : 118.00969836235333,
    "generation" : 29,
    "numberOfRefactorings" : 118,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.716666666666667,
      "LackOfCohesion" : 0.5708272984260844,
      "MetricsIntensity" : 0.06086462449685714,
      "Density" : 3.282208588957056
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "614ac6b4-8437-42f8-a8c5-b1650dfb1bac",
    "objectives" : {
      "NumberOfConcerns" : 0.99375,
      "NumberOfRefactorings" : 118.0,
      "LackOfCohesion" : 0.572464328746638,
      "MetricsIntensity" : 0.06073135168935411,
      "Density" : 0.9898773006134969
    },
    "euclideanDistance" : 118.00974027527361,
    "generation" : 41,
    "numberOfRefactorings" : 118,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714705882352941,
      "LackOfCohesion" : 0.572464328746638,
      "MetricsIntensity" : 0.060731351689354104,
      "Density" : 3.2995910020449895
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "45df9c71-dfe3-4a38-812a-b4fd38ee0dfe",
    "objectives" : {
      "NumberOfConcerns" : 0.9926136363636363,
      "NumberOfRefactorings" : 119.0,
      "LackOfCohesion" : 0.5730084811573112,
      "MetricsIntensity" : 0.06082809078241797,
      "Density" : 0.9929447852760737
    },
    "euclideanDistance" : 119.0096771693538,
    "generation" : 35,
    "numberOfRefactorings" : 119,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7144259077526989,
      "LackOfCohesion" : 0.5730084811573112,
      "MetricsIntensity" : 0.060828090782417986,
      "Density" : 3.313203684749232
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.generic.GenericDraweeHierarchy.FAILURE_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mRoundingParams, com.facebook.drawee.generic.GenericDraweeHierarchy.RETRY_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mActualImageWrapper, com.facebook.drawee.generic.GenericDraweeHierarchy.PLACEHOLDER_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mFadeDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.ACTUAL_IMAGE_INDEX, com.facebook.drawee.generic.GenericDraweeHierarchy.mEmptyActualImageDrawable, com.facebook.drawee.generic.GenericDraweeHierarchy.mTopLevelDrawable], extractedMethods=[com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int), com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter), com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF), com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF), com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener), com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean), com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds(), com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade(), com.facebook.drawee.generic.GenericDraweeHierarchy.reset(), com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int), com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration(), com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int), com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages(), com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable), com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches(), com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int), com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage(), com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "df6ae0dd-a6cd-4e2a-bb9c-a623d6ab9ec7",
    "objectives" : {
      "NumberOfConcerns" : 0.9965909090909091,
      "NumberOfRefactorings" : 121.0,
      "LackOfCohesion" : 0.5681614679588118,
      "MetricsIntensity" : 0.060715066404688586,
      "Density" : 0.9843558282208589
    },
    "euclideanDistance" : 121.0094568354457,
    "generation" : 19,
    "numberOfRefactorings" : 121,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7162426614481405,
      "LackOfCohesion" : 0.5681614679588118,
      "MetricsIntensity" : 0.060715066404688586,
      "Density" : 3.277834525025535
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "5a9d4d87-febb-4aea-b35b-fe9d43e73a04",
    "objectives" : {
      "NumberOfConcerns" : 0.9948863636363636,
      "NumberOfRefactorings" : 124.0,
      "LackOfCohesion" : 0.5696090623514491,
      "MetricsIntensity" : 0.060878893683869006,
      "Density" : 0.9904907975460123
    },
    "euclideanDistance" : 124.00926994229175,
    "generation" : 33,
    "numberOfRefactorings" : 124,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.716666666666667,
      "LackOfCohesion" : 0.5696090623514491,
      "MetricsIntensity" : 0.060878893683869006,
      "Density" : 3.3016359918200404
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "1545cb42-ba10-4158-b41b-9aa1c70f6708",
    "objectives" : {
      "NumberOfConcerns" : 0.99375,
      "NumberOfRefactorings" : 127.0,
      "LackOfCohesion" : 0.568763925754456,
      "MetricsIntensity" : 0.06090826482750511,
      "Density" : 0.9837423312883435
    },
    "euclideanDistance" : 127.00898586421684,
    "generation" : 24,
    "numberOfRefactorings" : 127,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714705882352941,
      "LackOfCohesion" : 0.568763925754456,
      "MetricsIntensity" : 0.060908264827505124,
      "Density" : 3.2824974411463668
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "ba04e5e9-74db-4a35-8c6f-f1c472565760",
    "objectives" : {
      "NumberOfConcerns" : 0.9943181818181818,
      "NumberOfRefactorings" : 127.0,
      "LackOfCohesion" : 0.5699731468716,
      "MetricsIntensity" : 0.060842959706431596,
      "Density" : 0.9957055214723927
    },
    "euclideanDistance" : 127.00908892432102,
    "generation" : 27,
    "numberOfRefactorings" : 127,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714005876591577,
      "LackOfCohesion" : 0.5699731468716,
      "MetricsIntensity" : 0.060842959706431596,
      "Density" : 3.3190184049079754
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "99f76404-c665-4bef-8ac4-7892488ec4bf",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 129.0,
      "LackOfCohesion" : 0.5696752399953744,
      "MetricsIntensity" : 0.06097581560468322,
      "Density" : 0.9868098159509202
    },
    "euclideanDistance" : 129.00886966277153,
    "generation" : 27,
    "numberOfRefactorings" : 129,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7154072620215899,
      "LackOfCohesion" : 0.5696752399953744,
      "MetricsIntensity" : 0.06097581560468322,
      "Density" : 3.2927328556806557
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "f217cc72-3ea4-4e60-b5aa-c9f87f7d84f2",
    "objectives" : {
      "NumberOfConcerns" : 0.9926136363636363,
      "NumberOfRefactorings" : 130.0,
      "LackOfCohesion" : 0.5714270249720664,
      "MetricsIntensity" : 0.06100730695324847,
      "Density" : 0.998159509202454
    },
    "euclideanDistance" : 130.0088914458287,
    "generation" : 23,
    "numberOfRefactorings" : 130,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714425907752699,
      "LackOfCohesion" : 0.5714270249720664,
      "MetricsIntensity" : 0.061007306953248484,
      "Density" : 3.330603889457523
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mBorderPath, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint, com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mPath, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderColor, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mScaleDownInsideBorders, com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mPadding], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.updatePath(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor(), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "91bdd27a-c4d5-403b-90db-7bace8d15b0a",
    "objectives" : {
      "NumberOfConcerns" : 0.9943181818181818,
      "NumberOfRefactorings" : 138.0,
      "LackOfCohesion" : 0.5753222895680487,
      "MetricsIntensity" : 0.06082069535293651,
      "Density" : 0.9849693251533742
    },
    "euclideanDistance" : 138.00830963428268,
    "generation" : 19,
    "numberOfRefactorings" : 138,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.714005876591577,
      "LackOfCohesion" : 0.5753222895680487,
      "MetricsIntensity" : 0.06082069535293651,
      "Density" : 3.276530612244898
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "7dcd4291-8302-4d09-b864-9332a15f72ef",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 139.0,
      "LackOfCohesion" : 0.5758693056029927,
      "MetricsIntensity" : 0.060917425293241116,
      "Density" : 0.9880368098159509
    },
    "euclideanDistance" : 139.00826580909265,
    "generation" : 32,
    "numberOfRefactorings" : 139,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7137254901960783,
      "LackOfCohesion" : 0.5758693056029927,
      "MetricsIntensity" : 0.06091742529324112,
      "Density" : 3.2900919305413687
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "caa50be7-8687-4bf7-8bdd-4b77d1bbb513",
    "objectives" : {
      "NumberOfConcerns" : 0.9920454545454546,
      "NumberOfRefactorings" : 142.0,
      "LackOfCohesion" : 0.5763347241686587,
      "MetricsIntensity" : 0.060972723704919206,
      "Density" : 1.0
    },
    "euclideanDistance" : 142.00816889732508,
    "generation" : 38,
    "numberOfRefactorings" : 142,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7117647058823533,
      "LackOfCohesion" : 0.5763347241686587,
      "MetricsIntensity" : 0.060972723704919206,
      "Density" : 3.329928498467825
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "6cd96130-e415-4530-8cde-3263b2f1acb7",
    "objectives" : {
      "NumberOfConcerns" : 0.9914772727272727,
      "NumberOfRefactorings" : 144.0,
      "LackOfCohesion" : 0.5759432406734998,
      "MetricsIntensity" : 0.06101439496078317,
      "Density" : 0.9843558282208589
    },
    "euclideanDistance" : 144.0079422009486,
    "generation" : 18,
    "numberOfRefactorings" : 144,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7124631992149169,
      "LackOfCohesion" : 0.5759432406734998,
      "MetricsIntensity" : 0.061014394960783175,
      "Density" : 3.281186094069529
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "d1b3e35c-a56e-43f5-a956-7fe9ab23ca9d",
    "objectives" : {
      "NumberOfConcerns" : 0.990909090909091,
      "NumberOfRefactorings" : 145.0,
      "LackOfCohesion" : 0.5776950256501919,
      "MetricsIntensity" : 0.061045886309348436,
      "Density" : 0.999079754601227
    },
    "euclideanDistance" : 145.00799122574384,
    "generation" : 19,
    "numberOfRefactorings" : 145,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7114818449460258,
      "LackOfCohesion" : 0.5776950256501919,
      "MetricsIntensity" : 0.061045886309348436,
      "Density" : 3.330265848670757
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "9c4a7453-bb61-4b75-b656-b1195793ed2b",
    "objectives" : {
      "NumberOfConcerns" : 0.990909090909091,
      "NumberOfRefactorings" : 145.0,
      "LackOfCohesion" : 0.5776950256501918,
      "MetricsIntensity" : 0.06104588630934845,
      "Density" : 0.999079754601227
    },
    "euclideanDistance" : 145.00799122574384,
    "generation" : 25,
    "numberOfRefactorings" : 145,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7114818449460258,
      "LackOfCohesion" : 0.5776950256501918,
      "MetricsIntensity" : 0.061045886309348464,
      "Density" : 3.330265848670757
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.RoundingOptions.CORNER_RADIUS_UNSET, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE, com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING], extractedMethods=[com.facebook.fresco.vito.options.RoundingOptions.asCircle(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii(), com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean), com.facebook.fresco.vito.options.RoundingOptions.isCircular(), com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float), com.facebook.fresco.vito.options.RoundingOptions.hashCode(), com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode(), com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean), com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "e1b7b0e3-c387-4972-9d45-860727cf1037",
    "objectives" : {
      "NumberOfConcerns" : 0.9931818181818182,
      "NumberOfRefactorings" : 147.0,
      "LackOfCohesion" : 0.5732614674188822,
      "MetricsIntensity" : 0.06086428174003611,
      "Density" : 0.9840490797546012
    },
    "euclideanDistance" : 147.00777903188032,
    "generation" : 31,
    "numberOfRefactorings" : 147,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.712047012732615,
      "LackOfCohesion" : 0.5732614674188822,
      "MetricsIntensity" : 0.06086428174003611,
      "Density" : 3.276813074565884
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "e2d7d51b-3aa6-424c-8e5d-296e1fb3d002",
    "objectives" : {
      "NumberOfConcerns" : 0.9926136363636363,
      "NumberOfRefactorings" : 149.0,
      "LackOfCohesion" : 0.5741772200600771,
      "MetricsIntensity" : 0.060931694480253006,
      "Density" : 0.9871165644171779
    },
    "euclideanDistance" : 149.00769467747048,
    "generation" : 20,
    "numberOfRefactorings" : 149,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7127450980392156,
      "LackOfCohesion" : 0.5741772200600771,
      "MetricsIntensity" : 0.060931694480253006,
      "Density" : 3.2870275791624097
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "1811eeb5-d12e-468a-9288-87aaacc600d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9914772727272727,
      "NumberOfRefactorings" : 149.0,
      "LackOfCohesion" : 0.5755555498573426,
      "MetricsIntensity" : 0.06099251799801312,
      "Density" : 0.9984662576687117
    },
    "euclideanDistance" : 149.00776807377613,
    "generation" : 25,
    "numberOfRefactorings" : 149,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7107843137254901,
      "LackOfCohesion" : 0.5755555498573426,
      "MetricsIntensity" : 0.06099251799801311,
      "Density" : 3.3282208588957065
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "182d5d02-7b08-4955-81e4-ade058134959",
    "objectives" : {
      "NumberOfConcerns" : 0.9914772727272727,
      "NumberOfRefactorings" : 150.0,
      "LackOfCohesion" : 0.572521734571052,
      "MetricsIntensity" : 0.06098491166144314,
      "Density" : 0.9877300613496932
    },
    "euclideanDistance" : 150.00763359960197,
    "generation" : 34,
    "numberOfRefactorings" : 150,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7107843137254901,
      "LackOfCohesion" : 0.572521734571052,
      "MetricsIntensity" : 0.06098491166144314,
      "Density" : 3.2924335378323115
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.mContentResolver, com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME], extractedMethods=[com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "bdd0e4e1-5287-4d30-b6f2-3ed782db051a",
    "objectives" : {
      "NumberOfConcerns" : 0.990909090909091,
      "NumberOfRefactorings" : 151.0,
      "LackOfCohesion" : 0.5764752799893427,
      "MetricsIntensity" : 0.06106017317812863,
      "Density" : 0.998159509202454
    },
    "euclideanDistance" : 151.00766296888858,
    "generation" : 27,
    "numberOfRefactorings" : 151,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7114818449460258,
      "LackOfCohesion" : 0.5764752799893427,
      "MetricsIntensity" : 0.06106017317812863,
      "Density" : 3.32719836400818
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mFrameCacheListener, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.mLastFrameNumber, com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET], extractedMethods=[com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear(), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener), com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "33678cdc-ae3c-40a3-b602-97a639ed9707",
    "objectives" : {
      "NumberOfConcerns" : 0.9903409090909091,
      "NumberOfRefactorings" : 153.0,
      "LackOfCohesion" : 0.5738773111584121,
      "MetricsIntensity" : 0.061058089368668626,
      "Density" : 0.9834355828220859
    },
    "euclideanDistance" : 153.0074540142418,
    "generation" : 17,
    "numberOfRefactorings" : 153,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7105004906771346,
      "LackOfCohesion" : 0.5738773111584121,
      "MetricsIntensity" : 0.06105808936866863,
      "Density" : 3.2814738996929376
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "389367c1-bfda-42f3-8722-b7db6b6b32b5",
    "objectives" : {
      "NumberOfConcerns" : 0.9903409090909091,
      "NumberOfRefactorings" : 153.0,
      "LackOfCohesion" : 0.5738773111584121,
      "MetricsIntensity" : 0.061058089368668626,
      "Density" : 0.9834355828220859
    },
    "euclideanDistance" : 153.0074540142418,
    "generation" : 24,
    "numberOfRefactorings" : 153,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7105004906771346,
      "LackOfCohesion" : 0.5738773111584121,
      "MetricsIntensity" : 0.061058089368668626,
      "Density" : 3.2814738996929376
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "098739d6-4731-41c7-9c97-3f0b6a497c13",
    "objectives" : {
      "NumberOfConcerns" : 0.990909090909091,
      "NumberOfRefactorings" : 154.0,
      "LackOfCohesion" : 0.574249058370308,
      "MetricsIntensity" : 0.06102868182956334,
      "Density" : 0.997239263803681
    },
    "euclideanDistance" : 154.00749940654438,
    "generation" : 35,
    "numberOfRefactorings" : 154,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7114818449460256,
      "LackOfCohesion" : 0.574249058370308,
      "MetricsIntensity" : 0.06102868182956335,
      "Density" : 3.3241308793456037
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend), com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()]"
      } ]
    } ]
  }, {
    "solutionId" : "32df6b62-aec2-442f-850b-34ce17347aef",
    "objectives" : {
      "NumberOfConcerns" : 0.9897727272727272,
      "NumberOfRefactorings" : 154.0,
      "LackOfCohesion" : 0.5756290961351042,
      "MetricsIntensity" : 0.06108958071723391,
      "Density" : 0.998159509202454
    },
    "euclideanDistance" : 154.00750323685745,
    "generation" : 26,
    "numberOfRefactorings" : 154,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7095191364082436,
      "LackOfCohesion" : 0.5756290961351042,
      "MetricsIntensity" : 0.06108958071723392,
      "Density" : 3.3306038894575227
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName(), com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int), com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "ec204c1c-8c01-4afc-b18c-559a178e56ae",
    "objectives" : {
      "NumberOfConcerns" : 0.9897727272727272,
      "NumberOfRefactorings" : 155.0,
      "LackOfCohesion" : 0.5747961002127856,
      "MetricsIntensity" : 0.06112590984227147,
      "Density" : 0.9865030674846625
    },
    "euclideanDistance" : 155.00737713182392,
    "generation" : 18,
    "numberOfRefactorings" : 155,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7111984282907664,
      "LackOfCohesion" : 0.5747961002127856,
      "MetricsIntensity" : 0.06112590984227147,
      "Density" : 3.291709314227226
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setCallbacks(Drawable, Drawable.Callback, TransformCallback)', targetType='com.facebook.drawee.drawable.TransformAwareDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.drawee.drawable.CloneableDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  }, {
    "solutionId" : "7f5817a6-70ee-4b0f-acb1-6dff2f31c606",
    "objectives" : {
      "NumberOfConcerns" : 0.9892045454545455,
      "NumberOfRefactorings" : 156.0,
      "LackOfCohesion" : 0.5765500586199698,
      "MetricsIntensity" : 0.06115744026198881,
      "Density" : 0.9978527607361963
    },
    "euclideanDistance" : 156.00740490748333,
    "generation" : 8,
    "numberOfRefactorings" : 156,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7102161100196465,
      "LackOfCohesion" : 0.5765500586199698,
      "MetricsIntensity" : 0.06115744026198882,
      "Density" : 3.329580348004095
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalContentUriFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getCameraImage(Uri)', targetType='com.facebook.imagepipeline.common.ResizeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getEncodedImage(ImageRequest)', targetType='com.facebook.common.memory.PooledByteBuffer.ClosedException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.getProducerName()', targetType='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imagepipeline.producers.LocalContentUriFetchProducer.PRODUCER_NAME', targetTypeName='com.facebook.imagepipeline.producers.PriorityStarvingThrottlingProducer.PriorityComparator'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.ProgressBarDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setAlpha(int)', targetType='com.facebook.common.executors.ConstrainedExecutorService.Worker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.fresco.vito.core.DefaultFrescoVitoConfig.DefaultPrefetchConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.cloneDrawable()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getRadius()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setRadius(int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getOpacity()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBarWidth(int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getBarWidth()', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setPadding(int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getPadding(Rect)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.drawBar(Canvas, int)', targetType='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.ProgressBarDrawable.mPath', targetTypeName='com.facebook.samples.zoomable.MultiZoomableControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.getColor()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.setBackgroundColor(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.ProgressBarDrawable.onLevelChange(int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.drawee.drawable.InstrumentedDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.common.executors.UiThreadImmediateExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getScaleDownInsideBorders()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setScaleDownInsideBorders(boolean)', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.datasource.DataSources.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.updatePath()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mTempRect', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mInsideBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mBorderRadii', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPadding', targetTypeName='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getBorderColor()', targetType='com.facebook.common.media.MimeTypeMapWrapper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.fresco.samples.showcase.settings.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle()', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean)', targetType='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.options.RoundingOptions.AS_CIRCLE_ANTI_ALIASING', targetTypeName='com.facebook.fresco.vito.core.FrescoDrawable2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.imagepipeline.instrumentation.FrescoInstrumenter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.asCircle(boolean, boolean)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.getCachedFrame(int)', targetType='com.facebook.fresco.vito.listener.BaseImageListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.clear()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.ImageFormatSvgFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.setFrameCacheListener(FrameCacheListener)', targetType='com.facebook.drawee.drawable.AutoRotateDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.onFrameRendered(int, CloseableReference<Bitmap>, int)', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.closeAndResetLastBitmapReference()', targetType='com.facebook.samples.comparison.holders.AQueryHolder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache.FRAME_NUMBER_UNSET', targetTypeName='com.facebook.samples.comparison.holders.AQueryHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.formatString(String, Object...)', targetType='com.facebook.imagepipeline.memory.BufferMemoryChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate)', targetType='com.facebook.samples.scrollperf.fragments.recycler.DraweeViewHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.getTag(Class<?>)', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.isLoggable(int)', targetType='com.facebook.common.activitylistener.ActivityListenerManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, Throwable, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(String, String, Object...)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(String, String, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object)', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.d(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.i(Class<?>, String, Object, Object, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, String, Object)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...)', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.generic.GenericDraweeHierarchy",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(int)', targetType='com.facebook.binaryresource.ByteArrayBinaryResource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getBounds()', targetType='com.facebook.common.internal.ImmutableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRoundingParams(RoundingParams)', targetType='com.facebook.common.executors.HandlerExecutorServiceImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.reset()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment.ShowRestartMessageDialog'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOnFadeListener(OnFadeListener)', targetType='com.facebook.imagepipeline.systrace.DefaultFrescoSystrace.DefaultArgsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getRoundingParams()', targetType='com.facebook.common.file.FileTree'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasImage()', targetType='com.facebook.imagepipeline.cache.CountingMemoryCacheInspector.DumpInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(Drawable)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImage(int)', targetType='com.facebook.imagepipeline.memory.DefaultBitmapPoolParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageColorFilter(ColorFilter)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeInLayer(int)', targetType='com.facebook.imageutils.ImageMetaData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetFade()', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetry(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailure(Throwable)', targetType='com.facebook.drawee.view.AspectRatioMeasure.Spec'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(int)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFailureImage(Drawable)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageBounds(RectF)', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.resetActualImages()', targetType='com.facebook.imagepipeline.producers.EncodedProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setBackgroundImage(Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setOverlayImage(int, Drawable)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getActualImageFocusPoint()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.hasPlaceholderImage()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.fadeOutBranches()', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setActualImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setPlaceholderImageFocusPoint(PointF)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setProgress(float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setImage(Drawable, float, boolean)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getTopLevelDrawable()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setRetryImage(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setFadeDuration(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setChildDrawableAtIndex(int, Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.setControllerOverlay(Drawable)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getParentDrawableAtIndex(int)', targetType='com.facebook.drawee.gestures.GestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.generic.GenericDraweeHierarchy.getFadeDuration()', targetType='com.facebook.drawee.gestures.GestureDetector'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.producers.LocalFetchProducer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getEncodedImage(InputStream, int)', targetType='com.facebook.cache.disk.DiskStorage.DiskDumpInfoEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.getProducerName()', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.producers.LocalFetchProducer.produceResults(Consumer<EncodedImage>, ProducerContext)', targetType='com.facebook.samples.comparison.adapters.PicassoAdapter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.DrawableUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.multiplyColorAlpha(int, int)', targetType='com.facebook.drawee.drawable.ProgressBarDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.getOpacityFromColor(int)', targetType='com.facebook.fresco.samples.showcase.common.SimpleScaleTypeAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.cloneDrawable(Drawable)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.DrawableUtils.setDrawableProperties(Drawable, DrawableProperties)', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.animation2.utils.AnimationControlsManager",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.updateBackendData(AnimationBackend)', targetType='com.facebook.fresco.samples.showcase.vito.VitoViewRecyclerFragment.SimpleAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.samples.animation2.utils.AnimationControlsManager.setupResetButton()', targetType='com.facebook.imagepipeline.nativecode.NativeFiltersLoader'"
      } ]
    } ]
  } ]
}