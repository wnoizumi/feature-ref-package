{
  "executionId" : "6e050e1a-c8a7-4bab-8702-57271ccdea26",
  "computingTime" : 4932,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.384851586489252,
    "meanNumConcerns" : 1.773084479371316,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "81ec65e4-fa11-45ed-93ca-bbc749d37996",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 5.0,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.05689099483959827,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 5.229039007801785,
    "generation" : 0,
    "numberOfRefactorings" : 5,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774193548387097,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.05689099483959828,
      "Density" : 3.374745417515275,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "5cd87cd5-fe3e-4617-86e5-ffd302fdb38a",
    "objectives" : {
      "NumberOfConcerns" : 1.0083102493074791,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.5662823487378723,
      "MetricsIntensity" : 0.05659017093761244,
      "Density" : 1.0063501663138796
    },
    "euclideanDistance" : 8.145754008195762,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7738791423001943,
      "LackOfCohesion" : 0.5662823487378723,
      "MetricsIntensity" : 0.05659017093761245,
      "Density" : 3.382113821138211,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "161c12f3-0a91-4bce-89af-f690c1cb538a",
    "objectives" : {
      "NumberOfConcerns" : 1.007202216066482,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5683577658286099,
      "MetricsIntensity" : 0.05662293013953031,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 12.097160736281372,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.773658536585366,
      "LackOfCohesion" : 0.5683577658286099,
      "MetricsIntensity" : 0.05662293013953032,
      "Density" : 3.3652085452695832,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "3244ff5c-425a-4244-af1a-959edd2bc9f6",
    "objectives" : {
      "NumberOfConcerns" : 1.0077562326869807,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.5669983775924247,
      "MetricsIntensity" : 0.056823316167610986,
      "Density" : 1.0069549440580587
    },
    "euclideanDistance" : 12.097695934901617,
    "generation" : 0,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7763671875,
      "LackOfCohesion" : 0.5669983775924247,
      "MetricsIntensity" : 0.05682331616761098,
      "Density" : 3.3875890132248228,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "87b9a073-6c33-4488-b114-9f73760d2e49",
    "objectives" : {
      "NumberOfConcerns" : 1.0060941828254848,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5677143284414994,
      "MetricsIntensity" : 0.056700645178032874,
      "Density" : 1.0
    },
    "euclideanDistance" : 14.083243235370064,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7734375,
      "LackOfCohesion" : 0.5677143284414994,
      "MetricsIntensity" : 0.056700645178032874,
      "Density" : 3.3676171079429738,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "d3097ad3-0356-47ee-8172-4e98b9a891d9",
    "objectives" : {
      "NumberOfConcerns" : 1.0066481994459833,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5702772407312017,
      "MetricsIntensity" : 0.05676165793960863,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 14.083537074871412,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7744140625,
      "LackOfCohesion" : 0.5702772407312017,
      "MetricsIntensity" : 0.05676165793960863,
      "Density" : 3.371312309257375,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "59499648-c77a-4805-8bbb-f0fc0c3b3700",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5658309284853026,
      "MetricsIntensity" : 0.057242971461417345,
      "Density" : 0.9996976111279104
    },
    "euclideanDistance" : 17.068214465821622,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774066797642436,
      "LackOfCohesion" : 0.5658309284853026,
      "MetricsIntensity" : 0.05724297146141735,
      "Density" : 3.3803680981595092,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    } ]
  }, {
    "solutionId" : "39dbe8e0-7cb0-4f5d-99ae-a2399b93063d",
    "objectives" : {
      "NumberOfConcerns" : 1.0066481994459833,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5676859244693848,
      "MetricsIntensity" : 0.05684653904584708,
      "Density" : 1.001814333232537
    },
    "euclideanDistance" : 17.06875717190798,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7761485826001955,
      "LackOfCohesion" : 0.5676859244693848,
      "MetricsIntensity" : 0.05684653904584708,
      "Density" : 3.3737270875763747,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "afaa7db6-6c33-4089-951a-99c2b08be7a8",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.5676970054438123,
      "MetricsIntensity" : 0.05680678056875373,
      "Density" : 1.004233444209253
    },
    "euclideanDistance" : 20.05854188959478,
    "generation" : 0,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774193548387097,
      "LackOfCohesion" : 0.5676970054438123,
      "MetricsIntensity" : 0.056806780568753726,
      "Density" : 3.381873727087576,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "54f01f36-8f0d-4ccf-b408-ca6d0f7b1c77",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.5662286414051496,
      "MetricsIntensity" : 0.056823126811319825,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 24.048639575261227,
    "generation" : 0,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7712609970674489,
      "LackOfCohesion" : 0.5662286414051496,
      "MetricsIntensity" : 0.056823126811319825,
      "Density" : 3.380224260958206,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "638f276c-746e-4317-aa26-7b3071a6f09d",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5673245359530595,
      "MetricsIntensity" : 0.05693167936209765,
      "Density" : 1.000604777744179
    },
    "euclideanDistance" : 25.04663808855247,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.772994129158513,
      "LackOfCohesion" : 0.5673245359530595,
      "MetricsIntensity" : 0.056931679362097656,
      "Density" : 3.369653767820774,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "f2a7dd48-e89a-4e2f-b324-5950e6350bfb",
    "objectives" : {
      "NumberOfConcerns" : 1.0038781163434902,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.5684697191497955,
      "MetricsIntensity" : 0.05688198338836382,
      "Density" : 1.0
    },
    "euclideanDistance" : 25.04663978768605,
    "generation" : 0,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7712609970674484,
      "LackOfCohesion" : 0.5684697191497955,
      "MetricsIntensity" : 0.05688198338836381,
      "Density" : 3.3710499490316,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "52f4ee3a-b198-4898-9816-df7067dc8247",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.5650218053810038,
      "MetricsIntensity" : 0.05687157243492723,
      "Density" : 0.9978832778953735
    },
    "euclideanDistance" : 27.04299914750906,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7710371819960864,
      "LackOfCohesion" : 0.5650218053810038,
      "MetricsIntensity" : 0.05687157243492723,
      "Density" : 3.3639143730886847,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "86cd1c21-9e9e-4cf5-b0be-894a8cb459ab",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.5661311668490541,
      "MetricsIntensity" : 0.0569917722211951,
      "Density" : 0.998790444511642
    },
    "euclideanDistance" : 32.036336912196944,
    "generation" : 0,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7727717923604311,
      "LackOfCohesion" : 0.5661311668490541,
      "MetricsIntensity" : 0.0569917722211951,
      "Density" : 3.3669724770642206,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "f8cec21f-991e-477a-8b72-c4b44f7d01b9",
    "objectives" : {
      "NumberOfConcerns" : 1.004432132963989,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.5739434103195311,
      "MetricsIntensity" : 0.056797397373709105,
      "Density" : 0.9984880556395525
    },
    "euclideanDistance" : 35.03339120452919,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.772238514173998,
      "LackOfCohesion" : 0.5739434103195311,
      "MetricsIntensity" : 0.056797397373709105,
      "Density" : 3.3625254582484723,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.common.references.SharedReference.NullReferenceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "fe62d1b9-4276-47ec-ac22-a1be3856d9fa",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.5702194204249653,
      "MetricsIntensity" : 0.05701854279008115,
      "Density" : 0.998185666767463
    },
    "euclideanDistance" : 36.032320252644354,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7708129285014693,
      "LackOfCohesion" : 0.5702194204249653,
      "MetricsIntensity" : 0.057018542790081145,
      "Density" : 3.3683673469387756,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "509af307-11e2-47d4-bd61-ef40a1f15eda",
    "objectives" : {
      "NumberOfConcerns" : 1.0049861495844876,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.5702804465278947,
      "MetricsIntensity" : 0.056872639274078714,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 36.03253948657943,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7732160312805472,
      "LackOfCohesion" : 0.5702804465278947,
      "MetricsIntensity" : 0.056872639274078714,
      "Density" : 3.376782077393076,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "e7a3194f-e9b9-4d2c-ad53-8231a9ea13d2",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5664243659975943,
      "MetricsIntensity" : 0.057078792814352006,
      "Density" : 0.9936498336861204
    },
    "euclideanDistance" : 38.030430602836844,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7698334965719884,
      "LackOfCohesion" : 0.5664243659975943,
      "MetricsIntensity" : 0.057078792814352006,
      "Density" : 3.3530612244897964,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.common.references.SharedReference.NullReferenceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "9a8bb127-49b3-4129-9901-9c3e5727593f",
    "objectives" : {
      "NumberOfConcerns" : 1.004432132963989,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5726631739895114,
      "MetricsIntensity" : 0.05690668624114487,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 38.030785822287406,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7722385141739976,
      "LackOfCohesion" : 0.5726631739895114,
      "MetricsIntensity" : 0.05690668624114487,
      "Density" : 3.3686354378818733,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "136e2baa-0124-4d87-98d3-b5f59f48b957",
    "objectives" : {
      "NumberOfConcerns" : 1.004432132963989,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5711702909161845,
      "MetricsIntensity" : 0.056833940659234784,
      "Density" : 1.0027214998488057
    },
    "euclideanDistance" : 38.0308269685794,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7705078125,
      "LackOfCohesion" : 0.5711702909161845,
      "MetricsIntensity" : 0.05683394065923477,
      "Density" : 3.3767820773930755,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "cc9fe48a-9673-46e9-8fd7-28cf5bcbfa1a",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.571017660879856,
      "MetricsIntensity" : 0.05702990136205248,
      "Density" : 0.9984880556395525
    },
    "euclideanDistance" : 40.02909578381906,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7698334965719886,
      "LackOfCohesion" : 0.571017660879856,
      "MetricsIntensity" : 0.05702990136205248,
      "Density" : 3.3693877551020415,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "d77ccf04-92d5-485d-8e2d-58dc8de8d430",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5721345535544325,
      "MetricsIntensity" : 0.056846843113220025,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 40.02917062895831,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7673509286412512,
      "LackOfCohesion" : 0.5721345535544325,
      "MetricsIntensity" : 0.056846843113220025,
      "Density" : 3.3720693170234455,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "3aef17d5-38c8-43a7-a373-a2e3ca433b3a",
    "objectives" : {
      "NumberOfConcerns" : 1.004432132963989,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5687154800942815,
      "MetricsIntensity" : 0.05684731494190217,
      "Density" : 1.003628666465074
    },
    "euclideanDistance" : 40.02927457904273,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.772238514173998,
      "LackOfCohesion" : 0.5687154800942815,
      "MetricsIntensity" : 0.05684731494190218,
      "Density" : 3.3798370672097757,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.common.references.SharedReference.NullReferenceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "54b6092b-7f54-429a-a4fb-181d00da4479",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5706162049312792,
      "MetricsIntensity" : 0.05704698334745571,
      "Density" : 0.9960689446628364
    },
    "euclideanDistance" : 42.02762199499468,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7696078431372548,
      "LackOfCohesion" : 0.5706162049312792,
      "MetricsIntensity" : 0.05704698334745571,
      "Density" : 3.364657814096018,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "dcb2dc97-e865-453f-9032-286bd39188d4",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 59.0,
      "LackOfCohesion" : 0.5696677707909669,
      "MetricsIntensity" : 0.05705984816491117,
      "Density" : 1.001209555488358
    },
    "euclideanDistance" : 59.019762919411754,
    "generation" : 0,
    "numberOfRefactorings" : 59,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7698334965719882,
      "LackOfCohesion" : 0.5696677707909669,
      "MetricsIntensity" : 0.057059848164911164,
      "Density" : 3.3785714285714277,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "c1a4e0c0-101c-4a2f-9999-fe118113c792",
    "objectives" : {
      "NumberOfConcerns" : 1.0022160664819943,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.5733079771623873,
      "MetricsIntensity" : 0.05700410906349561,
      "Density" : 1.0033262775929845
    },
    "euclideanDistance" : 61.01920215938874,
    "generation" : 0,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7700587084148731,
      "LackOfCohesion" : 0.5733079771623873,
      "MetricsIntensity" : 0.057004109063495595,
      "Density" : 3.382262996941895,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "54c92339-ace3-43ec-93e2-d8c18453c842",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.5710926212916125,
      "MetricsIntensity" : 0.05705145560685414,
      "Density" : 0.9939522225582098
    },
    "euclideanDistance" : 66.01755329207082,
    "generation" : 0,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7678746327130268,
      "LackOfCohesion" : 0.5710926212916125,
      "MetricsIntensity" : 0.05705145560685412,
      "Density" : 3.3506625891947004,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.common.references.SharedReference.NullReferenceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "dc96cba4-04bb-4f75-afdf-2afb317a37ba",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 68.0,
      "LackOfCohesion" : 0.5705130018899325,
      "MetricsIntensity" : 0.057143611951642685,
      "Density" : 0.998185666767463
    },
    "euclideanDistance" : 68.01707807796735,
    "generation" : 0,
    "numberOfRefactorings" : 68,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.76764705882353,
      "LackOfCohesion" : 0.5705130018899325,
      "MetricsIntensity" : 0.05714361195164268,
      "Density" : 3.371807967313585,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "ddc9bc71-631d-42dd-851c-fa4ba1fc03cd",
    "objectives" : {
      "NumberOfConcerns" : 1.0022160664819943,
      "NumberOfRefactorings" : 68.0,
      "LackOfCohesion" : 0.5714080183872874,
      "MetricsIntensity" : 0.056961191222958715,
      "Density" : 0.9996976111279104
    },
    "euclideanDistance" : 68.01715654199602,
    "generation" : 0,
    "numberOfRefactorings" : 68,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7700587084148731,
      "LackOfCohesion" : 0.5714080183872874,
      "MetricsIntensity" : 0.056961191222958715,
      "Density" : 3.370030581039755,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "0a24409c-8a35-4738-a480-9d07657160bf",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 72.0,
      "LackOfCohesion" : 0.5705000525497533,
      "MetricsIntensity" : 0.05702041374860053,
      "Density" : 1.0003023888720894
    },
    "euclideanDistance" : 72.01619715986716,
    "generation" : 0,
    "numberOfRefactorings" : 72,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7708129285014693,
      "LackOfCohesion" : 0.5705000525497533,
      "MetricsIntensity" : 0.057020413748600535,
      "Density" : 3.3720693170234455,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.common.references.SharedReference.NullReferenceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "b0d827a7-87e7-46c9-abb1-4e52dc37737d",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.5696501534713909,
      "MetricsIntensity" : 0.05713933250584093,
      "Density" : 0.9984880556395525
    },
    "euclideanDistance" : 75.0154819337927,
    "generation" : 0,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.76764705882353,
      "LackOfCohesion" : 0.5696501534713909,
      "MetricsIntensity" : 0.05713933250584094,
      "Density" : 3.372829417773238,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.fresco.vito.core.impl.HierarcherImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.animated.webp.WebPFrame'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.fresco.samples.showcase.postprocessor.CachedWatermarkPostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.core.ImagePipelineConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.imageutils.WebpUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.animated.giflite.draw.MovieAnimatedImage'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfUtils'"
      } ]
    } ]
  }, {
    "solutionId" : "97c759eb-c2b8-4147-95c5-f1df3b3b55a2",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 75.0,
      "LackOfCohesion" : 0.5726291767448133,
      "MetricsIntensity" : 0.0570511211343172,
      "Density" : 1.0051406108255216
    },
    "euclideanDistance" : 75.01563032804661,
    "generation" : 0,
    "numberOfRefactorings" : 75,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7690802348336598,
      "LackOfCohesion" : 0.5726291767448133,
      "MetricsIntensity" : 0.057051121134317206,
      "Density" : 3.388379204892966,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.drawee.drawable.DrawableProperties'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.core.impl.source.FirstAvailableImageSource'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "5d65bd76-ba45-41ff-be90-18be2b8df1f9",
    "objectives" : {
      "NumberOfConcerns" : 0.9983379501385041,
      "NumberOfRefactorings" : 80.0,
      "LackOfCohesion" : 0.5728489080855298,
      "MetricsIntensity" : 0.057290762540226456,
      "Density" : 0.9990928333837314
    },
    "euclideanDistance" : 80.01453807437353,
    "generation" : 0,
    "numberOfRefactorings" : 80,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7684003925417078,
      "LackOfCohesion" : 0.5728489080855298,
      "MetricsIntensity" : 0.05729076254022645,
      "Density" : 3.3748723186925442,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.configs.volley.SampleVolleyFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.memory.BasePool.PoolSizeViolationException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.cache.common.MultiCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.imagepipeline.core.ProducerSequenceFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.EncodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.core.VitoImageRequest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.samples.zoomable.MultiGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.AspectRatioMeasure'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.producers.JobScheduler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.nativecode.WebpTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.samples.animation2.utils.AnimationControlsManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.imagepipeline.request.BaseRepeatedPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.BasePool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.nativecode.NativeJpegTranscoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.AnimatableKeyframesDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.common.references.SharedReference.NullReferenceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.fresco.ui.common.BaseControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.ui.common.MultiUriHelper'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "7dc2151a-9522-4394-bc24-08dec44bf4cc",
    "objectives" : {
      "NumberOfConcerns" : 0.9894736842105263,
      "NumberOfRefactorings" : 96.0,
      "LackOfCohesion" : 0.5736447654507383,
      "MetricsIntensity" : 0.057408097234262025,
      "Density" : 0.9942546114302994
    },
    "euclideanDistance" : 96.01197823402376,
    "generation" : 0,
    "numberOfRefactorings" : 96,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7544204322200392,
      "LackOfCohesion" : 0.5736447654507383,
      "MetricsIntensity" : 0.05740809723426202,
      "Density" : 3.368852459016393,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoRegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedCornersDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedCornersDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.drawable.RoundedCornersDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.drawable.RoundedCornersDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedCornersDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.drawable.RoundedCornersDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.fresco.vito.drawable.ArrayVitoDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.components.DeferredReleaserConcurrentImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.drawee.generic.GenericDraweeHierarchyBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.samples.scrollperf.postprocessor.DelayPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.imagepipeline.memory.PoolConfig.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.common.references.DefaultCloseableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.common.references.DefaultCloseableReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.transcoder.JpegTranscoderUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.backends.volley.VolleyImagePipelineConfigFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.animated.giflite.draw.MovieScaleHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.animated.giflite.draw.MovieScaleHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.InterpolatingScaleType'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher.HttpUrlConnectionNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.postprocessors.RoundPostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.nativecode.StaticWebpNativeLoader'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.common.internal.ByteStreams.FastByteArrayOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.imagepipeline.nativecode.NativeRoundingFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.common.memory.PooledByteArrayBufferedInputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.imagepipeline.memory.FlexByteArrayPool.SoftRefByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.imagepipeline.memory.FlexByteArrayPool.SoftRefByteArrayPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.vito.init.FrescoVito'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationDebugFragment.FrameInformationHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationDebugFragment.FrameInformationHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationDebugFragment.FrameInformationHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationDebugFragment.FrameInformationHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener2.LogHandler'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.drawee.drawable.RoundedNinePatchDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.debug.FlipperImageTracker.ImageDebugData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.common.references.SharedReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.common.references.SharedReference'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.common.references.SharedReference'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier.IncreasingQualityDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer.CachedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer.CachedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer.CachedPostprocessorConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer.CachedPostprocessorConsumer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.transcoder.ImageTranscodeResult'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.backends.pipeline.info.ImagePerfData'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.AbstractScaleType'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imageutils.HeifExifUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.StandaloneActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.datasource.SimpleDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imageutils.TiffUtil.TiffHeader'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.samples.scrollperf.data.impl.InfiniteSimpleAdapterTest'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.samples.scrollperf.data.impl.InfiniteSimpleAdapterTest'"
      } ]
    } ]
  } ]
}