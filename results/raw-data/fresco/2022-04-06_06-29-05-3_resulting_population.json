{
  "executionId" : "3a64de84-9c9e-4f5d-868b-8c064495a384",
  "computingTime" : 1304315,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 27,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.4455852156057496,
    "meanNumConcerns" : 1.8045186640471513,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "5ae4176c-5d5f-4ecc-9864-1ee58c40051c",
    "objectives" : {
      "NumberOfConcerns" : 1.0016330974414807,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.5675290251282474,
      "MetricsIntensity" : 0.06101672770506671,
      "Density" : 0.9952324195470799
    },
    "euclideanDistance" : 11.104934428722693,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8021547502448574,
      "LackOfCohesion" : 0.5675290251282474,
      "MetricsIntensity" : 0.06101672770506672,
      "Density" : 3.425641025641026
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "726ec1ba-f2a8-43c1-8fd0-498a563ed2a7",
    "objectives" : {
      "NumberOfConcerns" : 1.0016330974414807,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.5675162896148939,
      "MetricsIntensity" : 0.061000674536974,
      "Density" : 0.9955303933253874
    },
    "euclideanDistance" : 11.104960398272343,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.802154750244858,
      "LackOfCohesion" : 0.5675162896148939,
      "MetricsIntensity" : 0.061000674536974,
      "Density" : 3.4231557377049184
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "f21c3869-42af-4e43-85eb-088b9542ea58",
    "objectives" : {
      "NumberOfConcerns" : 1.0010887316276538,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.567491567736031,
      "MetricsIntensity" : 0.061000674536974,
      "Density" : 0.9952324195470799
    },
    "euclideanDistance" : 12.096215688357034,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8011753183153771,
      "LackOfCohesion" : 0.567491567736031,
      "MetricsIntensity" : 0.061000674536974,
      "Density" : 3.4221311475409832
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "adf93cdd-707e-429c-804c-2702c24b4cd4",
    "objectives" : {
      "NumberOfConcerns" : 1.0005443658138269,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.5674840762575879,
      "MetricsIntensity" : 0.06101672770506673,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 13.088756980510194,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.800195886385896,
      "LackOfCohesion" : 0.5674840762575879,
      "MetricsIntensity" : 0.06101672770506673,
      "Density" : 3.4225641025641025
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "a221b759-7bb1-4113-8a8b-51b22a792a75",
    "objectives" : {
      "NumberOfConcerns" : 1.0010887316276538,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.5674673890055266,
      "MetricsIntensity" : 0.06100005494101252,
      "Density" : 0.9949344457687723
    },
    "euclideanDistance" : 13.088843090367332,
    "generation" : 1,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8011753183153774,
      "LackOfCohesion" : 0.5674673890055266,
      "MetricsIntensity" : 0.06100005494101253,
      "Density" : 3.421106557377049
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "c7781e97-d39e-4434-bbf8-958312d24c2e",
    "objectives" : {
      "NumberOfConcerns" : 0.9989112683723462,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5674973201212644,
      "MetricsIntensity" : 0.06100532150668505,
      "Density" : 0.9937425506555423
    },
    "euclideanDistance" : 14.082298208625664,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7972575905974533,
      "LackOfCohesion" : 0.5674973201212644,
      "MetricsIntensity" : 0.061005321506685056,
      "Density" : 3.420512820512821
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "bfb6999e-1c32-401e-8977-0ae48f50ed8f",
    "objectives" : {
      "NumberOfConcerns" : 1.0005443658138269,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5674813572303833,
      "MetricsIntensity" : 0.06101757964951376,
      "Density" : 0.9943384982121574
    },
    "euclideanDistance" : 14.082455620836122,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.8001958863858958,
      "LackOfCohesion" : 0.5674813572303833,
      "MetricsIntensity" : 0.06101757964951375,
      "Density" : 3.4225641025641025
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "068feab7-cace-4a24-8fa0-7284fb56a515",
    "objectives" : {
      "NumberOfConcerns" : 0.9989112683723462,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.567458352795813,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 0.9928486293206198
    },
    "euclideanDistance" : 15.076780242172083,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7972575905974533,
      "LackOfCohesion" : 0.567458352795813,
      "MetricsIntensity" : 0.061002998021829534,
      "Density" : 3.4174358974358987
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "d6619d83-5f7a-489b-b22b-1ac67dd93986",
    "objectives" : {
      "NumberOfConcerns" : 0.9989112683723462,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.5674865796163759,
      "MetricsIntensity" : 0.06100299802182952,
      "Density" : 0.9937425506555423
    },
    "euclideanDistance" : 15.076840198227114,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7972575905974533,
      "LackOfCohesion" : 0.5674865796163759,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 3.417008196721311
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "3ae0d319-a587-466d-b9a7-aed5d264218d",
    "objectives" : {
      "NumberOfConcerns" : 0.9994556341861731,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.5674236303877902,
      "MetricsIntensity" : 0.06100299802182952,
      "Density" : 0.9940405244338498
    },
    "euclideanDistance" : 15.076893548440717,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7982370225269348,
      "LackOfCohesion" : 0.5674236303877902,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 3.418032786885246
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "06722284-45fb-48d4-afd9-a7873401139d",
    "objectives" : {
      "NumberOfConcerns" : 0.9994556341861731,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.5674570150318052,
      "MetricsIntensity" : 0.06098926833859234,
      "Density" : 0.9940405244338498
    },
    "euclideanDistance" : 15.076894749373443,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7982370225269346,
      "LackOfCohesion" : 0.5674570150318052,
      "MetricsIntensity" : 0.06098926833859233,
      "Density" : 3.418032786885246
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "66319442-e6c6-4739-b98e-a3eea116e959",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.5674128688195503,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 0.9940405244338498
    },
    "euclideanDistance" : 15.07692923952641,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7992164544564153,
      "LackOfCohesion" : 0.5674128688195503,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 3.4180327868852447
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      } ]
    } ]
  }, {
    "solutionId" : "336a06f5-65f1-4e8a-ba26-ff67f1ea70b9",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.5674558705003763,
      "MetricsIntensity" : 0.06100214607738251,
      "Density" : 0.9946364719904648
    },
    "euclideanDistance" : 15.076970157767278,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7992164544564155,
      "LackOfCohesion" : 0.5674558705003763,
      "MetricsIntensity" : 0.06100214607738251,
      "Density" : 3.4235897435897433
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "ad0fb6d6-46fe-48e2-bd63-08ad93a671e2",
    "objectives" : {
      "NumberOfConcerns" : 0.9983669025585193,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5674790881379327,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 0.9928486293206198
    },
    "euclideanDistance" : 16.071970593368743,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7962781586679728,
      "LackOfCohesion" : 0.5674790881379327,
      "MetricsIntensity" : 0.06100299802182953,
      "Density" : 3.4174358974358987
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "97e63d2d-5827-4116-b076-29066dedc312",
    "objectives" : {
      "NumberOfConcerns" : 0.9994556341861731,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.567416138909347,
      "MetricsIntensity" : 0.06100299802182952,
      "Density" : 0.9937425506555423
    },
    "euclideanDistance" : 16.072091284650927,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7982370225269348,
      "LackOfCohesion" : 0.567416138909347,
      "MetricsIntensity" : 0.06100299802182952,
      "Density" : 3.420512820512821
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "99afd24e-54d1-40af-a8bc-1070cd1516e6",
    "objectives" : {
      "NumberOfConcerns" : 0.9983669025585193,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.5673519470466384,
      "MetricsIntensity" : 0.06100299802182952,
      "Density" : 0.9928486293206198
    },
    "euclideanDistance" : 18.063999957663125,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7962781586679728,
      "LackOfCohesion" : 0.5673519470466384,
      "MetricsIntensity" : 0.06100299802182952,
      "Density" : 3.4174358974358974
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "f8ef09e5-e456-44c5-82dd-dc8b3aeca690",
    "objectives" : {
      "NumberOfConcerns" : 0.9983669025585193,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.5673142756121807,
      "MetricsIntensity" : 0.0609996184074942,
      "Density" : 0.9931466030989273
    },
    "euclideanDistance" : 19.060656942721845,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7962781586679728,
      "LackOfCohesion" : 0.5673142756121807,
      "MetricsIntensity" : 0.0609996184074942,
      "Density" : 3.418461538461538
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.Api24Utils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "0e2114a4-d463-425b-8883-bc4b90d1b0d1",
    "objectives" : {
      "NumberOfConcerns" : 0.9994556341861731,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.5671891391982821,
      "MetricsIntensity" : 0.06100722958061188,
      "Density" : 0.9928486293206198
    },
    "euclideanDistance" : 19.06069477661126,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7982370225269344,
      "LackOfCohesion" : 0.5671891391982821,
      "MetricsIntensity" : 0.061007229580611874,
      "Density" : 3.4174358974358974
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getAnimatedBitmapConfig()', targetType='com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.Api24Utils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getWidth()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameCount()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.getAutoRotateAngleFromOrientation(int)', targetType='com.facebook.imageutils.TiffUtil'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.BaseProducerContext'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX, com.facebook.fresco.vito.core.FrescoDrawable2.mVisibilityCallback, com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions], extractedMethods=[com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable), com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately(), com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.setVisibilityCallback(VisibilityCallback), com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions(), com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect), com.facebook.fresco.vito.core.FrescoDrawable2.getImageRequest(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageListener(), com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object), com.facebook.fresco.vito.core.FrescoDrawable2.setImageRequest(VitoImageRequest), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageDrawable(), com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx(), com.facebook.fresco.vito.core.FrescoDrawable2.getImagePerfListener(), com.facebook.fresco.vito.core.FrescoDrawable2.getImageId(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed(), com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext(), com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame(), com.facebook.fresco.vito.core.FrescoDrawable2.getExtras(), com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWrapper(), com.facebook.fresco.vito.core.FrescoDrawable2.setImageListener(ImageListener), com.facebook.fresco.vito.core.FrescoDrawable2.setExtras(Object), com.facebook.fresco.vito.core.FrescoDrawable2.hasImage()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadiusPx(float)', targetType='com.facebook.fresco.samples.showcase.postprocessor.FasterGreyScalePostprocessor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.backends.pipeline.PipelineDraweeController.getImageInfo(CloseableReference<CloseableImage>)', targetType='com.facebook.common.internal.Preconditions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.hashCode()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.toString()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imagepipeline.common.RotationOptions.canDeferUntilRendered()', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationCacheSelectorConfigurator.CachingStrategyEntry'"
      } ]
    } ]
  }, {
    "solutionId" : "0525504d-ebbf-42f3-a209-77158e7c6ca7",
    "objectives" : {
      "NumberOfConcerns" : 1.0005443658138269,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.567769651529376,
      "MetricsIntensity" : 0.06029380271084669,
      "Density" : 0.9919547079856973
    },
    "euclideanDistance" : 41.02817398922964,
    "generation" : 1,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.796676441837732,
      "LackOfCohesion" : 0.567769651529376,
      "MetricsIntensity" : 0.06029380271084668,
      "Density" : 3.4038854805725967
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "916380a3-ce43-4828-9b25-3d80b4fef75b",
    "objectives" : {
      "NumberOfConcerns" : 1.0005443658138269,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.5678244823396287,
      "MetricsIntensity" : 0.060292334799391105,
      "Density" : 0.9919547079856973
    },
    "euclideanDistance" : 41.02817474588696,
    "generation" : 1,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7966764418377321,
      "LackOfCohesion" : 0.5678244823396287,
      "MetricsIntensity" : 0.0602923347993911,
      "Density" : 3.4038854805725967
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "f236ef17-2921-497a-9707-cc71c5b32b98",
    "objectives" : {
      "NumberOfConcerns" : 1.0005443658138269,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5677716375272277,
      "MetricsIntensity" : 0.06029233479939107,
      "Density" : 0.9919547079856973
    },
    "euclideanDistance" : 42.02750364902337,
    "generation" : 1,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.796676441837732,
      "LackOfCohesion" : 0.5677716375272277,
      "MetricsIntensity" : 0.06029233479939107,
      "Density" : 3.4038854805725967
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "8c2f3a14-c873-412b-9c9c-d11d6a5a9e37",
    "objectives" : {
      "NumberOfConcerns" : 0.9994556341861731,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.5676941836110125,
      "MetricsIntensity" : 0.060306966047269,
      "Density" : 0.9916567342073898
    },
    "euclideanDistance" : 43.02683125980189,
    "generation" : 1,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7947214076246334,
      "LackOfCohesion" : 0.5676941836110125,
      "MetricsIntensity" : 0.06030696604726899,
      "Density" : 3.402862985685071
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToMarker(InputStream, int)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "3a06fe03-e50a-4186-ba67-39bb8e7e15dd",
    "objectives" : {
      "NumberOfConcerns" : 0.9994556341861731,
      "NumberOfRefactorings" : 43.0,
      "LackOfCohesion" : 0.5680015815393579,
      "MetricsIntensity" : 0.06030696604726899,
      "Density" : 0.9916567342073898
    },
    "euclideanDistance" : 43.02683531669498,
    "generation" : 1,
    "numberOfRefactorings" : 43,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7947214076246332,
      "LackOfCohesion" : 0.5680015815393579,
      "MetricsIntensity" : 0.06030696604726899,
      "Density" : 3.402862985685072
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToMarker(InputStream, int)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "ba6ed748-bda1-4d14-aaeb-de8087bcb2c0",
    "objectives" : {
      "NumberOfConcerns" : 0.9983669025585193,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5678116337970057,
      "MetricsIntensity" : 0.06031013364567315,
      "Density" : 0.9907628128724673
    },
    "euclideanDistance" : 44.026178516732415,
    "generation" : 1,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7927663734115344,
      "LackOfCohesion" : 0.5678116337970057,
      "MetricsIntensity" : 0.06031013364567315,
      "Density" : 3.3997955010224943
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToAPP1EXIF(InputStream)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float[], boolean)', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "2d2892cf-8ad7-49bd-9d2b-eb32ceeb40ec",
    "objectives" : {
      "NumberOfConcerns" : 0.9989112683723462,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5680235066678146,
      "MetricsIntensity" : 0.06029552171241968,
      "Density" : 0.9907628128724673
    },
    "euclideanDistance" : 44.026193577545605,
    "generation" : 1,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.793743890518084,
      "LackOfCohesion" : 0.5680235066678146,
      "MetricsIntensity" : 0.06029552171241967,
      "Density" : 3.3997955010224943
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.doesRenderSupportScaling()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToMarker(InputStream, int)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToAPP1EXIF(InputStream)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "9786cee1-b875-4a2d-97cf-b89657ab9bdf",
    "objectives" : {
      "NumberOfConcerns" : 0.9989112683723462,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5680022872660192,
      "MetricsIntensity" : 0.06029783946734955,
      "Density" : 0.9904648390941597
    },
    "euclideanDistance" : 45.02560501256309,
    "generation" : 1,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7937438905180845,
      "LackOfCohesion" : 0.5680022872660192,
      "MetricsIntensity" : 0.06029783946734954,
      "Density" : 3.398773006134969
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToMarker(InputStream, int)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToAPP1EXIF(InputStream)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDefaultDrawableFactory], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  }, {
    "solutionId" : "bca6b39f-3020-46aa-a420-c06f22736696",
    "objectives" : {
      "NumberOfConcerns" : 0.9989112683723462,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.568004273263871,
      "MetricsIntensity" : 0.06029637155589395,
      "Density" : 0.9904648390941597
    },
    "euclideanDistance" : 46.025048710744805,
    "generation" : 1,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.793743890518084,
      "LackOfCohesion" : 0.568004273263871,
      "MetricsIntensity" : 0.06029637155589395,
      "Density" : 3.3987730061349692
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.animated.giflite.draw.MovieAnimatedImage",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.dispose()', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getDuration()', targetType='com.facebook.fresco.samples.showcase.imageformat.svg.SvgDecoderExample.SvgDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getHeight()', targetType='com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrame(int)', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameInfo(int)', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.animated.giflite.draw.MovieAnimatedImage.getFrameDurations()', targetType='com.facebook.cache.disk.DefaultDiskStorage.IncompleteFileException'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageutils.JfifUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToMarker(InputStream, int)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageutils.JfifUtil.moveToAPP1EXIF(InputStream)', targetType='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOI', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_APP1', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageutils.JfifUtil.MARKER_SOS', targetTypeName='com.facebook.fresco.animation.bitmap.cache.AnimationFrameCacheKey'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.samples.zoomableapp.MainActivity",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.samples.zoomableapp.MainActivity.mAdapter], extractedMethods=[com.facebook.samples.zoomableapp.MainActivity.onCreateOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onPrepareOptionsMenu(Menu), com.facebook.samples.zoomableapp.MainActivity.onCreate(Bundle)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View), com.facebook.fresco.vito.view.VitoView.show(Uri, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.common.logging.FLog",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.common.logging.FLog.sHandler, com.facebook.common.logging.FLog.WARN, com.facebook.common.logging.FLog.ERROR], extractedMethods=[com.facebook.common.logging.FLog.e(Class<?>, String), com.facebook.common.logging.FLog.getTag(Class<?>), com.facebook.common.logging.FLog.w(String, String), com.facebook.common.logging.FLog.v(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.getMinimumLoggingLevel(), com.facebook.common.logging.FLog.i(Class<?>, String, Throwable), com.facebook.common.logging.FLog.i(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, String, Object...), com.facebook.common.logging.FLog.i(String, Throwable, String, Object...), com.facebook.common.logging.FLog.d(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String, Throwable), com.facebook.common.logging.FLog.d(String, String, Object, Object, Object, Object), com.facebook.common.logging.FLog.wtf(String, String), com.facebook.common.logging.FLog.d(String, String, Throwable), com.facebook.common.logging.FLog.w(Class<?>, String, Throwable), com.facebook.common.logging.FLog.v(String, String, Throwable), com.facebook.common.logging.FLog.wtf(String, String, Throwable), com.facebook.common.logging.FLog.d(String, Throwable, String, Object...), com.facebook.common.logging.FLog.setMinimumLoggingLevel(int), com.facebook.common.logging.FLog.formatString(String, Object...), com.facebook.common.logging.FLog.e(String, String, Object...), com.facebook.common.logging.FLog.setLoggingDelegate(LoggingDelegate), com.facebook.common.logging.FLog.e(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.wtf(String, String, Object...), com.facebook.common.logging.FLog.e(String, String), com.facebook.common.logging.FLog.w(String, String, Object...), com.facebook.common.logging.FLog.wtf(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.v(Class<?>, String, Throwable), com.facebook.common.logging.FLog.wtf(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, String, Throwable), com.facebook.common.logging.FLog.wtf(Class<?>, String), com.facebook.common.logging.FLog.i(String, String, Object...), com.facebook.common.logging.FLog.w(Class<?>, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(String, String, Throwable), com.facebook.common.logging.FLog.v(String, Throwable, String, Object...), com.facebook.common.logging.FLog.w(String, Throwable, String, Object...), com.facebook.common.logging.FLog.e(Class<?>, String, Throwable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.core.FrescoDrawable2",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.fadeInImage(int)', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgress(float)', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getExtras()', targetType='com.facebook.imagepipeline.platform.PreverificationHelper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setViewportDimensions(Rect)', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getViewportDimensions()', targetType='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.mViewportDimensions', targetTypeName='com.facebook.imagepipeline.postprocessors.BlurPostProcessor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseNextFrame()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.cancelReleaseDelayed()', targetType='com.facebook.common.file.FileUtils.ParentDirNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setCallerContext(Object)', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.isFetchSubmitted()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getCallerContext()', targetType='com.facebook.common.executors.DefaultSerialExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.showOverlayImmediately()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setOverlayDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getOverlayDrawable()', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setProgressDrawable(Drawable)', targetType='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.core.FrescoDrawable2.OVERLAY_DRAWABLE_INDEX', targetTypeName='com.facebook.imagepipeline.platform.KitKatPurgeableDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.setPlaceholderDrawable(Drawable)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.close()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageFocusPoint()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageHeightPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.core.FrescoDrawable2.getActualImageWidthPx()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenterCrop'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.RoundingOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isCircular()', targetType='com.facebook.imagepipeline.memory.AshmemMemoryChunkPool'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isForceRoundAtDecode()', targetType='com.facebook.imagepipeline.listener.ForwardingRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadii()', targetType='com.facebook.imagepipeline.producers.DelegatingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.forCornerRadii(float, float, float, float)', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptionsBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hashCode()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.isAntiAliased()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.hasRoundedCorners()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.RoundingOptions.getCornerRadius()', targetType='com.facebook.imagepipeline.producers.InternalRequestListener'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.backends.pipeline.PipelineDraweeController",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.TAG, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDataSourceSupplier, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCustomDrawableFactories, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mCacheKey, com.facebook.drawee.backends.pipeline.PipelineDraweeController.mDefaultDrawableFactory], extractedMethods=[com.facebook.drawee.backends.pipeline.PipelineDraweeController.toString(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.isSameImageRequest(DraweeController), com.facebook.drawee.backends.pipeline.PipelineDraweeController.createDrawable(CloseableReference<CloseableImage>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getResources(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setHierarchy(DraweeHierarchy), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSource(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getDataSourceSupplier(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.getCacheKey(), com.facebook.drawee.backends.pipeline.PipelineDraweeController.releaseDrawable(Drawable), com.facebook.drawee.backends.pipeline.PipelineDraweeController.obtainExtrasFromImage(ImageInfo), com.facebook.drawee.backends.pipeline.PipelineDraweeController.initialize(Supplier<DataSource<CloseableReference<CloseableImage>>>, String, CacheKey, Object, ImmutableList<DrawableFactory>, ImageOriginListener), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setDrawDebugOverlay(boolean), com.facebook.drawee.backends.pipeline.PipelineDraweeController.setCustomDrawableFactories(ImmutableList<DrawableFactory>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.init(Supplier<DataSource<CloseableReference<CloseableImage>>>), com.facebook.drawee.backends.pipeline.PipelineDraweeController.maybeCreateDrawableFromFactories(ImmutableList<DrawableFactory>, CloseableImage), com.facebook.drawee.backends.pipeline.PipelineDraweeController.updateDebugOverlay(CloseableImage, DebugControllerOverlayDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imagepipeline.common.RotationOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_ROTATE_AT_RENDER_TIME, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_AUTO_ROTATE, com.facebook.imagepipeline.common.RotationOptions.ROTATION_OPTIONS_DISABLE_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_270, com.facebook.imagepipeline.common.RotationOptions.ROTATE_180, com.facebook.imagepipeline.common.RotationOptions.NO_ROTATION, com.facebook.imagepipeline.common.RotationOptions.ROTATE_90], extractedMethods=[com.facebook.imagepipeline.common.RotationOptions.autoRotateAtRenderTime(), com.facebook.imagepipeline.common.RotationOptions.autoRotate(), com.facebook.imagepipeline.common.RotationOptions.disableRotation(), com.facebook.imagepipeline.common.RotationOptions.forceRotation(int)]"
      } ]
    } ]
  } ]
}