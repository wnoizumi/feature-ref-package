{
  "executionId" : "5a858dda-c59b-4ffe-a4f4-2ce1822076c9",
  "computingTime" : 4811,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.384851586489252,
    "meanNumConcerns" : 1.773084479371316,
    "meanMetricsIntensity" : 0.0572971415616704,
    "meanLackOfCohesion" : 0.5657915280402931
  },
  "population" : [ {
    "solutionId" : "8a6e6013-feb6-4f71-b91b-5fa898d9f39c",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 5.0,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.05689099483959829,
      "Density" : 1.0021167221046265
    },
    "euclideanDistance" : 5.229039007801785,
    "generation" : 0,
    "numberOfRefactorings" : 5,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774193548387097,
      "LackOfCohesion" : 0.5694413132585019,
      "MetricsIntensity" : 0.05689099483959827,
      "Density" : 3.3747454175152747,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "73095184-03ae-405d-98af-649df1e4f02f",
    "objectives" : {
      "NumberOfConcerns" : 1.0077562326869807,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.5675550005000576,
      "MetricsIntensity" : 0.05680417018633445,
      "Density" : 1.003023888720895
    },
    "euclideanDistance" : 8.145365242775023,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7763671875,
      "LackOfCohesion" : 0.5675550005000576,
      "MetricsIntensity" : 0.05680417018633445,
      "Density" : 3.374364191251271,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "0d076473-7a7c-48c1-bdeb-34eaf6e676bd",
    "objectives" : {
      "NumberOfConcerns" : 1.0083102493074791,
      "NumberOfRefactorings" : 8.0,
      "LackOfCohesion" : 0.5662823487378725,
      "MetricsIntensity" : 0.05659017093761241,
      "Density" : 1.0063501663138796
    },
    "euclideanDistance" : 8.145754008195762,
    "generation" : 0,
    "numberOfRefactorings" : 8,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7738791423001945,
      "LackOfCohesion" : 0.5662823487378725,
      "MetricsIntensity" : 0.05659017093761241,
      "Density" : 3.382113821138211,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "e15c4372-915d-48d4-adb7-473c6d8ea208",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.5686397030560629,
      "MetricsIntensity" : 0.056733583006097384,
      "Density" : 1.001209555488358
    },
    "euclideanDistance" : 14.08332707179611,
    "generation" : 0,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7724609375,
      "LackOfCohesion" : 0.5686397030560629,
      "MetricsIntensity" : 0.05673358300609738,
      "Density" : 3.371690427698574,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "ee8b207e-9c71-4495-9cdc-0855a2d1b070",
    "objectives" : {
      "NumberOfConcerns" : 1.0060941828254848,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.5654751738754226,
      "MetricsIntensity" : 0.05676260043483333,
      "Density" : 1.001209555488358
    },
    "euclideanDistance" : 16.072884938423282,
    "generation" : 0,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7734375,
      "LackOfCohesion" : 0.5654751738754226,
      "MetricsIntensity" : 0.056762600434833325,
      "Density" : 3.368260427263479,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "012eb9df-9ad9-46ac-9b79-4b4fb0dd5e57",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5658309284853025,
      "MetricsIntensity" : 0.05724297146141734,
      "Density" : 0.9996976111279104
    },
    "euclideanDistance" : 17.068214465821622,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.774066797642436,
      "LackOfCohesion" : 0.5658309284853025,
      "MetricsIntensity" : 0.05724297146141735,
      "Density" : 3.3803680981595097,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    } ]
  }, {
    "solutionId" : "33e19716-b631-4cfb-9850-3fd26354f0ab",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.5669671042644723,
      "MetricsIntensity" : 0.05675839443089121,
      "Density" : 1.0033262775929845
    },
    "euclideanDistance" : 17.068626074791432,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7685546875,
      "LackOfCohesion" : 0.5669671042644723,
      "MetricsIntensity" : 0.05675839443089121,
      "Density" : 3.3788187372708753,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "145fd3e4-63f4-47b4-8756-c828f8ff9ac3",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.5672404849811266,
      "MetricsIntensity" : 0.056796743485878896,
      "Density" : 0.998790444511642
    },
    "euclideanDistance" : 21.055384803869174,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7702834799608997,
      "LackOfCohesion" : 0.5672404849811266,
      "MetricsIntensity" : 0.056796743485878896,
      "Density" : 3.3669724770642198,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "98159b3c-e2b9-463c-884a-91ca855d02ca",
    "objectives" : {
      "NumberOfConcerns" : 1.005540166204986,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.5654603840795912,
      "MetricsIntensity" : 0.05672305847608832,
      "Density" : 0.9990928333837314
    },
    "euclideanDistance" : 23.050645554233324,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7724609375,
      "LackOfCohesion" : 0.5654603840795912,
      "MetricsIntensity" : 0.05672305847608832,
      "Density" : 3.3611393692777205,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "f6b6be12-e7d7-4270-a751-372210038eda",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.5669516578314855,
      "MetricsIntensity" : 0.056919211524232995,
      "Density" : 1.001814333232537
    },
    "euclideanDistance" : 28.04152631742648,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7651663405088065,
      "LackOfCohesion" : 0.5669516578314855,
      "MetricsIntensity" : 0.056919211524232995,
      "Density" : 3.380612244897958,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "d99efc25-8ec1-43b4-a7ee-d3ae3a2a8c36",
    "objectives" : {
      "NumberOfConcerns" : 1.0049861495844876,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.567062354832513,
      "MetricsIntensity" : 0.05693653613084331,
      "Density" : 1.003023888720895
    },
    "euclideanDistance" : 28.041769836542347,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7749510763209395,
      "LackOfCohesion" : 0.567062354832513,
      "MetricsIntensity" : 0.05693653613084331,
      "Density" : 3.377800407331976,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "65ed7d8b-5fc8-4615-b4ec-1557413a52ba",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.5657502908895188,
      "MetricsIntensity" : 0.05689096647577739,
      "Density" : 1.0009071666162686
    },
    "euclideanDistance" : 33.03531117424168,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7702834799608995,
      "LackOfCohesion" : 0.5657502908895188,
      "MetricsIntensity" : 0.05689096647577739,
      "Density" : 3.3706720977596745,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "9c12cf63-e1ba-48da-a540-d784676c3bf8",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.566627383456286,
      "MetricsIntensity" : 0.056932681000273336,
      "Density" : 1.0063501663138796
    },
    "euclideanDistance" : 33.03549163896571,
    "generation" : 0,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7702834799608995,
      "LackOfCohesion" : 0.566627383456286,
      "MetricsIntensity" : 0.056932681000273336,
      "Density" : 3.389002036659878,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a433e710-ceca-4b9c-863a-eef2c2a238db",
    "objectives" : {
      "NumberOfConcerns" : 0.997229916897507,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.5679938207492254,
      "MetricsIntensity" : 0.05701063564924976,
      "Density" : 0.9978832778953735
    },
    "euclideanDistance" : 38.03046286513543,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7629774730656222,
      "LackOfCohesion" : 0.5679938207492254,
      "MetricsIntensity" : 0.05701063564924976,
      "Density" : 3.3707865168539324,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "65c0d26f-5f11-4fa5-841c-d33dc37769b0",
    "objectives" : {
      "NumberOfConcerns" : 1.0011080332409972,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.5676743807116679,
      "MetricsIntensity" : 0.056926388791893746,
      "Density" : 1.000604777744179
    },
    "euclideanDistance" : 40.029100939587956,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.766373411534702,
      "LackOfCohesion" : 0.5676743807116679,
      "MetricsIntensity" : 0.05692638879189375,
      "Density" : 3.3696537678207736,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "cd038c8d-7d67-4db3-9a8c-7bbb016bc878",
    "objectives" : {
      "NumberOfConcerns" : 0.9983379501385041,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.568755515335234,
      "MetricsIntensity" : 0.057005644096776664,
      "Density" : 1.0033262775929845
    },
    "euclideanDistance" : 40.029115338234476,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.76320939334638,
      "LackOfCohesion" : 0.568755515335234,
      "MetricsIntensity" : 0.057005644096776664,
      "Density" : 3.3857142857142852,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "313f098c-83ba-4dd4-98f3-d73345f0abec",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.5658743864173753,
      "MetricsIntensity" : 0.057115826460779964,
      "Density" : 1.0057453885697005
    },
    "euclideanDistance" : 41.02846572595013,
    "generation" : 0,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7678746327130266,
      "LackOfCohesion" : 0.5658743864173753,
      "MetricsIntensity" : 0.057115826460779964,
      "Density" : 3.393877551020408,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "3293dd31-f590-4082-8e85-63c660af9913",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.565053868863236,
      "MetricsIntensity" : 0.05710185857752903,
      "Density" : 1.0048382219534322
    },
    "euclideanDistance" : 42.02772931661339,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7659157688540645,
      "LackOfCohesion" : 0.565053868863236,
      "MetricsIntensity" : 0.05710185857752904,
      "Density" : 3.390816326530613,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "d8bd31cf-ff13-4c8f-84f0-23f9f84fecbe",
    "objectives" : {
      "NumberOfConcerns" : 1.0005540166204987,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5658193801429271,
      "MetricsIntensity" : 0.057173712538231926,
      "Density" : 1.003628666465074
    },
    "euclideanDistance" : 42.02775034717748,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.770588235294118,
      "LackOfCohesion" : 0.5658193801429271,
      "MetricsIntensity" : 0.05717371253823193,
      "Density" : 3.3867346938775515,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "e2638d2f-7adf-43e7-aebe-d1ca1f82345c",
    "objectives" : {
      "NumberOfConcerns" : 1.0016620498614959,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5663694074276565,
      "MetricsIntensity" : 0.05692262846027541,
      "Density" : 1.002419110976716
    },
    "euclideanDistance" : 42.027754941556005,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7673509286412517,
      "LackOfCohesion" : 0.5663694074276565,
      "MetricsIntensity" : 0.05692262846027541,
      "Density" : 3.375763747454176,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "5128cde0-d3b9-44b4-9601-d52264ebdbf8",
    "objectives" : {
      "NumberOfConcerns" : 1.0022160664819943,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.5682630128513865,
      "MetricsIntensity" : 0.05697561663749293,
      "Density" : 1.004233444209253
    },
    "euclideanDistance" : 42.02783709551384,
    "generation" : 0,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7683284457478001,
      "LackOfCohesion" : 0.5682630128513865,
      "MetricsIntensity" : 0.056975616637492926,
      "Density" : 3.3818737270875747,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a4ff918c-390b-4b7a-819c-4ad279fb688b",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5674991283330324,
      "MetricsIntensity" : 0.056901071003232655,
      "Density" : 1.0051406108255216
    },
    "euclideanDistance" : 44.026595922006464,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7693059628543497,
      "LackOfCohesion" : 0.5674991283330324,
      "MetricsIntensity" : 0.056901071003232655,
      "Density" : 3.381485249237029,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.common.file.FileUtils.RenameException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a438527e-cee0-4ce6-96e3-4b334c391d85",
    "objectives" : {
      "NumberOfConcerns" : 1.002770083102493,
      "NumberOfRefactorings" : 44.0,
      "LackOfCohesion" : 0.5699982630582164,
      "MetricsIntensity" : 0.05693361574403,
      "Density" : 1.0057453885697005
    },
    "euclideanDistance" : 44.02664206003776,
    "generation" : 0,
    "numberOfRefactorings" : 44,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7693059628543497,
      "LackOfCohesion" : 0.5699982630582164,
      "MetricsIntensity" : 0.05693361574403,
      "Density" : 3.3835198372329605,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.common.file.FileUtils.RenameException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "6fef7708-1867-4a8f-8649-59622212c1ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9961218836565097,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.5685862075365439,
      "MetricsIntensity" : 0.057040261905257794,
      "Density" : 0.9978832778953735
    },
    "euclideanDistance" : 45.02571014109918,
    "generation" : 0,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7610186092066604,
      "LackOfCohesion" : 0.5685862075365439,
      "MetricsIntensity" : 0.057040261905257794,
      "Density" : 3.3707865168539324,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "63f6d9ee-beed-4cc7-a84d-a600660b87f1",
    "objectives" : {
      "NumberOfConcerns" : 1.0033240997229917,
      "NumberOfRefactorings" : 46.0,
      "LackOfCohesion" : 0.5654165400759682,
      "MetricsIntensity" : 0.05697050798102791,
      "Density" : 1.0075597218022376
    },
    "euclideanDistance" : 46.02547965360767,
    "generation" : 0,
    "numberOfRefactorings" : 46,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7702834799608997,
      "LackOfCohesion" : 0.5654165400759682,
      "MetricsIntensity" : 0.05697050798102791,
      "Density" : 3.389623601220753,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.common.file.FileUtils.RenameException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a24f4242-6355-473f-bf8b-d654b2dab7a1",
    "objectives" : {
      "NumberOfConcerns" : 0.9994459833795014,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.5702822895638139,
      "MetricsIntensity" : 0.057103793944995034,
      "Density" : 0.999395222255821
    },
    "euclideanDistance" : 48.024224781010616,
    "generation" : 0,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7668952007835454,
      "LackOfCohesion" : 0.5702822895638139,
      "MetricsIntensity" : 0.057103793944995034,
      "Density" : 3.375893769152196,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mCurrentDataSource, com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.mIndex], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceFailed(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.closeSafely(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "fe1b215e-286e-4352-9d80-b7630a6d3010",
    "objectives" : {
      "NumberOfConcerns" : 0.9955678670360111,
      "NumberOfRefactorings" : 48.0,
      "LackOfCohesion" : 0.5686110791934159,
      "MetricsIntensity" : 0.05719818903614372,
      "Density" : 1.0048382219534322
    },
    "euclideanDistance" : 48.02423810350752,
    "generation" : 0,
    "numberOfRefactorings" : 48,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.761764705882353,
      "LackOfCohesion" : 0.5686110791934159,
      "MetricsIntensity" : 0.05719818903614373,
      "Density" : 3.3942798774259453,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResource(Resources, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeFile(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "8a01ed69-28c1-428d-91d8-00f1bc52482a",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.5683286539415737,
      "MetricsIntensity" : 0.05700870064745228,
      "Density" : 0.9978832778953735
    },
    "euclideanDistance" : 51.022738104186445,
    "generation" : 0,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7641878669275932,
      "LackOfCohesion" : 0.5683286539415737,
      "MetricsIntensity" : 0.05700870064745228,
      "Density" : 3.3673469387755093,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object), com.facebook.fresco.vito.options.EncodedImageOptions.create(), com.facebook.fresco.vito.options.EncodedImageOptions.getPriority(), com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper(), com.facebook.fresco.vito.options.EncodedImageOptions.toString()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.mCustomImageFormatCheckers, com.facebook.imageformat.ImageFormatChecker.sInstance, com.facebook.imageformat.ImageFormatChecker.mDefaultFormatChecker], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean), com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength(), com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[]), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "c9342040-d8c0-46ba-b71d-f802dba80811",
    "objectives" : {
      "NumberOfConcerns" : 0.9988919667590028,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.5648904769401777,
      "MetricsIntensity" : 0.057025032314273305,
      "Density" : 1.0033262775929845
    },
    "euclideanDistance" : 52.02236828409307,
    "generation" : 0,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7659157688540645,
      "LackOfCohesion" : 0.5648904769401777,
      "MetricsIntensity" : 0.057025032314273305,
      "Density" : 3.3857142857142852,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object), com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint(), com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType(), com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor(), com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.create(), com.facebook.fresco.vito.options.DecodedImageOptions.toString(), com.facebook.fresco.vito.options.DecodedImageOptions.hashCode(), com.facebook.fresco.vito.options.DecodedImageOptions.isProgressiveDecodingEnabled(), com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions(), com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.clearCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.setCurrentDataSource(DataSource<T>)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.maybeSetDataSourceWithResult(DataSource<T>, boolean)', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.close()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.datasource.FirstAvailableDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.startNextDataSource()', targetType='com.facebook.common.executors.CallerThreadExecutor'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.IncreasingQualityDataSourceSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.samples.showcase.imageformat.keyframes.KeyframesDecoderExample.KeyframesDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.imagepipeline.producers.SwallowResultProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a754aa9b-e8e6-47d2-a67f-9e2d7bc37218",
    "objectives" : {
      "NumberOfConcerns" : 0.9961218836565097,
      "NumberOfRefactorings" : 55.0,
      "LackOfCohesion" : 0.5667800695758185,
      "MetricsIntensity" : 0.057203111791243266,
      "Density" : 1.0015119443604474
    },
    "euclideanDistance" : 55.02108502042706,
    "generation" : 0,
    "numberOfRefactorings" : 55,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7627450980392163,
      "LackOfCohesion" : 0.5667800695758185,
      "MetricsIntensity" : 0.05720311179124328,
      "Density" : 3.3865030674846635,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Bitmap, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.vito.options.BorderOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.drawable.RoundedColorDrawable'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.HEADER_SIZE, com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_BITMAP_SUPPORTED, com.facebook.webpsupport.WebpBitmapFactoryImpl.mWebpErrorLogger, com.facebook.webpsupport.WebpBitmapFactoryImpl.mBitmapCreator], extractedMethods=[com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[]), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setPaddingDefaultValues(Rect), com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String), com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator), com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options), com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int), com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult(), com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "5487a749-dca5-4011-b9d7-b47de499ea0a",
    "objectives" : {
      "NumberOfConcerns" : 0.9955678670360111,
      "NumberOfRefactorings" : 61.0,
      "LackOfCohesion" : 0.5676090095608812,
      "MetricsIntensity" : 0.0572919273634837,
      "Density" : 1.0045358330813425
    },
    "euclideanDistance" : 61.019060218676714,
    "generation" : 0,
    "numberOfRefactorings" : 61,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7634936211972523,
      "LackOfCohesion" : 0.5676090095608812,
      "MetricsIntensity" : 0.05729192736348369,
      "Density" : 3.393258426966293,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.samples.comparison.Drawables'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.samples.comparison.Drawables'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.common.file.FileUtils.RenameException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.drawee.drawable.RoundedColorDrawable.mPadding, com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap, com.facebook.drawee.drawable.RoundedColorDrawable.mRadii, com.facebook.drawee.drawable.RoundedColorDrawable.mIsCircle, com.facebook.drawee.drawable.RoundedColorDrawable.mAlpha, com.facebook.drawee.drawable.RoundedColorDrawable.mColor, com.facebook.drawee.drawable.RoundedColorDrawable.mPaint], extractedMethods=[com.facebook.drawee.drawable.RoundedColorDrawable.getPadding(), com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter), com.facebook.drawee.drawable.RoundedColorDrawable.isCircle(), com.facebook.drawee.drawable.RoundedColorDrawable.getColor(), com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int), com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect), com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity(), com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha(), com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float), com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean), com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas), com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[]), com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int), com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float), com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap(), com.facebook.drawee.drawable.RoundedColorDrawable.getRadii(), com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.cache.StagingArea'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.drawee.controller.AbstractDraweeControllerBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.samples.zoomable.DoubleTapGestureListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitEnd'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "936da825-aa60-415a-b1e5-dd2f72ca8621",
    "objectives" : {
      "NumberOfConcerns" : 0.9950138504155125,
      "NumberOfRefactorings" : 66.0,
      "LackOfCohesion" : 0.5723853345186128,
      "MetricsIntensity" : 0.057156718652475624,
      "Density" : 1.0045358330813425
    },
    "euclideanDistance" : 66.01764943304269,
    "generation" : 0,
    "numberOfRefactorings" : 66,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7590597453476982,
      "LackOfCohesion" : 0.5723853345186128,
      "MetricsIntensity" : 0.05715671865247562,
      "Density" : 3.3863404689092773,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.options.DecodedImageOptions.mActualFocusPoint], extractedMethods=[com.facebook.fresco.vito.options.DecodedImageOptions.equalDecodedOptions(DecodedImageOptions), com.facebook.fresco.vito.options.DecodedImageOptions.create()]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.common.file.FileUtils.RenameException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.fresco.vito.view.VitoView.sIsInitialized, com.facebook.fresco.vito.view.VitoView.sImplementation, com.facebook.fresco.vito.view.VitoView.TAG], extractedMethods=[com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View), com.facebook.fresco.vito.view.VitoView.init(Implementation), com.facebook.fresco.vito.view.VitoView.getImplementation(), com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.bitmap.BitmapAnimationFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.samples.animation2.utils.SampleAnimationBackendConfigurator.BackendExampleEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.common.executors.StatefulRunnable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeSimpleFragment'"
      } ]
    } ]
  }, {
    "solutionId" : "a45c92d0-f18b-4de5-a90c-3456eabb6a84",
    "objectives" : {
      "NumberOfConcerns" : 0.9966759002770084,
      "NumberOfRefactorings" : 74.0,
      "LackOfCohesion" : 0.5705880348562937,
      "MetricsIntensity" : 0.057273761394468915,
      "Density" : 1.003628666465074
    },
    "euclideanDistance" : 74.01573808548834,
    "generation" : 0,
    "numberOfRefactorings" : 74,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.763725490196078,
      "LackOfCohesion" : 0.5705880348562937,
      "MetricsIntensity" : 0.057273761394468915,
      "Density" : 3.386734693877551,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyRounding(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>applyBorders(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable), com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)]"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.imageformat.ImageFormat'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.common.util.ExceptionWithNoStacktrace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.samples.scrollperf.fragments.SettingsFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRotationFragment.SimpleRotationOptionsAdapter.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.common.file.FileUtils.RenameException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.imageformat.ImageFormatChecker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.ui.common.DimensionsInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.producers.WebpTranscodeProducer.WebpTranscodeConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.drawee.view.DraweeTransition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.samples.comparison.adapters.FrescoAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.imagepipeline.memory.SharedByteArray'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.drawee.backends.pipeline.DraweeConfig'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.imagepipeline.core.PriorityThreadFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.samples.gestures.TransformGestureDetector'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.samples.zoomableapp.ZoomableApplication'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.imagepipeline.nativecode.Bitmaps'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.MultiplexProducer.Multiplexer.ForwardingConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.fresco.samples.showcase.vito.FrescoVitoImageDecodeOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(Uri, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.source.ImageSourceProvider'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.fresco.vito.options.ImageOptions'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[com.facebook.imageformat.ImageFormatChecker.sInstance], extractedMethods=[com.facebook.imageformat.ImageFormatChecker.getInstance(), com.facebook.imageformat.ImageFormatChecker.getImageFormat(String), com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream), com.facebook.imageformat.ImageFormatChecker.getImageFormat(InputStream)]"
      } ]
    } ]
  }, {
    "solutionId" : "a427b418-8e39-49ef-9033-0fa227aef593",
    "objectives" : {
      "NumberOfConcerns" : 0.990027700831025,
      "NumberOfRefactorings" : 96.0,
      "LackOfCohesion" : 0.5706429770540362,
      "MetricsIntensity" : 0.05743025249835276,
      "Density" : 1.001209555488358
    },
    "euclideanDistance" : 96.01203834448874,
    "generation" : 0,
    "numberOfRefactorings" : 96,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.7554027504911591,
      "LackOfCohesion" : 0.5706429770540362,
      "MetricsIntensity" : 0.05743025249835276,
      "Density" : 3.3854805725971366,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "com.facebook.fresco.vito.drawable.RoundingUtils",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawable(Resources, Drawable, BorderOptions, RoundingOptions)', targetType='com.facebook.fresco.samples.showcase.imagepipeline.ImagePipelineRegionDecodingFragment.RegionDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>squareDrawableWithBorder(T, BorderOptions)', targetType='com.facebook.drawee.generic.GenericDraweeHierarchy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Bitmap)', targetType='com.facebook.drawee.generic.GenericDraweeHierarchy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.roundedDrawableWithoutBorder(Resources, Drawable, RoundingOptions)', targetType='com.facebook.drawee.generic.GenericDraweeHierarchy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>circularDrawable(T, BorderOptions)', targetType='com.facebook.drawee.generic.GenericDraweeHierarchy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>getRoundedDrawable(Resources, Drawable)', targetType='com.facebook.drawee.generic.GenericDraweeHierarchy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.drawable.RoundingUtils.<T extends Drawable & Rounded>roundedCornerDrawable(T, BorderOptions, RoundingOptions)', targetType='com.facebook.drawee.generic.GenericDraweeHierarchy'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.DecodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageFocusPoint()', targetType='com.facebook.fresco.samples.showcase.imageformat.color.ColorImageExample.ColorDecoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getImageDecodeOptions()', targetType='com.facebook.imageutils.BitmapUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getActualImageScaleType()', targetType='com.facebook.drawee.drawable.FadeDrawable'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.create()', targetType='com.facebook.drawee.view.DraweeHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getPostprocessor()', targetType='com.facebook.fresco.vito.nativecode.CircularBitmapTransformation'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getBitmapConfig()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitBottomStart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.toString()', targetType='com.facebook.fresco.vito.options.DecodedImageOptions.Builder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.hashCode()', targetType='com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRotationOptions()', targetType='com.facebook.common.internal.Objects.ToStringHelper.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getResizeOptions()', targetType='com.facebook.common.internal.Objects.ToStringHelper.ValueHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.DecodedImageOptions.getRoundingOptions()', targetType='com.facebook.common.internal.Objects.ToStringHelper.ValueHolder'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.webpsupport.WebpBitmapFactoryImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setOutDimensions(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpErrorLogger(WebpBitmapFactory.WebpErrorLogger)', targetType='com.facebook.imagepipeline.animated.impl.AnimatedFrameCache.FrameKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getWebpHeader(InputStream, BitmapFactory.Options)', targetType='com.facebook.cache.common.DebuggingCacheKey'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.createBitmap(int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRoundedCornersFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapSize(BitmapFactory.Options, int, int)', targetType='com.facebook.fresco.samples.showcase.drawee.DraweeRoundedCornersFragment'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setWebpBitmapOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setBitmapCreator(BitmapCreator)', targetType='com.facebook.imagepipeline.backends.volley.VolleyNetworkFetcher.VolleyNetworkFetchState'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getScaleFromOptions(BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.AbstractAnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResourceStream(Resources, TypedValue, InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.AbstractAnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.setDensityFromOptions(Bitmap, BitmapFactory.Options)', targetType='com.facebook.samples.zoomable.AbstractAnimatedZoomableController'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFile(String, BitmapFactory.Options)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.wrapToMarkSupportedStream(InputStream)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeDecodeByteArray(byte[], int, int, BitmapFactory.Options, float, byte[])', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.decodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.originalDecodeByteArray(byte[], int, int)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.getInTempStorageFromOptions(BitmapFactory.Options)', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.webpsupport.WebpBitmapFactoryImpl.IN_TEMP_BUFFER_SIZE', targetTypeName='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeFitX'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeFileDescriptor(FileDescriptor)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.nativeSeek(FileDescriptor, long, boolean)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.shouldPremultiply(BitmapFactory.Options)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeByteArray(byte[], int, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.sendWebpErrorLog(String)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeResource(Resources, int, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.webpsupport.WebpBitmapFactoryImpl.hookDecodeStream(InputStream, Rect, BitmapFactory.Options)', targetType='com.facebook.fresco.vito.nativecode.NativeCircularBitmapRounding'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.drawee.drawable.RoundedColorDrawable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.onBoundsChange(Rect)', targetType='com.facebook.fresco.samples.showcase.postprocessor.BasePostprocessorWithDurationCallback'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getOpacity()', targetType='com.facebook.samples.zoomableapp.MainActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setCircle(boolean)', targetType='com.facebook.common.util.StreamUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.isCircle()', targetType='com.facebook.fresco.vito.core.impl.debug.BaseDebugOverlayFactory2.DebugOverlayDrawableWrapper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setAlpha(int)', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getAlpha()', targetType='com.facebook.common.internal.ImmutableSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPadding(float)', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPadding()', targetType='com.facebook.fresco.ui.common.ForwardingControllerListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setPaintFilterBitmap(boolean)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.draw(Canvas)', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getPaintFilterBitmap()', targetType='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaintFilterBitmap', targetTypeName='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.drawee.drawable.RoundedColorDrawable.mPaint', targetTypeName='com.facebook.imagepipeline.listener.BaseRequestListener2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColorFilter(ColorFilter)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getColor()', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setColor(int)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.fromColorDrawable(ColorDrawable)', targetType='com.facebook.imagepipeline.cache.InstrumentedMemoryCacheBitmapMemoryCacheFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadii(float[])', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.setRadius(float)', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.drawee.drawable.RoundedColorDrawable.getRadii()', targetType='com.facebook.samples.animation2.local.LocalDrawableAnimationBackend'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getNextSupplier()', targetType='com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.onDataSourceNewResult(DataSource<T>)', targetType='com.facebook.common.disk.NoOpDiskTrimmableRegistry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getResult()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.getDataSourceWithResult()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.datasource.FirstAvailableDataSourceSupplier.FirstAvailableDataSource.hasResult()', targetType='com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer.AddImageTransformMetaDataConsumer'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.view.VitoView",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, View)', targetType='com.facebook.datasource.RetainingDataSourceSupplier.RetainingDataSource.InternalDataSubscriber'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.init(Implementation)', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.getImplementation()', targetType='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sIsInitialized', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.sImplementation', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.fresco.vito.view.VitoView.TAG', targetTypeName='com.facebook.fresco.vito.view.impl.LazyVitoViewImpl2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, ImageListener, View)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, Object, View)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, View)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.view.VitoView.show(ImageSource, ImageOptions, Object, View)', targetType='com.facebook.fresco.vito.provider.impl.NoOpCallerContextVerifier'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.fresco.vito.options.EncodedImageOptions",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.equals(Object)', targetType='com.facebook.imagepipeline.debug.NoOpCloseableReferenceLeakTracker'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toStringHelper()', targetType='com.facebook.imagepipeline.producers.BitmapPrepareProducer.BitmapPrepareConsumer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.create()', targetType='com.facebook.imagepipeline.listener.RequestLoggingListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.toString()', targetType='com.facebook.imagepipeline.filter.InPlaceRoundFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.fresco.vito.options.EncodedImageOptions.getPriority()', targetType='com.facebook.drawee.drawable.ScalingUtils.ScaleTypeCenter'"
      } ]
    }, {
      "refactoredTypeName" : "com.facebook.imageformat.ImageFormatChecker",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.updateMaxHeaderLength()', targetType='com.facebook.imagepipeline.cache.MemoryCacheParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat_WrapIOException(InputStream)', targetType='com.facebook.samples.animation2.StandaloneActivity'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getInstance()', targetType='com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='com.facebook.imageformat.ImageFormatChecker.sInstance', targetTypeName='com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setUseNewOrder(boolean)', targetType='com.facebook.cache.disk.DynamicDefaultDiskStorage.State'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.readHeaderFromStream(int, InputStream, byte[])', targetType='com.facebook.imagepipeline.cache.CountingMemoryCache.Entry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.getImageFormat(String)', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='com.facebook.imageformat.ImageFormatChecker.setCustomImageFormatCheckers(List<ImageFormat.FormatChecker>)', targetType='com.facebook.imagepipeline.producers.BitmapProbeProducer'"
      } ]
    } ]
  } ]
}