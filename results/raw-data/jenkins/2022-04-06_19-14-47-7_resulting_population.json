{
  "executionId" : "a189cf44-9d40-453d-85ea-b7b297c47fb3",
  "computingTime" : 13726,
  "maxEvaluations" : 1000,
  "initialPopulationSize" : 50,
  "finalPopulationSize" : 34,
  "algorithm" : "Baseline",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.030551009274413,
    "meanNumConcerns" : 1.4712990936555896,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.48535030050355515
  },
  "population" : [ {
    "solutionId" : "a3355808-2851-4e53-ad99-462e7c25c409",
    "objectives" : {
      "NumberOfConcerns" : 1.0030800821355237,
      "NumberOfRefactorings" : 5.0,
      "LackOfCohesion" : 0.4876314142402859,
      "MetricsIntensity" : 0.03291613627121511,
      "Density" : 1.0003600360036005
    },
    "euclideanDistance" : 5.219746902005033,
    "generation" : 0,
    "numberOfRefactorings" : 5,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4721245605223507,
      "LackOfCohesion" : 0.4876314142402859,
      "MetricsIntensity" : 0.03291613627121511,
      "Density" : 3.023394994559303,
      "baselineType" : "EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    } ]
  }, {
    "solutionId" : "5f7123fc-775d-43c1-8b1b-757e482bff5c",
    "objectives" : {
      "NumberOfConcerns" : 0.999315537303217,
      "NumberOfRefactorings" : 6.0,
      "LackOfCohesion" : 0.48536774833860735,
      "MetricsIntensity" : 0.032905179020505486,
      "Density" : 0.9983798379837984
    },
    "euclideanDistance" : 6.183207779617456,
    "generation" : 0,
    "numberOfRefactorings" : 6,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.470292044310172,
      "LackOfCohesion" : 0.48536774833860735,
      "MetricsIntensity" : 0.03290517902050549,
      "Density" : 3.0256410256410264,
      "baselineType" : "MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    } ]
  }, {
    "solutionId" : "1b83d7f4-fd18-4514-9b92-d03f54def286",
    "objectives" : {
      "NumberOfConcerns" : 1.0054757015742641,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4861005874119189,
      "MetricsIntensity" : 0.03287783272446795,
      "Density" : 1.0010801080108012
    },
    "euclideanDistance" : 9.124172154342444,
    "generation" : 0,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.472681704260652,
      "LackOfCohesion" : 0.4861005874119189,
      "MetricsIntensity" : 0.03287783272446794,
      "Density" : 3.0206409560021728,
      "baselineType" : "CONCERN_EXTRACT_CLASS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.clearExtraInformation(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "a5944a6b-7c3a-41ba-a623-dada7b9c9a41",
    "objectives" : {
      "NumberOfConcerns" : 1.004106776180698,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48633073599353044,
      "MetricsIntensity" : 0.0329148289484743,
      "Density" : 1.0012601260126013
    },
    "euclideanDistance" : 15.074758811624532,
    "generation" : 0,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4714142427281847,
      "LackOfCohesion" : 0.48633073599353044,
      "MetricsIntensity" : 0.0329148289484743,
      "Density" : 3.0211841390548617,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "d5683edf-6c01-48ea-9786-322c15022905",
    "objectives" : {
      "NumberOfConcerns" : 1.002737850787132,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48681106355013015,
      "MetricsIntensity" : 0.03293377321160285,
      "Density" : 0.9974797479747974
    },
    "euclideanDistance" : 17.065711783867496,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4701455092824887,
      "LackOfCohesion" : 0.48681106355013015,
      "MetricsIntensity" : 0.03293377321160285,
      "Density" : 3.0114130434782607,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "500c29eb-1e37-4678-a698-b1a503a25aab",
    "objectives" : {
      "NumberOfConcerns" : 1.002737850787132,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48668766677660386,
      "MetricsIntensity" : 0.032900729344419635,
      "Density" : 0.9985598559855986
    },
    "euclideanDistance" : 17.0657713662867,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4716223003515818,
      "LackOfCohesion" : 0.48668766677660386,
      "MetricsIntensity" : 0.032900729344419635,
      "Density" : 3.0179542981501633,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "1b54c034-3ded-4d90-aa04-a00a8bc48ac2",
    "objectives" : {
      "NumberOfConcerns" : 1.0030800821355237,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48729497735365823,
      "MetricsIntensity" : 0.03291757571207821,
      "Density" : 0.9994599459945994
    },
    "euclideanDistance" : 17.0658615310382,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713855421686746,
      "LackOfCohesion" : 0.48729497735365823,
      "MetricsIntensity" : 0.03291757571207822,
      "Density" : 3.0190320826536157,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6d81d797-90bd-483e-ae3d-d7fba8ccc224",
    "objectives" : {
      "NumberOfConcerns" : 1.003422313483915,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4874244826453973,
      "MetricsIntensity" : 0.032904980887076864,
      "Density" : 0.9994599459945994
    },
    "euclideanDistance" : 17.065885323852797,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4711490215755147,
      "LackOfCohesion" : 0.4874244826453973,
      "MetricsIntensity" : 0.032904980887076864,
      "Density" : 3.0190320826536157,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "cbface3a-f562-448a-96db-00cf16c49d8d",
    "objectives" : {
      "NumberOfConcerns" : 1.0044490075290897,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4886741733959131,
      "MetricsIntensity" : 0.03292039562642906,
      "Density" : 1.0003600360036005
    },
    "euclideanDistance" : 17.06603422622115,
    "generation" : 0,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4726542900150528,
      "LackOfCohesion" : 0.4886741733959131,
      "MetricsIntensity" : 0.03292039562642906,
      "Density" : 3.0217509516041323,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.queue.MappingWorksheet.WorkChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.queue.CauseOfBlockage.BecauseLabelIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "661427be-77e4-41d4-b526-c1b0d0ebd618",
    "objectives" : {
      "NumberOfConcerns" : 1.0030800821355237,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4850635757578573,
      "MetricsIntensity" : 0.03290489476958323,
      "Density" : 0.9926192619261927
    },
    "euclideanDistance" : 21.05297679794833,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4713855421686746,
      "LackOfCohesion" : 0.4850635757578573,
      "MetricsIntensity" : 0.03290489476958323,
      "Density" : 2.9983686786296904,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "82dc9175-5ddd-42ac-a42c-90935c52c7aa",
    "objectives" : {
      "NumberOfConcerns" : 1.0017111567419577,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4872103906296112,
      "MetricsIntensity" : 0.032893599867680534,
      "Density" : 0.9958595859585958
    },
    "euclideanDistance" : 21.05311419980751,
    "generation" : 0,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4701155198392768,
      "LackOfCohesion" : 0.4872103906296112,
      "MetricsIntensity" : 0.032893599867680534,
      "Density" : 3.0114316820903646,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "2e07e7fd-0c66-4389-975e-2fa52082a293",
    "objectives" : {
      "NumberOfConcerns" : 0.9996577686516085,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4861536039004595,
      "MetricsIntensity" : 0.032966598156053205,
      "Density" : 0.9951395139513951
    },
    "euclideanDistance" : 23.048363291779143,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4671019588146659,
      "LackOfCohesion" : 0.4861536039004595,
      "MetricsIntensity" : 0.032966598156053205,
      "Density" : 3.007616974972796,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "39e401f7-6e2b-4ec2-b1a8-2522c78b66d0",
    "objectives" : {
      "NumberOfConcerns" : 1.002737850787132,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4865403795526469,
      "MetricsIntensity" : 0.03294148530541741,
      "Density" : 0.9972997299729973
    },
    "euclideanDistance" : 23.048598582803137,
    "generation" : 0,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708835341365458,
      "LackOfCohesion" : 0.4865403795526469,
      "MetricsIntensity" : 0.032941485305417406,
      "Density" : 3.014145810663765,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.clearExtraInformation(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "d82520c0-927c-4388-81c5-4922f7c04336",
    "objectives" : {
      "NumberOfConcerns" : 1.002053388090349,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4879881712407169,
      "MetricsIntensity" : 0.03298155406952535,
      "Density" : 0.9976597659765977
    },
    "euclideanDistance" : 26.04301549819858,
    "generation" : 0,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4706177800100455,
      "LackOfCohesion" : 0.4879881712407169,
      "MetricsIntensity" : 0.03298155406952534,
      "Density" : 3.015233949945593,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "67247051-01f4-430b-b02d-f4957d8ed175",
    "objectives" : {
      "NumberOfConcerns" : 1.0023956194387407,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48688209346081474,
      "MetricsIntensity" : 0.03292211699052788,
      "Density" : 0.992979297929793
    },
    "euclideanDistance" : 27.041245217310298,
    "generation" : 0,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4718592964824126,
      "LackOfCohesion" : 0.48688209346081474,
      "MetricsIntensity" : 0.03292211699052788,
      "Density" : 3.0043572984749454,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "fbdac217-9f83-4116-a809-2fc5519cda75",
    "objectives" : {
      "NumberOfConcerns" : 1.0023956194387407,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48685928128321626,
      "MetricsIntensity" : 0.032940796824100706,
      "Density" : 0.9972997299729973
    },
    "euclideanDistance" : 28.03992726069633,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4703815261044175,
      "LackOfCohesion" : 0.48685928128321626,
      "MetricsIntensity" : 0.0329407968241007,
      "Density" : 3.0141458106637646,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "af6cc281-09ac-4504-89cf-e5a760a61d79",
    "objectives" : {
      "NumberOfConcerns" : 1.0017111567419577,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4861885912249392,
      "MetricsIntensity" : 0.03289145212655769,
      "Density" : 0.9990999099909991
    },
    "euclideanDistance" : 28.039955190148675,
    "generation" : 0,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708542713567838,
      "LackOfCohesion" : 0.4861885912249392,
      "MetricsIntensity" : 0.03289145212655768,
      "Density" : 3.022875816993465,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "aae9cee9-6a49-4129-9024-e752883c5cf5",
    "objectives" : {
      "NumberOfConcerns" : 1.0003422313483916,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48619858941882615,
      "MetricsIntensity" : 0.03294587505747786,
      "Density" : 0.9978397839783978
    },
    "euclideanDistance" : 30.03720764840409,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4695827048768235,
      "LackOfCohesion" : 0.48619858941882615,
      "MetricsIntensity" : 0.03294587505747787,
      "Density" : 3.0207084468664847,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.providers.ProviderNotFoundException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "dbea8990-1a76-4f39-9b49-5d5dfe6e6503",
    "objectives" : {
      "NumberOfConcerns" : 1.001368925393566,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4873115997102182,
      "MetricsIntensity" : 0.03295710839330428,
      "Density" : 0.9963996399639964
    },
    "euclideanDistance" : 30.03721209988487,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4688755020080322,
      "LackOfCohesion" : 0.4873115997102182,
      "MetricsIntensity" : 0.03295710839330428,
      "Density" : 3.0130647795318453,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.clearExtraInformation(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "63d0d607-a37e-41d4-ac13-06c97c1391f7",
    "objectives" : {
      "NumberOfConcerns" : 1.001368925393566,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4877341844368727,
      "MetricsIntensity" : 0.03292403889076238,
      "Density" : 0.9994599459945994
    },
    "euclideanDistance" : 30.037320595142912,
    "generation" : 0,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4703517587939694,
      "LackOfCohesion" : 0.4877341844368727,
      "MetricsIntensity" : 0.03292403889076238,
      "Density" : 3.0239651416121998,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "e70a0f91-7325-43fb-925d-945bff805216",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4883166629582504,
      "MetricsIntensity" : 0.03297825387626278,
      "Density" : 0.9951395139513951
    },
    "euclideanDistance" : 31.0359443771376,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.467604218985434,
      "LackOfCohesion" : 0.4883166629582504,
      "MetricsIntensity" : 0.03297825387626278,
      "Density" : 3.0076169749727955,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.queue.MappingWorksheet.WorkChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.queue.CauseOfBlockage.BecauseLabelIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "5a365b04-6780-404d-8c30-a60e7d493d35",
    "objectives" : {
      "NumberOfConcerns" : 1.002737850787132,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48645377978158544,
      "MetricsIntensity" : 0.032943552825932636,
      "Density" : 0.9936993699369937
    },
    "euclideanDistance" : 31.035957278497968,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708835341365456,
      "LackOfCohesion" : 0.48645377978158544,
      "MetricsIntensity" : 0.032943552825932636,
      "Density" : 3.0032644178454833,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "dcde31a5-7aed-42ae-a010-bd27ad57fec9",
    "objectives" : {
      "NumberOfConcerns" : 1.0003422313483916,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4884203364948352,
      "MetricsIntensity" : 0.03298488737636597,
      "Density" : 0.9962196219621963
    },
    "euclideanDistance" : 31.035991695818236,
    "generation" : 0,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4681064791562026,
      "LackOfCohesion" : 0.4884203364948352,
      "MetricsIntensity" : 0.03298488737636597,
      "Density" : 3.0125204137180175,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.clearExtraInformation(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "539095e9-25bc-441e-8532-e51e5718bcd2",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48667294740840655,
      "MetricsIntensity" : 0.03296721585721924,
      "Density" : 0.9906390639063907
    },
    "euclideanDistance" : 35.03168998421283,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4690799396681744,
      "LackOfCohesion" : 0.48667294740840655,
      "MetricsIntensity" : 0.03296721585721925,
      "Density" : 2.995645073489385,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.install.InstallUtil.functions], extractedMethods=[jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.queue.MappingWorksheet.WorkChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.queue.CauseOfBlockage.BecauseLabelIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "0f203ab9-72ff-4b2f-92ee-2203cd4fa629",
    "objectives" : {
      "NumberOfConcerns" : 1.0010266940451746,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.485499066463554,
      "MetricsIntensity" : 0.03294014609402195,
      "Density" : 0.9994599459945994
    },
    "euclideanDistance" : 35.031953542767205,
    "generation" : 0,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4691109994977396,
      "LackOfCohesion" : 0.485499066463554,
      "MetricsIntensity" : 0.03294014609402195,
      "Density" : 3.0223189983669023,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.install.InstallStateFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.clearExtraInformation(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "3556747c-2518-42f2-bad1-d8afb9173963",
    "objectives" : {
      "NumberOfConcerns" : 1.0010266940451746,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48591271919796036,
      "MetricsIntensity" : 0.03295453023691475,
      "Density" : 0.9911791179117911
    },
    "euclideanDistance" : 36.030843560173786,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4691109994977396,
      "LackOfCohesion" : 0.48591271919796036,
      "MetricsIntensity" : 0.032954530236914754,
      "Density" : 2.997278170930865,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.queue.MappingWorksheet.WorkChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.queue.CauseOfBlockage.BecauseLabelIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "6e56f0de-487d-48b5-b212-315c18ad3345",
    "objectives" : {
      "NumberOfConcerns" : 1.0010266940451746,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4859953875741088,
      "MetricsIntensity" : 0.0329352146009154,
      "Density" : 0.9998199819981998
    },
    "euclideanDistance" : 36.03108339591939,
    "generation" : 0,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4698492462311554,
      "LackOfCohesion" : 0.4859953875741088,
      "MetricsIntensity" : 0.0329352146009154,
      "Density" : 3.0267029972752044,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.method, hudson.search.ParsedQuickSilver.field], extractedMethods=[hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.toError(IllegalAccessException)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "39e930a9-c1b2-4f17-840d-a03574440fc6",
    "objectives" : {
      "NumberOfConcerns" : 0.999315537303217,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48816789344289246,
      "MetricsIntensity" : 0.03302840448809434,
      "Density" : 0.9963996399639964
    },
    "euclideanDistance" : 37.03013424973379,
    "generation" : 0,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4673366834170858,
      "LackOfCohesion" : 0.48816789344289246,
      "MetricsIntensity" : 0.03302840448809434,
      "Density" : 3.0130647795318453,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.queue.MappingWorksheet.WorkChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.queue.CauseOfBlockage.BecauseLabelIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring(), org.acegisecurity.AuthenticationException.clearExtraInformation(), org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='org.acegisecurity.context.SecurityContextImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.labels.LabelExpression.Implies'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.model.Queue.BlockedItem'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.DownloadService.Downloadable.due, hudson.model.DownloadService.Downloadable.url, hudson.model.DownloadService.Downloadable.LOGGER], extractedMethods=[hudson.model.DownloadService.Downloadable.getData(), hudson.model.DownloadService.Downloadable.getDue(), hudson.model.DownloadService.Downloadable.updateNow(), hudson.model.DownloadService.Downloadable.getDataFile(), hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>), hudson.model.DownloadService.Downloadable.getUrls(), hudson.model.DownloadService.Downloadable.all(), hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String), hudson.model.DownloadService.Downloadable.getUrl(), hudson.model.DownloadService.Downloadable.getInterval(), hudson.model.DownloadService.Downloadable.load(String, long)]"
      } ]
    } ]
  }, {
    "solutionId" : "f825d8f2-28a4-4edb-ba90-e905e4516acc",
    "objectives" : {
      "NumberOfConcerns" : 1.0017111567419577,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.48654590213481597,
      "MetricsIntensity" : 0.03298756493690144,
      "Density" : 0.992979297929793
    },
    "euclideanDistance" : 38.02929460589538,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4715937657114135,
      "LackOfCohesion" : 0.48654590213481597,
      "MetricsIntensity" : 0.03298756493690144,
      "Density" : 3.0059945504087193,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "9390ceba-9a7e-41a4-a406-041457365ae5",
    "objectives" : {
      "NumberOfConcerns" : 1.0017111567419577,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.485999989398496,
      "MetricsIntensity" : 0.032995323591397015,
      "Density" : 0.9936993699369937
    },
    "euclideanDistance" : 38.02930644069687,
    "generation" : 0,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4708542713567838,
      "LackOfCohesion" : 0.485999989398496,
      "MetricsIntensity" : 0.032995323591397015,
      "Density" : 3.004899292324442,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='hudson.model.FileParameterDefinition'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.security.HudsonPrivateSecurityRealm.SignupInfo'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.Fingerprint.RangeSet.isEmpty(), hudson.model.Fingerprint.RangeSet.removeAll(RangeSet), hudson.model.Fingerprint.RangeSet.min(), hudson.model.Fingerprint.RangeSet.addAll(int...), hudson.model.Fingerprint.RangeSet.listNumbersReverse(), hudson.model.Fingerprint.RangeSet.toString(), hudson.model.Fingerprint.RangeSet.fromString(String, boolean), hudson.model.Fingerprint.RangeSet.retainAll(RangeSet), hudson.model.Fingerprint.RangeSet.listNumbers()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.search.ParsedQuickSilver.url, hudson.search.ParsedQuickSilver.TABLE, hudson.search.ParsedQuickSilver.searchName], extractedMethods=[hudson.search.ParsedQuickSilver.toError(IllegalAccessException), hudson.search.ParsedQuickSilver.splitName(String), hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object), hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "dc0cbe5f-e856-4ee9-8e9b-c193711e12d5",
    "objectives" : {
      "NumberOfConcerns" : 0.9996577686516085,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48638463536165444,
      "MetricsIntensity" : 0.03296130828703999,
      "Density" : 0.9983798379837984
    },
    "euclideanDistance" : 40.02791194175232,
    "generation" : 0,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4678391959799,
      "LackOfCohesion" : 0.48638463536165444,
      "MetricsIntensity" : 0.03296130828703999,
      "Density" : 3.020697167755991,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.security.csrf.CrumbIssuer.DEFAULT_CRUMB_NAME], extractedMethods=[hudson.security.csrf.CrumbIssuer.getApi(), hudson.security.csrf.CrumbIssuer.all(), hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "bdc95fb1-124a-4067-bca7-eaeea21afec8",
    "objectives" : {
      "NumberOfConcerns" : 1.0010266940451746,
      "NumberOfRefactorings" : 45.0,
      "LackOfCohesion" : 0.48629429472585933,
      "MetricsIntensity" : 0.0329877044473943,
      "Density" : 0.9926192619261927
    },
    "euclideanDistance" : 45.024714521816406,
    "generation" : 0,
    "numberOfRefactorings" : 45,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4698492462311554,
      "LackOfCohesion" : 0.48629429472585933,
      "MetricsIntensity" : 0.032987704447394295,
      "Density" : 3.004904632152589,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.views.StatusColumn'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.org.apache.commons.validator.routines.DomainValidator.IDNBUGHOLDER'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenErrorNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbIssuer.getCrumbRequestField(), hudson.security.csrf.CrumbIssuer.getApi()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.SoloFilePathFilter.base], extractedMethods=[jenkins.SoloFilePathFilter.delete(File), jenkins.SoloFilePathFilter.normalize(File), jenkins.SoloFilePathFilter.symlink(File), jenkins.SoloFilePathFilter.mkdirs(File), jenkins.SoloFilePathFilter.write(File), jenkins.SoloFilePathFilter.read(File), jenkins.SoloFilePathFilter.stat(File)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "9222958d-3cb8-4c60-aa1d-fd925d8edfd2",
    "objectives" : {
      "NumberOfConcerns" : 0.9976043805612594,
      "NumberOfRefactorings" : 54.0,
      "LackOfCohesion" : 0.4855502494380829,
      "MetricsIntensity" : 0.032972932181728025,
      "Density" : 0.9902790279027903
    },
    "euclideanDistance" : 54.02048420101587,
    "generation" : 0,
    "numberOfRefactorings" : 54,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.4670357322596874,
      "LackOfCohesion" : 0.4855502494380829,
      "MetricsIntensity" : 0.032972932181728025,
      "Density" : 3.001091107474086,
      "baselineType" : "RANDOM_SELECTION"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.install.InstallUtil.clearInstallStatus(), jenkins.install.InstallUtil.getPersistedInstallStatus(), jenkins.install.InstallUtil.getInstallingPluginsFile(), jenkins.install.InstallUtil.getNextInstallState(InstallState), jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState), jenkins.install.InstallUtil.getDefaultInstallState(), jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='hudson.views.LastDurationColumn.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='org.acegisecurity.util.FieldUtils'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ByteArrayOutputStream2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ByteArrayOutputStream2'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='org.springframework.dao.DataAccessResourceFailureException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.model.User.FullNameIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.model.PeriodicWork.PeriodicWorkExtensionListListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.cli.CLI.NotTalkingToJenkinsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='hudson.cli.handlers.JobOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.tasks.LogRotator.CollatedLogRotatorException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.slaves.ChannelPinger.SetUpRemotePing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.model.queue.MappingWorksheet.WorkChunk'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='org.acegisecurity.userdetails.User'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.model.queue.CauseOfBlockage.BecauseLabelIsOffline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.model.BooleanParameterDefinition.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='hudson.util.io.ParserConfigurator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='org.acegisecurity.ui.rememberme.RememberMeServicesSpringImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='jenkins.model.item_category.ItemCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='org.acegisecurity.util.FieldUtils'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='jenkins.ExtensionRefreshException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.util.AlternativeUiTextProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.BadCredentialsException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='jenkins.security.ImpersonatingScheduledExecutorService'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='jenkins.security.ImpersonatingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.util.DirScanner.Glob'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.AboutJenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='hudson.util.AlternativeUiTextProvider.Message'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.FilePath.CreateTempDir'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.NodeDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='jenkins.util.xstream.XStreamDOM.WriterImpl.Pending'"
      } ]
    } ]
  }, {
    "solutionId" : "6e56a366-0ec5-47e6-95db-1eea051e963d",
    "objectives" : {
      "NumberOfConcerns" : 0.9948665297741273,
      "NumberOfRefactorings" : 62.0,
      "LackOfCohesion" : 0.4911744002738924,
      "MetricsIntensity" : 0.03312683879919803,
      "Density" : 0.9974797479747974
    },
    "euclideanDistance" : 62.0179576811315,
    "generation" : 0,
    "numberOfRefactorings" : 62,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.463746223564955,
      "LackOfCohesion" : 0.4911744002738924,
      "MetricsIntensity" : 0.03312683879919803,
      "Density" : 3.0229132569558104,
      "baselineType" : "CONCERN_MOVE_METHODS"
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.install.InstallUtil",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.clearInstallStatus()', targetType='hudson.tools.ToolInstaller.ToolInstallerEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getNextInstallState(InstallState)', targetType='hudson.ExtensionList.Lock'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.proceedToNextStateFrom(InstallState)', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getDefaultInstallState()', targetType='jenkins.model.Jenkins.MasterRestartNotifyier'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getPersistedInstallStatus()', targetType='hudson.tasks._maven.MavenMojoNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.getInstallingPluginsFile()', targetType='hudson.tasks._maven.MavenMojoNote.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.install.InstallUtil.persistInstallStatus(List<UpdateCenterJob>)', targetType='hudson.tasks._maven.MavenMojoNote.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getApi()', targetType='jenkins.security.apitoken.ApiTokenPropertyDisabledDefaultAdministrativeMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.getCrumbRequestField()', targetType='hudson.util.DirScanner.Filter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Fingerprint.RangeSet",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.isEmpty()', targetType='hudson.slaves.OfflineCause.UserCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.addAll(int...)', targetType='jenkins.management.StatisticsLink'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.toString()', targetType='hudson.util.xstream.MapperDelegate'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.removeAll(RangeSet)', targetType='hudson.util.ProcessTree.Linux.LinuxProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.min()', targetType='hudson.util.ProcessTree.Linux.LinuxProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbersReverse()', targetType='hudson.util.ProcessTree.Linux.LinuxProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.fromString(String, boolean)', targetType='hudson.util.ProcessTree.Linux.LinuxProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.retainAll(RangeSet)', targetType='hudson.util.ProcessTree.Linux.LinuxProcess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Fingerprint.RangeSet.listNumbers()', targetType='hudson.util.ProcessTree.Linux.LinuxProcess'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.SoloFilePathFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.write(File)', targetType='hudson.util.DelegatingOutputStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.symlink(File)', targetType='hudson.security.HudsonPrivateSecurityRealm.Details.UserDetailsImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.mkdirs(File)', targetType='hudson.util.ChartUtil.NumberOnlyBuildLabel'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.normalize(File)', targetType='hudson.FilePath.GetFreeDiskSpace'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.delete(File)', targetType='hudson.model.Cause.UpstreamCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.stat(File)', targetType='jenkins.ClassLoaderReflectionToolkit.FindResources'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.SoloFilePathFilter.read(File)', targetType='hudson.Launcher.DecoratedLauncher'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.PluginManager.PluginCycleDependenciesMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.util.jna.WINBASE.FILETIME'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.UserIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.model.UserIdMigrator'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.tools.InstallSourceProperty.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.ReflectionUtils.MethodInfo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='jenkins.install.InstallState.Unknown'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='jenkins.install.InstallState.Unknown'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.search.ParsedQuickSilver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.addTo(SearchIndexBuilder, Object)', targetType='jenkins.security.s2m.CallableDirectionChecker.DefaultWhitelist'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.url', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.DefaultWhitelist'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.searchName', targetTypeName='jenkins.security.s2m.CallableDirectionChecker.DefaultWhitelist'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.get(Class<? extends SearchableModelObject>)', targetType='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.search.ParsedQuickSilver.TABLE', targetTypeName='hudson.ProxyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.toError(IllegalAccessException)', targetType='hudson.util.FormFieldValidator.WorkspaceDirectory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.search.ParsedQuickSilver.splitName(String)', targetType='jenkins.util.TreeString.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.slaves.SlaveComputer.LoadingTime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.cli.handlers.AbstractItemOptionHandler'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.JenkinsHttpSessionListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getAuthentication()', targetType='org.acegisecurity.AuthenticationServiceException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.setAuthentication(Authentication)', targetType='org.acegisecurity.AuthenticationServiceException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.acegisecurity.AuthenticationException.authentication', targetTypeName='org.acegisecurity.AuthenticationServiceException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.init(FilterConfig)', targetType='jenkins.install.InstallState.Restart'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String)', targetType='hudson.model.Label.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.ProcessKillingVeto'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.DownloadService.Downloadable",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.<T>hasDuplicates(List<T>, String)', targetType='hudson.model.Queue.StubItem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDataFile()', targetType='hudson.util.XStream2.PluginClassOwnership'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getInterval()', targetType='org.jenkins.ui.icon.WeatherIcon'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getDue()', targetType='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.DownloadService.Downloadable.due', targetTypeName='hudson.security.HudsonPrivateSecurityRealm.JBCryptEncoder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrls()', targetType='hudson.slaves.AbstractCloudComputer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.all()', targetType='hudson.slaves.AbstractCloudComputer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getUrl()', targetType='hudson.slaves.AbstractCloudComputer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.getData()', targetType='hudson.tools.ToolInstaller.ToolInstallerEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.updateNow()', targetType='hudson.tools.ToolInstaller.ToolInstallerEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.reduce(List<JSONObject>)', targetType='hudson.tools.ToolInstaller.ToolInstallerEntry'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.DownloadService.Downloadable.load(String, long)', targetType='hudson.tools.ToolInstaller.ToolInstallerEntry'"
      } ]
    } ]
  } ]
}