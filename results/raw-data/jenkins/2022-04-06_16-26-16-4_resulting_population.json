{
  "executionId" : "57016e91-f5ad-4235-acba-c1f1e9f36d17",
  "computingTime" : 715797,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0736329182458038,
    "meanNumConcerns" : 1.5337361530715001,
    "meanMetricsIntensity" : 0.032969370243008465,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "3ce3fe1d-3116-46d9-9bc8-b384a90953b6",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4859175442095096,
      "MetricsIntensity" : 0.03278770886483918,
      "Density" : 0.9992954025013211
    },
    "euclideanDistance" : 9.123544699495183,
    "generation" : 7,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316265060240961,
      "LackOfCohesion" : 0.4859175442095096,
      "MetricsIntensity" : 0.032787708864839185,
      "Density" : 3.0631749460043203
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "06e13eb4-bd81-4e51-92ce-78beeb620bd5",
    "objectives" : {
      "NumberOfConcerns" : 1.0026263952724885,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4865935861303002,
      "MetricsIntensity" : 0.03277019156374176,
      "Density" : 0.9998238506253303
    },
    "euclideanDistance" : 9.123746742665244,
    "generation" : 9,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323632714500748,
      "LackOfCohesion" : 0.4865935861303002,
      "MetricsIntensity" : 0.03277019156374176,
      "Density" : 3.063140852671343
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a1b616fa-3172-47d2-882c-10f3a6afe436",
    "objectives" : {
      "NumberOfConcerns" : 1.0036112934996717,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.48572086308334356,
      "MetricsIntensity" : 0.032778121752955656,
      "Density" : 0.9994715518759908
    },
    "euclideanDistance" : 9.123769954001995,
    "generation" : 32,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5330992978936808,
      "LackOfCohesion" : 0.48572086308334356,
      "MetricsIntensity" : 0.032778121752955656,
      "Density" : 3.0620615218564486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "2c2c9a6f-b7df-47b0-97eb-75ac9a8118a3",
    "objectives" : {
      "NumberOfConcerns" : 1.0036112934996717,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4857208630833435,
      "MetricsIntensity" : 0.03277812175295566,
      "Density" : 0.9994715518759908
    },
    "euclideanDistance" : 9.123769954001995,
    "generation" : 37,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5330992978936813,
      "LackOfCohesion" : 0.4857208630833435,
      "MetricsIntensity" : 0.03277812175295566,
      "Density" : 3.0620615218564486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f3a48a28-58bf-45be-91ea-253d5c414516",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 9.0,
      "LackOfCohesion" : 0.4865385503570476,
      "MetricsIntensity" : 0.032770191563741745,
      "Density" : 1.0
    },
    "euclideanDistance" : 9.123799195840645,
    "generation" : 33,
    "numberOfRefactorings" : 9,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532865027596588,
      "LackOfCohesion" : 0.4865385503570476,
      "MetricsIntensity" : 0.032770191563741745,
      "Density" : 3.0636805180787916
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "c0c7a1fe-5022-4032-a07a-3670459bd785",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48618527055398125,
      "MetricsIntensity" : 0.03276320091734412,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 10.11114450934033,
    "generation" : 36,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5308890005022602,
      "LackOfCohesion" : 0.48618527055398125,
      "MetricsIntensity" : 0.03276320091734412,
      "Density" : 3.063243243243243
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "9ff89b57-557d-45a2-8365-d7f9431f1d2d",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4868615373181507,
      "MetricsIntensity" : 0.03274568746572158,
      "Density" : 0.998766954377312
    },
    "euclideanDistance" : 10.111326696053624,
    "generation" : 30,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316265060240961,
      "LackOfCohesion" : 0.4868615373181507,
      "MetricsIntensity" : 0.03274568746572158,
      "Density" : 3.0632090761750392
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "2d68e540-140e-4674-a9b2-2dad57cf2e1f",
    "objectives" : {
      "NumberOfConcerns" : 1.0026263952724885,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48598818649230896,
      "MetricsIntensity" : 0.03275363260251134,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 10.111347527947428,
    "generation" : 34,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323632714500748,
      "LackOfCohesion" : 0.48598818649230896,
      "MetricsIntensity" : 0.032753632602511344,
      "Density" : 3.0621285791464077
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "aadb1f2f-6a30-4b5f-8360-68f9fd06a7b4",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48680647123885573,
      "MetricsIntensity" : 0.032745687465721596,
      "Density" : 0.9989431037519817
    },
    "euclideanDistance" : 10.111373972810425,
    "generation" : 40,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562246,
      "LackOfCohesion" : 0.48680647123885573,
      "MetricsIntensity" : 0.03274568746572159,
      "Density" : 3.063749324689357
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d6e0ef67-14c0-4020-8144-f9ea761f8c10",
    "objectives" : {
      "NumberOfConcerns" : 1.0032829940906107,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4853826632913932,
      "MetricsIntensity" : 0.032791900458681904,
      "Density" : 0.9994715518759908
    },
    "euclideanDistance" : 10.111488109462442,
    "generation" : 41,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5333667837431006,
      "LackOfCohesion" : 0.4853826632913932,
      "MetricsIntensity" : 0.0327919004586819,
      "Density" : 3.0620615218564486
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d67e8302-b356-4d39-9bdf-31518fda1aa6",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4858467674588857,
      "MetricsIntensity" : 0.03277699418496759,
      "Density" : 0.9982385062533028
    },
    "euclideanDistance" : 11.10109265949814,
    "generation" : 8,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.4858467674588857,
      "MetricsIntensity" : 0.03277699418496759,
      "Density" : 3.063243243243244
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "40a62b36-fb1c-4323-a871-be39e0d73d65",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48564994767151315,
      "MetricsIntensity" : 0.0327674054104156,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 11.101277533332587,
    "generation" : 29,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326305220883532,
      "LackOfCohesion" : 0.48564994767151315,
      "MetricsIntensity" : 0.0327674054104156,
      "Density" : 3.062128579146407
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "74e0d649-b9f7-4e02-afee-c4ea3010d07b",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4856499476715131,
      "MetricsIntensity" : 0.032767405410415604,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 11.101277533332587,
    "generation" : 41,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326305220883532,
      "LackOfCohesion" : 0.4856499476715131,
      "MetricsIntensity" : 0.032767405410415604,
      "Density" : 3.062128579146407
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5297fee8-4ce6-4f06-8700-dd66aec250c5",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48659150144191954,
      "MetricsIntensity" : 0.03278915878806083,
      "Density" : 0.9938347718865598
    },
    "euclideanDistance" : 12.092538916415657,
    "generation" : 17,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562246,
      "LackOfCohesion" : 0.48659150144191954,
      "MetricsIntensity" : 0.03278915878806083,
      "Density" : 3.0464362850971916
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "adc22d89-574e-459a-968f-b6efcf48547f",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48571877954165604,
      "MetricsIntensity" : 0.032797090665616264,
      "Density" : 0.9934824731372204
    },
    "euclideanDistance" : 12.092556550455745,
    "generation" : 39,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532865027596588,
      "LackOfCohesion" : 0.48571877954165604,
      "MetricsIntensity" : 0.03279709066561627,
      "Density" : 3.0453563714902816
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e431ac02-7769-4bf3-80de-ee988f7badf4",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48619056828655155,
      "MetricsIntensity" : 0.03277290241675162,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 12.092595464394927,
    "generation" : 37,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060304,
      "LackOfCohesion" : 0.48619056828655155,
      "MetricsIntensity" : 0.032772902416751626,
      "Density" : 3.0621957815035152
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "580b06e8-2a77-4968-9dc3-8039746d42b9",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4861380450522104,
      "MetricsIntensity" : 0.032747459083420465,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 12.09268924601296,
    "generation" : 44,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5303867403314917,
      "LackOfCohesion" : 0.4861380450522104,
      "MetricsIntensity" : 0.032747459083420465,
      "Density" : 3.0610810810810807
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "364bd297-2fa9-44e1-86d1-ee24d5dac160",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4869206328364969,
      "MetricsIntensity" : 0.03278442910086071,
      "Density" : 0.9897833362691563
    },
    "euclideanDistance" : 13.08509871344914,
    "generation" : 20,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730284,
      "LackOfCohesion" : 0.4869206328364969,
      "MetricsIntensity" : 0.03278442910086071,
      "Density" : 3.0356564019448955
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "2b58c027-04c2-497f-bfad-00a4cd949411",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4860472494869794,
      "MetricsIntensity" : 0.03279236794680622,
      "Density" : 0.9894310375198168
    },
    "euclideanDistance" : 13.085114998315596,
    "generation" : 44,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562246,
      "LackOfCohesion" : 0.4860472494869794,
      "MetricsIntensity" : 0.03279236794680622,
      "Density" : 3.034575904916262
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "91b43063-96cd-4b8b-94db-9c22e211d217",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48686556675720194,
      "MetricsIntensity" : 0.03278442910086072,
      "Density" : 0.989959485643826
    },
    "euclideanDistance" : 13.085135108276948,
    "generation" : 44,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437972,
      "LackOfCohesion" : 0.48686556675720194,
      "MetricsIntensity" : 0.03278442910086071,
      "Density" : 3.0361966504592117
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "eeeee196-3c9f-40bb-855b-ffd894f81390",
    "objectives" : {
      "NumberOfConcerns" : 1.0026263952724885,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4853805786030123,
      "MetricsIntensity" : 0.03281087981103028,
      "Density" : 0.9934824731372204
    },
    "euclideanDistance" : 13.085447564865595,
    "generation" : 43,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5331325301204815,
      "LackOfCohesion" : 0.4853805786030123,
      "MetricsIntensity" : 0.03281087981103028,
      "Density" : 3.0453563714902807
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "ad6dba72-94de-4fb3-9d03-9d41cf988bcc",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4858520681119263,
      "MetricsIntensity" : 0.03278670103250044,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 13.085483593418273,
    "generation" : 38,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52991452991453,
      "LackOfCohesion" : 0.4858520681119263,
      "MetricsIntensity" : 0.03278670103250044,
      "Density" : 3.062195781503515
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "57d3bad2-2b32-4aff-9c7e-bab96fcd2101",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4857995159232107,
      "MetricsIntensity" : 0.03276124367307596,
      "Density" : 0.9975339087546239
    },
    "euclideanDistance" : 13.08557023472319,
    "generation" : 40,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316577,
      "LackOfCohesion" : 0.4857995159232107,
      "MetricsIntensity" : 0.03276124367307596,
      "Density" : 3.06108108108108
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "3ae444dc-87eb-4822-9f5e-21142fc61ed8",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48564786183517605,
      "MetricsIntensity" : 0.032786395213949195,
      "Density" : 0.9924255768892021
    },
    "euclideanDistance" : 14.079244404714451,
    "generation" : 41,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5323957810145656,
      "LackOfCohesion" : 0.48564786183517605,
      "MetricsIntensity" : 0.03278639521394919,
      "Density" : 3.0454054054054063
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "1eafde60-3a5b-442f-b944-24cb78a2f40b",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48646640992061535,
      "MetricsIntensity" : 0.032778451609305675,
      "Density" : 0.9929540250132112
    },
    "euclideanDistance" : 14.079263207183102,
    "generation" : 41,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.48646640992061535,
      "MetricsIntensity" : 0.032778451609305675,
      "Density" : 3.0470270270270268
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "ce3af755-17e0-4674-b616-5188a15b4e9a",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48614334278478066,
      "MetricsIntensity" : 0.03275716058282795,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 14.079373461910922,
    "generation" : 10,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529145728643216,
      "LackOfCohesion" : 0.48614334278478066,
      "MetricsIntensity" : 0.03275716058282795,
      "Density" : 3.0600324499729576
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "95fc006c-1cf9-463a-b506-e62b709e0401",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4844435228375514,
      "MetricsIntensity" : 0.032836691950052274,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 14.079495636026268,
    "generation" : 38,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.4844435228375514,
      "MetricsIntensity" : 0.032836691950052274,
      "Density" : 3.060507833603457
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "06acf769-a939-44ac-8bd3-fe97fecb8dd7",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4844361381194228,
      "MetricsIntensity" : 0.03284597855157039,
      "Density" : 0.9927778756385415
    },
    "euclideanDistance" : 15.073929013600248,
    "generation" : 28,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.4844361381194228,
      "MetricsIntensity" : 0.03284597855157039,
      "Density" : 3.044840626688276
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "fb8e45d9-2347-4054-ab37-446d6b772777",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4859154364146995,
      "MetricsIntensity" : 0.032805409985538755,
      "Density" : 0.9926017262638718
    },
    "euclideanDistance" : 15.073986742498247,
    "generation" : 40,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5326633165829144,
      "LackOfCohesion" : 0.4859154364146995,
      "MetricsIntensity" : 0.032805409985538755,
      "Density" : 3.0459459459459466
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0615ceb9-a61b-4665-8c08-9ba65bb1785f",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48552951827600616,
      "MetricsIntensity" : 0.03280425642591558,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 15.074113999229537,
    "generation" : 39,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530181086519115,
      "LackOfCohesion" : 0.48552951827600616,
      "MetricsIntensity" : 0.03280425642591558,
      "Density" : 3.0621957815035143
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "57d610f5-3818-49f6-bbe7-107cd0f465ff",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4847192808108807,
      "MetricsIntensity" : 0.03280651372026925,
      "Density" : 0.9971816100052845
    },
    "euclideanDistance" : 15.074185116233105,
    "generation" : 43,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.4847192808108807,
      "MetricsIntensity" : 0.03280651372026925,
      "Density" : 3.0583468395461915
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "2a6d42ba-1d34-4681-b1c2-c3214540d1ef",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4852535393363192,
      "MetricsIntensity" : 0.03279792378205905,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 16.069449065997578,
    "generation" : 46,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145307,
      "LackOfCohesion" : 0.4852535393363192,
      "MetricsIntensity" : 0.03279792378205905,
      "Density" : 3.05895078420768
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "c1e187c3-3039-48fe-a5d3-430581f47571",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.485002487779893,
      "MetricsIntensity" : 0.032782640091521494,
      "Density" : 0.9961247137572662
    },
    "euclideanDistance" : 16.06945094872528,
    "generation" : 32,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296482412060306,
      "LackOfCohesion" : 0.485002487779893,
      "MetricsIntensity" : 0.0327826400915215,
      "Density" : 3.05840995132504
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "57fae1dd-dace-45d4-aa15-4a17491e5b6e",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48584127820368744,
      "MetricsIntensity" : 0.03279703939189659,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 16.06953238483202,
    "generation" : 17,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291457286432162,
      "LackOfCohesion" : 0.48584127820368744,
      "MetricsIntensity" : 0.0327970393918966,
      "Density" : 3.0605405405405404
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "739d8e13-bb2c-4aed-bb48-41cd6b53b836",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48548224067770823,
      "MetricsIntensity" : 0.03278849722648291,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 17.06536859599211,
    "generation" : 11,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104632,
      "LackOfCohesion" : 0.48548224067770823,
      "MetricsIntensity" : 0.03278849722648291,
      "Density" : 3.0600324499729585
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "6fd9f7c6-6e11-4f5d-824c-ccb6a5cd195f",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48464715658118185,
      "MetricsIntensity" : 0.03279395571290034,
      "Density" : 0.9970054606306148
    },
    "euclideanDistance" : 17.065480799117246,
    "generation" : 36,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296184738955827,
      "LackOfCohesion" : 0.48464715658118185,
      "MetricsIntensity" : 0.032793955712900336,
      "Density" : 3.057806591031875
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "64dc5aae-07ca-4dec-8402-c7675f9d91fe",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4846222275369809,
      "MetricsIntensity" : 0.03284254392295492,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 17.065512421818482,
    "generation" : 28,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306532663316583,
      "LackOfCohesion" : 0.4846222275369809,
      "MetricsIntensity" : 0.03284254392295492,
      "Density" : 3.0605078336034572
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "400a5f9e-66ab-4894-be12-7b4ff71eeec0",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4857853300474084,
      "MetricsIntensity" : 0.0327869604826351,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 18.06170221410657,
    "generation" : 15,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52790346907994,
      "LackOfCohesion" : 0.4857853300474084,
      "MetricsIntensity" : 0.0327869604826351,
      "Density" : 3.0606060606060606
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5d3d3038-d48b-4cf6-9a4b-93e1ed8573fb",
    "objectives" : {
      "NumberOfConcerns" : 1.0029546946815495,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4857014294658706,
      "MetricsIntensity" : 0.032763448212504744,
      "Density" : 0.9991192531266514
    },
    "euclideanDistance" : 18.06214651484358,
    "generation" : 41,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5328650275965878,
      "LackOfCohesion" : 0.4857014294658706,
      "MetricsIntensity" : 0.032763448212504744,
      "Density" : 3.05933117583603
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "4875f87a-cfa0-4b92-87b2-5d76d91e758c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.485839190067641,
      "MetricsIntensity" : 0.03281603798428233,
      "Density" : 0.9881979918971288
    },
    "euclideanDistance" : 19.05807890587522,
    "generation" : 16,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972356,
      "LackOfCohesion" : 0.485839190067641,
      "MetricsIntensity" : 0.03281603798428232,
      "Density" : 3.0340724716062732
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "605c4230-84a6-48b7-90ff-48a611a83a2e",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4864020846096781,
      "MetricsIntensity" : 0.032806406368822205,
      "Density" : 0.9885502906464682
    },
    "euclideanDistance" : 19.058249281920613,
    "generation" : 39,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730287,
      "LackOfCohesion" : 0.4864020846096781,
      "MetricsIntensity" : 0.032806406368822205,
      "Density" : 3.0335135135135145
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "a5fc802e-bc39-4bd2-9933-f95163a68053",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48722104824485524,
      "MetricsIntensity" : 0.032798470883524666,
      "Density" : 0.9890787387704774
    },
    "euclideanDistance" : 19.05826313040177,
    "generation" : 18,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.48722104824485524,
      "MetricsIntensity" : 0.032798470883524666,
      "Density" : 3.0351351351351346
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "1d8da98d-2897-4f91-9fbf-8f21ad863f66",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48722104824485524,
      "MetricsIntensity" : 0.032798470883524666,
      "Density" : 0.9890787387704774
    },
    "euclideanDistance" : 19.05826313040177,
    "generation" : 14,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.48722104824485524,
      "MetricsIntensity" : 0.032798470883524666,
      "Density" : 3.035135135135135
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "3e9c4a9e-9944-4156-b0a7-c42ccee70da5",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48634701853038287,
      "MetricsIntensity" : 0.03280640636882221,
      "Density" : 0.988726440021138
    },
    "euclideanDistance" : 19.058274260165575,
    "generation" : 43,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437974,
      "LackOfCohesion" : 0.48634701853038287,
      "MetricsIntensity" : 0.03280640636882221,
      "Density" : 3.0340540540540544
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "cfa91cc6-cf4a-45d3-a594-8d74fa4ccc71",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48648335805403625,
      "MetricsIntensity" : 0.03279623733076158,
      "Density" : 0.9915448300158535
    },
    "euclideanDistance" : 19.058320755886744,
    "generation" : 21,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530417295123177,
      "LackOfCohesion" : 0.48648335805403625,
      "MetricsIntensity" : 0.03279623733076158,
      "Density" : 3.0459956709956706
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "c1ea237c-ff67-4f53-b512-be8d7d42d468",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4862858371756997,
      "MetricsIntensity" : 0.0327866394980255,
      "Density" : 0.9917209793905232
    },
    "euclideanDistance" : 19.058428253659613,
    "generation" : 45,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437978,
      "LackOfCohesion" : 0.4862858371756997,
      "MetricsIntensity" : 0.0327866394980255,
      "Density" : 3.044889129259059
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "a5f2d26a-6cef-4d57-955e-1945f6b9cc75",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4854464196475134,
      "MetricsIntensity" : 0.03280077446334897,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 19.058439170992955,
    "generation" : 31,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845068,
      "LackOfCohesion" : 0.4854464196475134,
      "MetricsIntensity" : 0.03280077446334897,
      "Density" : 3.0606060606060597
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5f25e4e6-d4ab-4eb2-8175-a08d79ecea6d",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4871047367627037,
      "MetricsIntensity" : 0.03277869602797377,
      "Density" : 0.9922494275145324
    },
    "euclideanDistance" : 19.058442171978566,
    "generation" : 37,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316582914572863,
      "LackOfCohesion" : 0.4871047367627037,
      "MetricsIntensity" : 0.03277869602797377,
      "Density" : 3.046511627906976
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "8bae9d48-0c58-423e-84b8-1a84d8d9a7c5",
    "objectives" : {
      "NumberOfConcerns" : 1.0016414970453054,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4860239554573203,
      "MetricsIntensity" : 0.03273893749670198,
      "Density" : 0.9978862075039634
    },
    "euclideanDistance" : 19.05876054981112,
    "generation" : 15,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5316265060240961,
      "LackOfCohesion" : 0.4860239554573203,
      "MetricsIntensity" : 0.03273893749670198,
      "Density" : 3.0588552915766734
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0341dde8-b4c2-44f0-b4aa-8a23c83aff52",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4868427107568761,
      "MetricsIntensity" : 0.0327309798859494,
      "Density" : 0.9984146556279725
    },
    "euclideanDistance" : 19.058774612579715,
    "generation" : 42,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5313912606730282,
      "LackOfCohesion" : 0.4868427107568761,
      "MetricsIntensity" : 0.0327309798859494,
      "Density" : 3.0604751619870405
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "cc6a2e5e-7246-4f81-baf0-8f0504a7ae0b",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48596888937802496,
      "MetricsIntensity" : 0.03273893749670199,
      "Density" : 0.9980623568786331
    },
    "euclideanDistance" : 19.05878562607536,
    "generation" : 30,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321285140562246,
      "LackOfCohesion" : 0.48596888937802496,
      "MetricsIntensity" : 0.032738937496701995,
      "Density" : 3.0593952483801297
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "dd34cc99-e34b-476b-b2f8-274a1bb8ad4c",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4854390267829778,
      "MetricsIntensity" : 0.03281007133326797,
      "Density" : 0.991192531266514
    },
    "euclideanDistance" : 20.05530489598033,
    "generation" : 34,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018113,
      "LackOfCohesion" : 0.4854390267829778,
      "MetricsIntensity" : 0.03281007133326797,
      "Density" : 3.0449134199134194
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "d007db4f-3f35-461a-adcf-c7b67fb71c9f",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4846201394009345,
      "MetricsIntensity" : 0.03286155466342736,
      "Density" : 0.9918971287651929
    },
    "euclideanDistance" : 20.05538540414585,
    "generation" : 31,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5304172951231774,
      "LackOfCohesion" : 0.4846201394009345,
      "MetricsIntensity" : 0.03286155466342736,
      "Density" : 3.043783783783785
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "358a4138-66bc-4acd-be88-803514f97d9a",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4843694368251889,
      "MetricsIntensity" : 0.03284623785875736,
      "Density" : 0.9917209793905232
    },
    "euclideanDistance" : 20.0553869729955,
    "generation" : 44,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5301507537688446,
      "LackOfCohesion" : 0.4843694368251889,
      "MetricsIntensity" : 0.03284623785875736,
      "Density" : 3.0432432432432432
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "ffb4a876-c9a4-49f7-bab3-35e98959e72b",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4857380785117336,
      "MetricsIntensity" : 0.03277120997074347,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 20.055497537200846,
    "generation" : 17,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274007038712918,
      "LackOfCohesion" : 0.4857380785117336,
      "MetricsIntensity" : 0.03277120997074347,
      "Density" : 3.058441558441559
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f0192641-e6c1-4714-9356-56d2fb1a901f",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4840373215083042,
      "MetricsIntensity" : 0.032850785181058835,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 20.055583145540655,
    "generation" : 6,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294117647058818,
      "LackOfCohesion" : 0.4840373215083042,
      "MetricsIntensity" : 0.03285078518105884,
      "Density" : 3.0589189189189185
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "9c107b33-9a1c-4f2d-9c7f-c8a2ec7aa59c",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4850327628521403,
      "MetricsIntensity" : 0.032765228634790096,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 20.055781805282496,
    "generation" : 17,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311244979919678,
      "LackOfCohesion" : 0.4850327628521403,
      "MetricsIntensity" : 0.0327652286347901,
      "Density" : 3.0566648677819748
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "49e360de-1559-4eee-8663-f6ceb08648c1",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 20.0,
      "LackOfCohesion" : 0.4850327628521403,
      "MetricsIntensity" : 0.032765228634790096,
      "Density" : 0.9977100581292936
    },
    "euclideanDistance" : 20.055781805282496,
    "generation" : 16,
    "numberOfRefactorings" : 20,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5311244979919678,
      "LackOfCohesion" : 0.4850327628521403,
      "MetricsIntensity" : 0.032765228634790096,
      "Density" : 3.0566648677819748
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "34b64297-4751-4a66-9a46-6535de2306d0",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48494872806641276,
      "MetricsIntensity" : 0.03285685708147477,
      "Density" : 0.9878456931477894
    },
    "euclideanDistance" : 21.052525113529803,
    "generation" : 44,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104634,
      "LackOfCohesion" : 0.48494872806641276,
      "MetricsIntensity" : 0.03285685708147476,
      "Density" : 3.0329908058409947
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "6a080ed2-4f88-4821-aeae-474c95a8b289",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4840299327192174,
      "MetricsIntensity" : 0.032860076901982484,
      "Density" : 0.9917209793905232
    },
    "euclideanDistance" : 21.052732898483068,
    "generation" : 29,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530417295123177,
      "LackOfCohesion" : 0.4840299327192174,
      "MetricsIntensity" : 0.03286007690198248,
      "Density" : 3.0432432432432437
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0c954ce6-2e0d-4220-8c08-12c9f5beffb1",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48430430611531733,
      "MetricsIntensity" : 0.03282628207960865,
      "Density" : 0.9957724150079267
    },
    "euclideanDistance" : 21.052852538735113,
    "generation" : 35,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.48430430611531733,
      "MetricsIntensity" : 0.03282628207960865,
      "Density" : 3.058982683982684
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "946c6339-4d90-406a-93dd-71c38f77eef5",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4851234679361516,
      "MetricsIntensity" : 0.03281834731196515,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 21.052865281804227,
    "generation" : 29,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528434826371414,
      "LackOfCohesion" : 0.4851234679361516,
      "MetricsIntensity" : 0.03281834731196515,
      "Density" : 3.0606060606060597
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "5b740e36-2c85-487e-baef-05591ec68632",
    "objectives" : {
      "NumberOfConcerns" : 1.0022980958634276,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48569934477748977,
      "MetricsIntensity" : 0.032782427564853105,
      "Density" : 0.9931301743878809
    },
    "euclideanDistance" : 21.052978116108072,
    "generation" : 40,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.532630522088353,
      "LackOfCohesion" : 0.48569934477748977,
      "MetricsIntensity" : 0.032782427564853105,
      "Density" : 3.0426335671883424
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0230ec10-e24c-46e0-9ec9-f25feddf1ee8",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4861188092743825,
      "MetricsIntensity" : 0.03273274437246739,
      "Density" : 0.9971816100052845
    },
    "euclideanDistance" : 21.05305435326617,
    "generation" : 15,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5301507537688446,
      "LackOfCohesion" : 0.4861188092743825,
      "MetricsIntensity" : 0.03273274437246739,
      "Density" : 3.058346839546193
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "bcd9cb55-91cc-4951-99c8-2db965fcaab7",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4850027191346346,
      "MetricsIntensity" : 0.03283556273049073,
      "Density" : 0.9910163818918443
    },
    "euclideanDistance" : 22.050331210991178,
    "generation" : 43,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531187122736418,
      "LackOfCohesion" : 0.4850027191346346,
      "MetricsIntensity" : 0.032835562730490736,
      "Density" : 3.044372294372294
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "4b2cb1e4-aa35-42e8-95e0-396a78617d73",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.484296910067656,
      "MetricsIntensity" : 0.03287915134400795,
      "Density" : 0.9918971287651929
    },
    "euclideanDistance" : 22.050340487695806,
    "generation" : 27,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5306841046277664,
      "LackOfCohesion" : 0.484296910067656,
      "MetricsIntensity" : 0.03287915134400795,
      "Density" : 3.043783783783786
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "e9cee68a-4c63-4b47-bc5c-6a43e09c1eeb",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4854154658023443,
      "MetricsIntensity" : 0.032788756819723,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 22.050442502181546,
    "generation" : 25,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527665995975855,
      "LackOfCohesion" : 0.4854154658023443,
      "MetricsIntensity" : 0.032788756819723,
      "Density" : 3.058441558441559
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "2958d6e0-7515-4e25-bbd3-d02322a0f87a",
    "objectives" : {
      "NumberOfConcerns" : 1.0013131976362442,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48596680354168825,
      "MetricsIntensity" : 0.032757927300235586,
      "Density" : 0.9920732781398626
    },
    "euclideanDistance" : 22.050489208289807,
    "generation" : 44,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5318935208437974,
      "LackOfCohesion" : 0.48596680354168825,
      "MetricsIntensity" : 0.032757927300235586,
      "Density" : 3.0426796326310104
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "23ae5d4b-181c-4721-814a-4389440348a1",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48678552735258535,
      "MetricsIntensity" : 0.032749968010791115,
      "Density" : 0.9926017262638718
    },
    "euclideanDistance" : 22.05050123071548,
    "generation" : 33,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531658291457286,
      "LackOfCohesion" : 0.48678552735258535,
      "MetricsIntensity" : 0.032749968010791115,
      "Density" : 3.0443003781739604
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "556b8a04-e292-4999-8cad-840d75c306b7",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4852703806794109,
      "MetricsIntensity" : 0.032854630880240064,
      "Density" : 0.991192531266514
    },
    "euclideanDistance" : 23.048146575738876,
    "generation" : 35,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5314544539506791,
      "LackOfCohesion" : 0.4852703806794109,
      "MetricsIntensity" : 0.032854630880240064,
      "Density" : 3.0449134199134194
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "511cc09d-bc74-4da1-a596-db6d8d83adc2",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4842570285170192,
      "MetricsIntensity" : 0.032810522880175975,
      "Density" : 0.9950678175092479
    },
    "euclideanDistance" : 23.04822109120202,
    "generation" : 35,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.4842570285170192,
      "MetricsIntensity" : 0.032810522880175975,
      "Density" : 3.0568181818181825
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0d817033-1074-4b26-a878-8fb7fa9be651",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4850761642464637,
      "MetricsIntensity" : 0.03280257941540258,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 23.04823272201902,
    "generation" : 28,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.4850761642464637,
      "MetricsIntensity" : 0.03280257941540258,
      "Density" : 3.058441558441559
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "da95dd7e-dd4a-488e-86df-ff72aa47e838",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.484755255551393,
      "MetricsIntensity" : 0.03281749495305587,
      "Density" : 0.9924255768892021
    },
    "euclideanDistance" : 23.048259951679256,
    "generation" : 41,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531658291457286,
      "LackOfCohesion" : 0.484755255551393,
      "MetricsIntensity" : 0.03281749495305588,
      "Density" : 3.042116630669546
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "91fc9815-b0eb-454f-afe2-378056ac4a8d",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4861241099274233,
      "MetricsIntensity" : 0.03274245122000025,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 23.048356206650922,
    "generation" : 42,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972351,
      "LackOfCohesion" : 0.4861241099274233,
      "MetricsIntensity" : 0.03274245122000025,
      "Density" : 3.057297297297298
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "a968e269-9499-4dbf-8c6f-2ea093b30d0b",
    "objectives" : {
      "NumberOfConcerns" : 1.0019697964543663,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48537724368946267,
      "MetricsIntensity" : 0.03279995160383659,
      "Density" : 0.9931301743878809
    },
    "euclideanDistance" : 23.048360417214134,
    "generation" : 42,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5328980411853341,
      "LackOfCohesion" : 0.48537724368946267,
      "MetricsIntensity" : 0.03279995160383659,
      "Density" : 3.0426335671883433
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "9bc6dd5a-7efb-4ed4-9a74-4ba97e2a73f3",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.483982681183542,
      "MetricsIntensity" : 0.032844326390090835,
      "Density" : 0.9973577593799542
    },
    "euclideanDistance" : 23.048385445823037,
    "generation" : 21,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529914529914531,
      "LackOfCohesion" : 0.483982681183542,
      "MetricsIntensity" : 0.032844326390090835,
      "Density" : 3.0605405405405404
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "1440bb23-54d1-4222-a160-8e899915fb04",
    "objectives" : {
      "NumberOfConcerns" : 1.0009848982271832,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.485705887411116,
      "MetricsIntensity" : 0.032795225257203194,
      "Density" : 0.9890787387704774
    },
    "euclideanDistance" : 24.046147992013857,
    "generation" : 44,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5321608040201,
      "LackOfCohesion" : 0.485705887411116,
      "MetricsIntensity" : 0.032795225257203194,
      "Density" : 3.031857451403888
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "fbda8dfb-380e-4833-9905-f2de6e7b66c4",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48452427853275704,
      "MetricsIntensity" : 0.03282958050124128,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 24.04621490905211,
    "generation" : 21,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528434826371414,
      "LackOfCohesion" : 0.48452427853275704,
      "MetricsIntensity" : 0.03282958050124129,
      "Density" : 3.057359307359308
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f8826572-3298-44b9-a1c3-7e9e59994e1b",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4842496356524831,
      "MetricsIntensity" : 0.032819819726152485,
      "Density" : 0.9963008631319359
    },
    "euclideanDistance" : 24.046293987790783,
    "generation" : 27,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529175050301811,
      "LackOfCohesion" : 0.4842496356524831,
      "MetricsIntensity" : 0.032819819726152485,
      "Density" : 3.0606060606060597
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "8d205fd1-4271-4591-80f9-af284b426295",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4853200701228209,
      "MetricsIntensity" : 0.032838041417129524,
      "Density" : 0.9869649462744408
    },
    "euclideanDistance" : 25.044109754851032,
    "generation" : 39,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289089994972351,
      "LackOfCohesion" : 0.4853200701228209,
      "MetricsIntensity" : 0.03283804141712952,
      "Density" : 3.0319264069264067
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "72d9d647-e31d-418b-825f-de38d40b057f",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4860780577914669,
      "MetricsIntensity" : 0.032810317956792144,
      "Density" : 0.9904879337678352
    },
    "euclideanDistance" : 25.044237337792662,
    "generation" : 20,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.4860780577914669,
      "MetricsIntensity" : 0.03281031795679215,
      "Density" : 3.044396318354087
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "56cb61e6-537f-4dae-867f-4db488ce28f2",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48561884869223176,
      "MetricsIntensity" : 0.03275296910364008,
      "Density" : 0.9968293112559451
    },
    "euclideanDistance" : 25.044571609412074,
    "generation" : 32,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5298844801607232,
      "LackOfCohesion" : 0.48561884869223176,
      "MetricsIntensity" : 0.03275296910364009,
      "Density" : 3.0572663425175586
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.extraInformation], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.getExtraInformation(), org.acegisecurity.AuthenticationException.clearExtraInformation()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "276b6adf-b3d9-45bd-b05d-8026362af317",
    "objectives" : {
      "NumberOfConcerns" : 0.9993434011818779,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4856034526086138,
      "MetricsIntensity" : 0.03283430063448232,
      "Density" : 0.9876695437731196
    },
    "euclideanDistance" : 26.042485810031003,
    "generation" : 39,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5304172951231774,
      "LackOfCohesion" : 0.4856034526086138,
      "MetricsIntensity" : 0.03283430063448231,
      "Density" : 3.0324499729583554
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "04bcfe26-2f67-4f55-add8-838c3e219048",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48491962050614185,
      "MetricsIntensity" : 0.032832082703151265,
      "Density" : 0.989959485643826
    },
    "euclideanDistance" : 26.042509653534008,
    "generation" : 33,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018111,
      "LackOfCohesion" : 0.48491962050614185,
      "MetricsIntensity" : 0.03283208270315127,
      "Density" : 3.042772062804548
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "8112f23e-f4af-4a38-a854-af2770e9fc2d",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.48603817305770447,
      "MetricsIntensity" : 0.0327852618874405,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 26.042668108322903,
    "generation" : 17,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271629778672033,
      "LackOfCohesion" : 0.48603817305770447,
      "MetricsIntensity" : 0.0327852618874405,
      "Density" : 3.057931781266919
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "31f9af6a-d19a-475d-aa41-7ecc0730663d",
    "objectives" : {
      "NumberOfConcerns" : 0.9996717005909389,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4846271099754239,
      "MetricsIntensity" : 0.032779274727203704,
      "Density" : 0.9966531618812753
    },
    "euclideanDistance" : 26.042822407539187,
    "generation" : 43,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5293822199899545,
      "LackOfCohesion" : 0.4846271099754239,
      "MetricsIntensity" : 0.0327792747272037,
      "Density" : 3.0550755939524836
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "6af0dfdf-5365-4bbd-8a4c-0e2a76a393dd",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48524855260360905,
      "MetricsIntensity" : 0.032870957502333646,
      "Density" : 0.9871410956491105
    },
    "euclideanDistance" : 27.040828450509576,
    "generation" : 43,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294413688978363,
      "LackOfCohesion" : 0.48524855260360905,
      "MetricsIntensity" : 0.032870957502333646,
      "Density" : 3.0324675324675314
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "1f9fea25-f64d-4a86-b68d-d4224d2e6957",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48581677107913857,
      "MetricsIntensity" : 0.03284770366761492,
      "Density" : 0.9874933943984499
    },
    "euclideanDistance" : 27.04083937709933,
    "generation" : 33,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528938097634625,
      "LackOfCohesion" : 0.48581677107913857,
      "MetricsIntensity" : 0.03284770366761492,
      "Density" : 3.033549783549784
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.model.JenkinsLocationConfiguration.adminAddress, jenkins.model.JenkinsLocationConfiguration.ORDINAL, jenkins.model.JenkinsLocationConfiguration.useSsl, jenkins.model.JenkinsLocationConfiguration.charset], extractedMethods=[jenkins.model.JenkinsLocationConfiguration.getAdminAddress(), jenkins.model.JenkinsLocationConfiguration.setAdminAddress(String), jenkins.model.JenkinsLocationConfiguration.getOrDie(), jenkins.model.JenkinsLocationConfiguration.get(), jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "1e8eda91-1e70-484f-9fea-a08c5cf0ebb9",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.484329085099831,
      "MetricsIntensity" : 0.032874176545037326,
      "Density" : 0.9910163818918443
    },
    "euclideanDistance" : 27.040990073822197,
    "generation" : 35,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530181086519115,
      "LackOfCohesion" : 0.484329085099831,
      "MetricsIntensity" : 0.032874176545037326,
      "Density" : 3.0427257977285023
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "30b91121-e212-4377-9b54-9e6e0f4fa0be",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48542355451885166,
      "MetricsIntensity" : 0.03283243948384171,
      "Density" : 0.995596265633257
    },
    "euclideanDistance" : 27.041093106140302,
    "generation" : 33,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281973816717016,
      "LackOfCohesion" : 0.48542355451885166,
      "MetricsIntensity" : 0.03283243948384171,
      "Density" : 3.0600974553329725
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "1d629efd-bbeb-4f65-89fd-1addc3ccf644",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48529428233843974,
      "MetricsIntensity" : 0.0327964753934108,
      "Density" : 0.9920732781398626
    },
    "euclideanDistance" : 27.04111885938202,
    "generation" : 43,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5308890005022604,
      "LackOfCohesion" : 0.48529428233843974,
      "MetricsIntensity" : 0.0327964753934108,
      "Density" : 3.0410367170626347
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "0b27cc5a-a190-48bc-afb6-4da8b436c7ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48576588911195095,
      "MetricsIntensity" : 0.03277225944332477,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 27.041136355629863,
    "generation" : 36,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276659959758552,
      "LackOfCohesion" : 0.48576588911195095,
      "MetricsIntensity" : 0.032772259443324764,
      "Density" : 3.057869118442401
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "4a02e26a-2cde-4374-a793-37490ebd946e",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48632790848768254,
      "MetricsIntensity" : 0.032791732242991097,
      "Density" : 0.9883741412717985
    },
    "euclideanDistance" : 28.03953971098974,
    "generation" : 44,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531658291457286,
      "LackOfCohesion" : 0.48632790848768254,
      "MetricsIntensity" : 0.032791732242991097,
      "Density" : 3.031334413830362
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "a3fd397c-2181-444b-b6ce-4c84dae873a1",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4848713640642757,
      "MetricsIntensity" : 0.03285945024977109,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 28.0396172464363,
    "generation" : 27,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5287009063444101,
      "LackOfCohesion" : 0.4848713640642757,
      "MetricsIntensity" : 0.03285945024977109,
      "Density" : 3.059014618299946
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "2adaec18-e123-4c40-86d4-e9a0833bdae6",
    "objectives" : {
      "NumberOfConcerns" : 1.0006565988181222,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48626669342426376,
      "MetricsIntensity" : 0.032771954481356516,
      "Density" : 0.9913686806411838
    },
    "euclideanDistance" : 28.03964434132232,
    "generation" : 44,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531658291457286,
      "LackOfCohesion" : 0.48626669342426376,
      "MetricsIntensity" : 0.032771954481356516,
      "Density" : 3.0421621621621613
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "b2601e07-a5e2-4321-a035-e3104692e152",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48708603389100086,
      "MetricsIntensity" : 0.032763998536946025,
      "Density" : 0.9918971287651929
    },
    "euclideanDistance" : 28.039653817372006,
    "generation" : 14,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5314228255404725,
      "LackOfCohesion" : 0.48708603389100086,
      "MetricsIntensity" : 0.03276399853694602,
      "Density" : 3.0437837837837853
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.parent, jenkins.security.apitoken.ApiTokenStats.LOGGER], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.removeId(String), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.save(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.readResolve()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "2b31a2bc-0234-49b8-8d83-e448ee7d2a78",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48492531330596594,
      "MetricsIntensity" : 0.03288857880809372,
      "Density" : 0.9871410956491105
    },
    "euclideanDistance" : 29.0379998599805,
    "generation" : 41,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529707955689828,
      "LackOfCohesion" : 0.48492531330596594,
      "MetricsIntensity" : 0.03288857880809372,
      "Density" : 3.0324675324675328
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "1fba7ab0-8b09-4c3c-b75b-6b833ef786f6",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48492531330596617,
      "MetricsIntensity" : 0.03288857880809371,
      "Density" : 0.9871410956491105
    },
    "euclideanDistance" : 29.0379998599805,
    "generation" : 26,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.529707955689828,
      "LackOfCohesion" : 0.48492531330596617,
      "MetricsIntensity" : 0.032888578808093705,
      "Density" : 3.0324675324675323
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "4e7de3ed-44cb-4d0e-99a1-d1e6b7b376a4",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48486396303533985,
      "MetricsIntensity" : 0.03286875736283318,
      "Density" : 0.9901356350184957
    },
    "euclideanDistance" : 29.03810076607975,
    "generation" : 34,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5297079556898283,
      "LackOfCohesion" : 0.48486396303533985,
      "MetricsIntensity" : 0.03286875736283318,
      "Density" : 3.043313481321061
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "3ae7e29a-af0f-4b0c-9f45-8a5156952ca3",
    "objectives" : {
      "NumberOfConcerns" : 0.9967170059093894,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48455647132157237,
      "MetricsIntensity" : 0.03282460295679666,
      "Density" : 0.994363220010569
    },
    "euclideanDistance" : 29.03821749749178,
    "generation" : 27,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.527931555108203,
      "LackOfCohesion" : 0.48455647132157237,
      "MetricsIntensity" : 0.03282460295679665,
      "Density" : 3.0563075257173797
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "1b5b9195-c6eb-4231-a77e-756ddf0f40aa",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48537622470895975,
      "MetricsIntensity" : 0.03281666288054439,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 29.038226749902854,
    "generation" : 35,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989926,
      "LackOfCohesion" : 0.48537622470895975,
      "MetricsIntensity" : 0.03281666288054439,
      "Density" : 3.0579317812669196
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "33039842-e4c3-4e3f-9c08-f583bc555816",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48537622470895975,
      "MetricsIntensity" : 0.03281666288054439,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 29.038226749902854,
    "generation" : 29,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989924,
      "LackOfCohesion" : 0.48537622470895975,
      "MetricsIntensity" : 0.0328166628805444,
      "Density" : 3.057931781266919
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "be653495-bf22-4965-9a60-f96f82215aff",
    "objectives" : {
      "NumberOfConcerns" : 1.000328299409061,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4849717806093508,
      "MetricsIntensity" : 0.03281401682736263,
      "Density" : 0.9920732781398626
    },
    "euclideanDistance" : 29.038270273614536,
    "generation" : 41,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.531155778894472,
      "LackOfCohesion" : 0.4849717806093508,
      "MetricsIntensity" : 0.03281401682736263,
      "Density" : 3.0410367170626347
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "80817ec6-43dc-4b21-9bfe-cdb600102154",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48467766530766543,
      "MetricsIntensity" : 0.032826863484913885,
      "Density" : 0.9873172450237802
    },
    "euclideanDistance" : 30.036758308308258,
    "generation" : 40,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5291750503018111,
      "LackOfCohesion" : 0.48467766530766543,
      "MetricsIntensity" : 0.03282686348491388,
      "Density" : 3.029729729729729
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "4e42fe9f-b302-4b76-9197-70fde1e195d9",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.485435716763758,
      "MetricsIntensity" : 0.03279911855581681,
      "Density" : 0.9908402325171746
    },
    "euclideanDistance" : 30.03686471806054,
    "generation" : 39,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528938097634625,
      "LackOfCohesion" : 0.485435716763758,
      "MetricsIntensity" : 0.03279911855581681,
      "Density" : 3.042184964845863
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "15e9d24d-c3d8-4630-bfa1-a243b25c09b5",
    "objectives" : {
      "NumberOfConcerns" : 0.9986868023637557,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48605835879217596,
      "MetricsIntensity" : 0.03278155631324376,
      "Density" : 0.9915448300158535
    },
    "euclideanDistance" : 30.036941652534015,
    "generation" : 39,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.530181086519115,
      "LackOfCohesion" : 0.48605835879217596,
      "MetricsIntensity" : 0.03278155631324376,
      "Density" : 3.042702702702703
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "f0b66dd3-15fa-4f43-a0a2-d6246d555a6b",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4848240342543837,
      "MetricsIntensity" : 0.032843673646473774,
      "Density" : 0.9945393693852387
    },
    "euclideanDistance" : 30.03694445283654,
    "generation" : 34,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281973816717014,
      "LackOfCohesion" : 0.4848240342543837,
      "MetricsIntensity" : 0.03284367364647378,
      "Density" : 3.0568489442338933
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='jenkins.model.GlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckAdminAddress(String)', targetType='hudson.util.FormValidation'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "9c145068-d1a0-4bda-b6a1-2eb453c85946",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48571121864911754,
      "MetricsIntensity" : 0.032765797113811085,
      "Density" : 0.9964770125066056
    },
    "euclideanDistance" : 30.037055606854068,
    "generation" : 42,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845068,
      "LackOfCohesion" : 0.48571121864911754,
      "MetricsIntensity" : 0.032765797113811085,
      "Density" : 3.059491617090319
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "393e32a7-5837-4ca5-89ac-1d22d4f6963c",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4848838310500511,
      "MetricsIntensity" : 0.032826118319417744,
      "Density" : 0.9904879337678352
    },
    "euclideanDistance" : 31.035667631293435,
    "generation" : 32,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5294413688978366,
      "LackOfCohesion" : 0.4848838310500511,
      "MetricsIntensity" : 0.032826118319417744,
      "Density" : 3.0411032990805844
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "7b068548-3408-45c1-a8ad-301fc968da79",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.4853958100185531,
      "MetricsIntensity" : 0.032774048658612324,
      "Density" : 0.9952439668839176
    },
    "euclideanDistance" : 31.03578554247837,
    "generation" : 26,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449926,
      "LackOfCohesion" : 0.4853958100185531,
      "MetricsIntensity" : 0.03277404865861233,
      "Density" : 3.0557057869118447
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "bca868df-e936-4a5c-86a2-8bb214009f69",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4845691051169211,
      "MetricsIntensity" : 0.032791304706128274,
      "Density" : 0.9959485643825965
    },
    "euclideanDistance" : 32.03471874575632,
    "generation" : 31,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.4845691051169211,
      "MetricsIntensity" : 0.032791304706128274,
      "Density" : 3.057869118442401
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.model.Nodes.isLegacy(), jenkins.model.Nodes.save(), jenkins.model.Nodes.persistNode(Node), jenkins.model.Nodes.getNodesDir(), jenkins.model.Nodes.setNodes(Collection<? extends Node>), jenkins.model.Nodes.load(), jenkins.model.Nodes.getNodes()]"
      } ]
    } ]
  }, {
    "solutionId" : "b84b9bbe-6afb-4d44-8b4b-ee1118164115",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 33.0,
      "LackOfCohesion" : 0.4860135544276882,
      "MetricsIntensity" : 0.032760834236066634,
      "Density" : 0.9954201162585873
    },
    "euclideanDistance" : 33.0336630993689,
    "generation" : 43,
    "numberOfRefactorings" : 33,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281690140845066,
      "LackOfCohesion" : 0.4860135544276882,
      "MetricsIntensity" : 0.03276083423606663,
      "Density" : 3.0562466197944835
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ResultTrend.getResultTrend(AbstractBuild<?,?>), hudson.model.ResultTrend.getResultTrend(Run<?,?>), hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>), hudson.model.ResultTrend.isFix(Run<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "ab8bd8cb-d993-4dba-a9ff-a16193fe6287",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.48530037256302555,
      "MetricsIntensity" : 0.03282336855263134,
      "Density" : 0.9866126475251012
    },
    "euclideanDistance" : 34.03241700835995,
    "generation" : 22,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.528672032193159,
      "LackOfCohesion" : 0.48530037256302555,
      "MetricsIntensity" : 0.03282336855263134,
      "Density" : 3.0292049756625206
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "19ed25da-2411-483c-9926-790f6903f227",
    "objectives" : {
      "NumberOfConcerns" : 0.9977019041365726,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4852390899705797,
      "MetricsIntensity" : 0.03280356897327846,
      "Density" : 0.9896071868944866
    },
    "euclideanDistance" : 34.03250305990501,
    "generation" : 43,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5286720321931588,
      "LackOfCohesion" : 0.4852390899705797,
      "MetricsIntensity" : 0.03280356897327846,
      "Density" : 3.04004329004329
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "b658d087-dca4-429f-8bf5-a97cdbc76893",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4860587676765438,
      "MetricsIntensity" : 0.03279562169476374,
      "Density" : 0.9901356350184957
    },
    "euclideanDistance" : 34.03251087702799,
    "generation" : 32,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5284348263714143,
      "LackOfCohesion" : 0.4860587676765438,
      "MetricsIntensity" : 0.03279562169476374,
      "Density" : 3.0416666666666665
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "23b6fb98-d4c0-47e7-9f64-59861d19b4c7",
    "objectives" : {
      "NumberOfConcerns" : 0.9990151017728168,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4858614971504667,
      "MetricsIntensity" : 0.0327860139588339,
      "Density" : 0.9903117843931654
    },
    "euclideanDistance" : 34.03257094198149,
    "generation" : 43,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299145299145305,
      "LackOfCohesion" : 0.4858614971504667,
      "MetricsIntensity" : 0.0327860139588339,
      "Density" : 3.0405624661979442
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "45da1d71-b5d6-4a40-a9c5-88d8b215ca96",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 34.0,
      "LackOfCohesion" : 0.4866810660475363,
      "MetricsIntensity" : 0.03277806138096124,
      "Density" : 0.9908402325171746
    },
    "euclideanDistance" : 34.032578758127535,
    "generation" : 39,
    "numberOfRefactorings" : 34,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104632,
      "LackOfCohesion" : 0.4866810660475363,
      "MetricsIntensity" : 0.03277806138096124,
      "Density" : 3.042184964845863
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "51d39059-78e8-4e7d-98f0-276ff87e15b3",
    "objectives" : {
      "NumberOfConcerns" : 0.9983585029546946,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4846485545642689,
      "MetricsIntensity" : 0.03284566281516454,
      "Density" : 0.9906640831425049
    },
    "euclideanDistance" : 35.03161569332847,
    "generation" : 42,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5296780684104632,
      "LackOfCohesion" : 0.4846485545642689,
      "MetricsIntensity" : 0.03284566281516454,
      "Density" : 3.0400000000000005
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.constructFile(String), hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "14651599-2582-4697-ae5d-40b2823b81e2",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48601886093133917,
      "MetricsIntensity" : 0.03277055179755925,
      "Density" : 0.9945393693852387
    },
    "euclideanDistance" : 35.03167899393459,
    "generation" : 18,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5269250125817817,
      "LackOfCohesion" : 0.48601886093133917,
      "MetricsIntensity" : 0.03277055179755925,
      "Density" : 3.055194805194806
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.queue.WorkUnitContext.task, hudson.model.queue.WorkUnitContext.LOGGER, hudson.model.queue.WorkUnitContext.future], extractedMethods=[hudson.model.queue.WorkUnitContext.synchronizeStart(), hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long), hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "671c588a-c495-4628-aa60-95044078a893",
    "objectives" : {
      "NumberOfConcerns" : 0.9980302035456337,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48642011212122105,
      "MetricsIntensity" : 0.032815429290141716,
      "Density" : 0.9878456931477894
    },
    "euclideanDistance" : 36.03067560813335,
    "generation" : 44,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5299446401610464,
      "LackOfCohesion" : 0.48642011212122105,
      "MetricsIntensity" : 0.032815429290141716,
      "Density" : 3.0313513513513515
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[org.acegisecurity.AuthenticationException.authentication], extractedMethods=[org.acegisecurity.AuthenticationException.getAuthentication(), org.acegisecurity.AuthenticationException.setAuthentication(Authentication), org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "48149306-87a9-40a0-92b9-576d328922c6",
    "objectives" : {
      "NumberOfConcerns" : 0.9973736047275115,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48491602383886623,
      "MetricsIntensity" : 0.032821143364118635,
      "Density" : 0.9896071868944866
    },
    "euclideanDistance" : 36.03068549541332,
    "generation" : 42,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5289380976346245,
      "LackOfCohesion" : 0.48491602383886623,
      "MetricsIntensity" : 0.03282114336411864,
      "Density" : 3.0400432900432905
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "c94f83e2-4833-4e3f-af6f-bf20ea8e93bb",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48519118633872393,
      "MetricsIntensity" : 0.03283090373883577,
      "Density" : 0.9948916681345781
    },
    "euclideanDistance" : 36.03080748805536,
    "generation" : 42,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5281973816717014,
      "LackOfCohesion" : 0.48519118633872393,
      "MetricsIntensity" : 0.03283090373883577,
      "Density" : 3.0562770562770574
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "e814d789-05d8-48cb-96ad-422130c4c439",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48524513558041443,
      "MetricsIntensity" : 0.03286003229715839,
      "Density" : 0.9867887968997711
    },
    "euclideanDistance" : 37.02977712725087,
    "generation" : 43,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5292044310171193,
      "LackOfCohesion" : 0.48524513558041443,
      "MetricsIntensity" : 0.03286003229715839,
      "Density" : 3.02974580854516
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.cli.DeleteNodeCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.constructFile(String)', targetType='hudson.logging.LogRecorder.SetLevel'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "3282846e-dd1d-4863-a4d5-7bc0d6d2fa34",
    "objectives" : {
      "NumberOfConcerns" : 0.9970453053184505,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4851837853097879,
      "MetricsIntensity" : 0.032840210851897825,
      "Density" : 0.9897833362691563
    },
    "euclideanDistance" : 37.029856226815006,
    "generation" : 40,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5292044310171191,
      "LackOfCohesion" : 0.4851837853097879,
      "MetricsIntensity" : 0.03284021085189783,
      "Density" : 3.0405844155844153
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.listeners.SaveableListener'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getDescription()', targetType='hudson.security.AccessDeniedHandlerImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getID()', targetType='hudson.model.ListView'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.JobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='org.acegisecurity.CredentialsExpiredException'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "60ea0c34-cbb5-4a96-a6b5-db4f246130ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9963887065003283,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4848761170936617,
      "MetricsIntensity" : 0.03279607349086983,
      "Density" : 0.9940109212612295
    },
    "euclideanDistance" : 37.02994772609586,
    "generation" : 42,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5274282838449926,
      "LackOfCohesion" : 0.4848761170936617,
      "MetricsIntensity" : 0.03279607349086983,
      "Density" : 3.0535714285714284
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey), hudson.util.HistoricalSecrets.getLegacyKey()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "12ff38e6-2d8f-4328-81dc-0111dc326fad",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4856960469834076,
      "MetricsIntensity" : 0.03278811766118526,
      "Density" : 0.9945393693852387
    },
    "euclideanDistance" : 37.02995499184737,
    "generation" : 25,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271903323262834,
      "LackOfCohesion" : 0.4856960469834076,
      "MetricsIntensity" : 0.03278811766118526,
      "Density" : 3.055194805194807
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "a63f6281-1f52-4c50-99f8-381c01b276dd",
    "objectives" : {
      "NumberOfConcerns" : 0.9957321076822062,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4856960469834079,
      "MetricsIntensity" : 0.032788117661185244,
      "Density" : 0.9945393693852387
    },
    "euclideanDistance" : 37.02995499184737,
    "generation" : 26,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271903323262834,
      "LackOfCohesion" : 0.4856960469834079,
      "MetricsIntensity" : 0.03278811766118525,
      "Density" : 3.055194805194806
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  }, {
    "solutionId" : "54dab52b-9f72-4c23-a0df-88efe3a00cce",
    "objectives" : {
      "NumberOfConcerns" : 0.9960604070912672,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.48514385652883174,
      "MetricsIntensity" : 0.03281512713553845,
      "Density" : 0.9941870706358993
    },
    "euclideanDistance" : 38.02915967596564,
    "generation" : 15,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5276938569989922,
      "LackOfCohesion" : 0.48514385652883174,
      "MetricsIntensity" : 0.03281512713553845,
      "Density" : 3.0541125541125544
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.model.JenkinsLocationConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.get()', targetType='hudson.model.Cause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.getUrl()', targetType='hudson.util.FormValidation.CheckMethod'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.setUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.isInvalidRootUrl(String)', targetType='hudson.console.ConsoleAnnotatorFactory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.doCheckUrl(String)', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.updateSecureSessionFlag()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.preventRootUrlBeingInvalid()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.JenkinsLocationConfiguration.load()', targetType='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.LOGGER', targetTypeName='hudson.model.queue.Timeline'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.model.JenkinsLocationConfiguration.hudsonUrl', targetTypeName='hudson.model.queue.Timeline'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.HistoricalSecrets",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.getLegacyKey()', targetType='hudson.cli.GroovyCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.HistoricalSecrets.decrypt(String, CryptoConfidentialKey)', targetType='hudson.util.EncodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ResultTrend",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getPreviousNonAbortedBuild(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.isFix(Run<?,?>)', targetType='hudson.model.Result'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ResultTrend.getResultTrend(Run<?,?>)', targetType='hudson.model.Result'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.WorkUnitContext",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeStart()', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Executor, Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.WorkUnitContext.synchronizeEnd(Queue.Executable, Throwable, long)', targetType='jenkins.model.Uptime'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.BasicApiTokenHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(String, String)', targetType='jenkins.security.ApiTokenProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='jenkins.security.AcegiSecurityExceptionFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.getExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.clearExtraInformation()', targetType='hudson.WebAppMain.JenkinsJVMAccess'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.Util'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='jenkins.model.BuildDiscarderDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.security.AuthenticationProcessingFilter2'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.slaves.SlaveComputer.LowPermissionResponse'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeId(String)', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.PluginManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='hudson.PluginManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.persistNode(Node)', targetType='hudson.util.io.TarArchiver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='hudson.MarkupText.Tag'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.load()', targetType='jenkins.model.CoreEnvironmentContributor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.model.CoreEnvironmentContributor'"
      } ]
    } ]
  } ]
}