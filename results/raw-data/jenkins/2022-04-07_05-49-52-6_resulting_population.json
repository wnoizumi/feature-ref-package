{
  "executionId" : "aad10379-0a03-4ba2-85e2-61b6e16533af",
  "computingTime" : 3891292,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 37,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.0465619924201404,
    "meanNumConcerns" : 1.5297079556898283,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.4853503005035552
  },
  "population" : [ {
    "solutionId" : "f8b876fa-6d9d-4280-8292-3cfd82015756",
    "objectives" : {
      "NumberOfConcerns" : 0.9993416721527321,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48574943580315594,
      "MetricsIntensity" : 0.032935129841919805,
      "Density" : 0.9969788519637462
    },
    "euclideanDistance" : 12.092546789081478,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5271629778672033,
      "LackOfCohesion" : 0.48574943580315594,
      "MetricsIntensity" : 0.032935129841919805,
      "Density" : 3.0357142857142865
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.toSpring()', targetType='hudson.slaves.SlaveComputer.LogHolder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.configure(StaplerRequest, JSONObject), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ClockDifference.toString()', targetType='hudson.triggers.SCMTrigger.SCMTriggerCause'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "6d899878-b7b9-401e-9fd3-99c8bbd02325",
    "objectives" : {
      "NumberOfConcerns" : 0.999012508229098,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48564290125784587,
      "MetricsIntensity" : 0.032935928035137826,
      "Density" : 0.9962679936022747
    },
    "euclideanDistance" : 14.079329164046566,
    "generation" : 1,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5266599597585517,
      "LackOfCohesion" : 0.48564290125784587,
      "MetricsIntensity" : 0.032935928035137826,
      "Density" : 3.035192203573362
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.toSpring()', targetType='hudson.slaves.SlaveComputer.LogHolder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.configure(StaplerRequest, JSONObject), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ClockDifference.toString()', targetType='hudson.triggers.SCMTrigger.SCMTriggerCause'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "94ab72f7-d0d4-41bc-a16a-fadf0aea90af",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4855529922393652,
      "MetricsIntensity" : 0.03297522560039505,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 15.074031091247994,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5261569416498997,
      "LackOfCohesion" : 0.4855529922393652,
      "MetricsIntensity" : 0.03297522560039504,
      "Density" : 3.033008658008658
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.isAccountNonExpired()', targetType='hudson.cli.handlers.AbstractProjectOptionHandler'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.configure(StaplerRequest, JSONObject), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ClockDifference.toString()', targetType='hudson.triggers.SCMTrigger.SCMTriggerCause'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "55b1a8cf-2d6f-4df8-9215-0ff855a6cf3b",
    "objectives" : {
      "NumberOfConcerns" : 0.999012508229098,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.485641160184676,
      "MetricsIntensity" : 0.032935928035137806,
      "Density" : 0.9962679936022747
    },
    "euclideanDistance" : 15.074067401285411,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5266599597585517,
      "LackOfCohesion" : 0.485641160184676,
      "MetricsIntensity" : 0.03293592803513781,
      "Density" : 3.035192203573362
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.toSpring()', targetType='hudson.slaves.SlaveComputer.LogHolder'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.configure(StaplerRequest, JSONObject), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ClockDifference.toString()', targetType='hudson.triggers.SCMTrigger.SCMTriggerCause'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "96e90dc4-8f0c-4ed0-ab79-0503da7925c4",
    "objectives" : {
      "NumberOfConcerns" : 0.999012508229098,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48666044800642755,
      "MetricsIntensity" : 0.032916852210503465,
      "Density" : 0.9971565665541141
    },
    "euclideanDistance" : 15.074158985516684,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52589240824535,
      "LackOfCohesion" : 0.48666044800642755,
      "MetricsIntensity" : 0.032916852210503465,
      "Density" : 3.0395449620801736
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "0486dd14-e6f1-429a-91d4-746b0f03fdc7",
    "objectives" : {
      "NumberOfConcerns" : 0.9993416721527321,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4866644872961816,
      "MetricsIntensity" : 0.0329151162071036,
      "Density" : 0.9971565665541141
    },
    "euclideanDistance" : 15.074180930451684,
    "generation" : 1,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.526395173453997,
      "LackOfCohesion" : 0.4866644872961816,
      "MetricsIntensity" : 0.03291511620710359,
      "Density" : 3.0395449620801736
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "1d99c56a-cf3a-4efb-be5f-21da77d3f4f8",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48555109288681664,
      "MetricsIntensity" : 0.03297522560039504,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 16.069424740650863,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5261569416498995,
      "LackOfCohesion" : 0.48555109288681664,
      "MetricsIntensity" : 0.03297522560039504,
      "Density" : 3.0330086580086584
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.isAccountNonExpired()', targetType='hudson.cli.handlers.AbstractProjectOptionHandler'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.configure(StaplerRequest, JSONObject), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ClockDifference.toString()', targetType='hudson.triggers.SCMTrigger.SCMTriggerCause'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.isLegacy()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "9beca963-16f1-41ad-a362-37442ed713f3",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4865284833846673,
      "MetricsIntensity" : 0.03291867799588983,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 16.069433733580453,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280544,
      "LackOfCohesion" : 0.4865284833846673,
      "MetricsIntensity" : 0.03291867799588983,
      "Density" : 3.0362946912242683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "629637da-5e82-4850-94d7-8517f2cd93a8",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48652848338466737,
      "MetricsIntensity" : 0.03291867799588982,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 16.069433733580453,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280549,
      "LackOfCohesion" : 0.48652848338466737,
      "MetricsIntensity" : 0.03291867799588982,
      "Density" : 3.0362946912242683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "bdbdce3d-74f3-46dd-a849-e86bd8ce816a",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48659950845569244,
      "MetricsIntensity" : 0.03291685221050346,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 16.069457916172848,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280544,
      "LackOfCohesion" : 0.48659950845569244,
      "MetricsIntensity" : 0.032916852210503465,
      "Density" : 3.037378114842904
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "a6efc93a-fc47-4bfe-9d1c-64563120ecf8",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48643655472131003,
      "MetricsIntensity" : 0.03291867799588982,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 16.069473439808124,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367007,
      "LackOfCohesion" : 0.48643655472131003,
      "MetricsIntensity" : 0.03291867799588982,
      "Density" : 3.035733622089875
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "56182e5b-d3bb-4306-b68d-39df40de3076",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48652848338466737,
      "MetricsIntensity" : 0.032916310466775935,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 16.069476217979478,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367018,
      "LackOfCohesion" : 0.48652848338466737,
      "MetricsIntensity" : 0.032916310466775935,
      "Density" : 3.0373781148429044
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "42c4d062-8df9-40e8-afd2-62ad27334fc2",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48652848338466753,
      "MetricsIntensity" : 0.03291631046677593,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 16.069476217979478,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367018,
      "LackOfCohesion" : 0.48652848338466753,
      "MetricsIntensity" : 0.03291631046677593,
      "Density" : 3.037378114842904
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "87db9d83-df81-4e8e-af97-3a00cd22e53d",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48655765305669413,
      "MetricsIntensity" : 0.032915269109985226,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 16.069477099030237,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367004,
      "LackOfCohesion" : 0.48655765305669413,
      "MetricsIntensity" : 0.03291526910998522,
      "Density" : 3.0373781148429044
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "6269c95c-cd13-41c1-aae7-cf8a4c77edc7",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4864785440490138,
      "MetricsIntensity" : 0.032917893567294146,
      "Density" : 0.9968011373733784
    },
    "euclideanDistance" : 16.069496752891762,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367015,
      "LackOfCohesion" : 0.4864785440490138,
      "MetricsIntensity" : 0.032917893567294146,
      "Density" : 3.0368164591229014
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "d4449133-91f8-4d33-a3a8-be1b0de73db4",
    "objectives" : {
      "NumberOfConcerns" : 0.999012508229098,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4866037376807009,
      "MetricsIntensity" : 0.03291274867798969,
      "Density" : 0.9968011373733784
    },
    "euclideanDistance" : 16.069520993035773,
    "generation" : 1,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5258924082453498,
      "LackOfCohesion" : 0.4866037376807009,
      "MetricsIntensity" : 0.032912748677989684,
      "Density" : 3.038461538461538
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "f79102c8-2d73-44dc-b935-12f40752e442",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48564302155017386,
      "MetricsIntensity" : 0.03293720802426218,
      "Density" : 0.9957348498311711
    },
    "euclideanDistance" : 17.06531959749676,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5256539235412474,
      "LackOfCohesion" : 0.48564302155017386,
      "MetricsIntensity" : 0.03293720802426218,
      "Density" : 3.0335679480238227
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.autoComplete(String)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.toSpring()', targetType='hudson.slaves.SlaveComputer.LogHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.isAccountNonExpired()', targetType='hudson.cli.handlers.AbstractProjectOptionHandler'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getUrl()', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.configure(StaplerRequest, JSONObject), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.marshal(Object, HierarchicalStreamWriter, MarshallingContext)', targetType='jenkins.util.xstream.XStreamDOM'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)', targetType='hudson.security.ACL'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ClockDifference.toString()', targetType='hudson.triggers.SCMTrigger.SCMTriggerCause'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "9900f519-143b-4437-91c9-711d4d5ff729",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4865270101689081,
      "MetricsIntensity" : 0.03291867799588983,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 17.065365483470103,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280549,
      "LackOfCohesion" : 0.4865270101689081,
      "MetricsIntensity" : 0.03291867799588983,
      "Density" : 3.036294691224268
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "e99ad0a7-b46f-49b3-9901-f7c159af4a0c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48647693690454935,
      "MetricsIntensity" : 0.032920261096408075,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 17.06538480880499,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280547,
      "LackOfCohesion" : 0.48647693690454935,
      "MetricsIntensity" : 0.03292026109640807,
      "Density" : 3.0357336220898756
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "480461d3-556b-4338-81bd-930a1956c86b",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48656886556790646,
      "MetricsIntensity" : 0.03291789356729417,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 17.065387425063584,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280558,
      "LackOfCohesion" : 0.48656886556790646,
      "MetricsIntensity" : 0.03291789356729416,
      "Density" : 3.0373781148429044
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "7e508b19-d845-477e-a304-d83331673505",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4865976091031437,
      "MetricsIntensity" : 0.03291685221050346,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 17.065388242615686,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280549,
      "LackOfCohesion" : 0.4865976091031437,
      "MetricsIntensity" : 0.03291685221050346,
      "Density" : 3.0373781148429035
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "167401b4-115c-45e4-947e-4252b7dc7c08",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48652394588012987,
      "MetricsIntensity" : 0.032917320671867756,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 17.065405403080337,
    "generation" : 1,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367015,
      "LackOfCohesion" : 0.48652394588012987,
      "MetricsIntensity" : 0.032917320671867756,
      "Density" : 3.037378114842904
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "1b42957d-7047-4eca-8be4-d0ca2e4ea366",
    "objectives" : {
      "NumberOfConcerns" : 0.9980250164581962,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4865669662153579,
      "MetricsIntensity" : 0.032920261096408075,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 18.061729732603716,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.524384112619406,
      "LackOfCohesion" : 0.4865669662153579,
      "MetricsIntensity" : 0.032920261096408075,
      "Density" : 3.036294691224268
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "3a0685f0-2d83-46fe-8605-ede831512bde",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4865222048069604,
      "MetricsIntensity" : 0.032919688200981664,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 18.061746717166347,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280547,
      "LackOfCohesion" : 0.4865222048069604,
      "MetricsIntensity" : 0.032919688200981664,
      "Density" : 3.036294691224268
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "66c0eb37-353d-440e-9bc9-5d6dcb84eb7c",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4865252690957387,
      "MetricsIntensity" : 0.032918677995889836,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 18.061746797866963,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280544,
      "LackOfCohesion" : 0.4865252690957387,
      "MetricsIntensity" : 0.03291867799588983,
      "Density" : 3.0362946912242683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "ff7da5a4-086d-4091-a411-ed67d6808a0e",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48652220480696007,
      "MetricsIntensity" : 0.03291732067186775,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 18.061784515305764,
    "generation" : 1,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.525389643036701,
      "LackOfCohesion" : 0.48652220480696007,
      "MetricsIntensity" : 0.03291732067186775,
      "Density" : 3.037378114842904
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "a73a0f91-44a3-40a4-86b0-4ddec01b5125",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4865201155191569,
      "MetricsIntensity" : 0.032919688200981644,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 19.058507088492107,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280555,
      "LackOfCohesion" : 0.4865201155191569,
      "MetricsIntensity" : 0.03291968820098165,
      "Density" : 3.036294691224268
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "e916e8fb-2eac-43e0-9418-606d8aaeff66",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4865201155191567,
      "MetricsIntensity" : 0.032919688200981664,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 19.058507088492107,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280547,
      "LackOfCohesion" : 0.4865201155191567,
      "MetricsIntensity" : 0.03291968820098167,
      "Density" : 3.0362946912242683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "d3056259-6b01-482f-8447-bfafb3a08c30",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48643171965154,
      "MetricsIntensity" : 0.032919688200981664,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 19.058540657545713,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367013,
      "LackOfCohesion" : 0.48643171965154,
      "MetricsIntensity" : 0.032919688200981664,
      "Density" : 3.035733622089875
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "2413ea0f-a95d-4e3b-adc9-dd107319742e",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4863371538858322,
      "MetricsIntensity" : 0.03289061271654932,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 21.052961071682763,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367018,
      "LackOfCohesion" : 0.4863371538858322,
      "MetricsIntensity" : 0.03289061271654932,
      "Density" : 3.036294691224268
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.security.QueueItemAuthenticatorConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "1cf1a128-d775-4e34-bb44-ef3766826c71",
    "objectives" : {
      "NumberOfConcerns" : 0.999012508229098,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.4862762353184202,
      "MetricsIntensity" : 0.032891622921641155,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 21.052992102712327,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52589240824535,
      "LackOfCohesion" : 0.4862762353184202,
      "MetricsIntensity" : 0.032891622921641155,
      "Density" : 3.037378114842905
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "c52c92d2-d67f-46c3-b754-bff255b30631",
    "objectives" : {
      "NumberOfConcerns" : 0.999012508229098,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48633013894375243,
      "MetricsIntensity" : 0.03289162292164115,
      "Density" : 0.9964457081926427
    },
    "euclideanDistance" : 21.052993347832444,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.52589240824535,
      "LackOfCohesion" : 0.48633013894375243,
      "MetricsIntensity" : 0.03289162292164114,
      "Density" : 3.0373781148429044
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.security.QueueItemAuthenticatorConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "2457e36d-705a-4728-acc1-93217bc4deb7",
    "objectives" : {
      "NumberOfConcerns" : 0.999670836076366,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48633752109399186,
      "MetricsIntensity" : 0.03288751874034435,
      "Density" : 0.9968011373733784
    },
    "euclideanDistance" : 21.05304158693663,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5268979386626451,
      "LackOfCohesion" : 0.48633752109399186,
      "MetricsIntensity" : 0.03288751874034435,
      "Density" : 3.0384615384615374
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.unescape(String)', targetType='jenkins.security.QueueItemAuthenticatorConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "66634364-f0be-489d-b1de-ccf973edfae7",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4862455924306346,
      "MetricsIntensity" : 0.032895031807545765,
      "Density" : 0.9960902790119068
    },
    "euclideanDistance" : 22.050557388089103,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367015,
      "LackOfCohesion" : 0.4862455924306346,
      "MetricsIntensity" : 0.032895031807545765,
      "Density" : 3.0362946912242683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "8f2e7486-e9eb-45c4-bdbf-06f271089eb6",
    "objectives" : {
      "NumberOfConcerns" : 0.9983541803818301,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48662162443931967,
      "MetricsIntensity" : 0.032902564288331874,
      "Density" : 0.995912564421539
    },
    "euclideanDistance" : 23.048349964575927,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5248868778280544,
      "LackOfCohesion" : 0.48662162443931967,
      "MetricsIntensity" : 0.032902564288331874,
      "Density" : 3.0341093665403363
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "4ade888e-e958-41a3-98c6-0049969671d4",
    "objectives" : {
      "NumberOfConcerns" : 0.9980250164581962,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4865484993661945,
      "MetricsIntensity" : 0.03289896077762997,
      "Density" : 0.9950239914696997
    },
    "euclideanDistance" : 24.04628741533571,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5243841126194055,
      "LackOfCohesion" : 0.4865484993661945,
      "MetricsIntensity" : 0.03289896077762997,
      "Density" : 3.0330444203683644
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.doTrim()', targetType='hudson.util.AWTProblem'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  }, {
    "solutionId" : "789c51bc-34dd-460f-b862-6f306223e0b3",
    "objectives" : {
      "NumberOfConcerns" : 0.9986833443054641,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48613774538401183,
      "MetricsIntensity" : 0.03289231715950162,
      "Density" : 0.9955571352408032
    },
    "euclideanDistance" : 24.046328498208148,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5253896430367009,
      "LackOfCohesion" : 0.48613774538401183,
      "MetricsIntensity" : 0.03289231715950162,
      "Density" : 3.034669555796317
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.CryptoConfidentialKey",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.CryptoConfidentialKey.ALGORITHM, jenkins.security.CryptoConfidentialKey.DEFAULT_IV_LENGTH, jenkins.security.CryptoConfidentialKey.KEY_ALGORITHM], extractedMethods=[jenkins.security.CryptoConfidentialKey.newIv(), jenkins.security.CryptoConfidentialKey.encrypt(), jenkins.security.CryptoConfidentialKey.encrypt(byte[]), jenkins.security.CryptoConfidentialKey.decrypt(), jenkins.security.CryptoConfidentialKey.decrypt(byte[])]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.labels.LabelExpression",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.labels.LabelExpression.paren(LabelOperatorPrecedence, Label)', targetType='hudson.model.Label'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.userdetails.UserDetails",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.userdetails.UserDetails.fromSpring(org.springframework.security.core.userdetails.UserDetails)', targetType='org.acegisecurity.userdetails.UserDetailsSpringImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.StringParameterValue",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.getValue()', targetType='hudson.model.BuildAuthorizationToken.ConverterImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.buildEnvironment(Run<?,?>, EnvVars)', targetType='hudson.cli.FullDuplexHttpStream'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.StringParameterValue.toString()', targetType='jenkins.util.InterceptingScheduledExecutorService'"
      } ]
    }, {
      "refactoredTypeName" : "org.jenkins.ui.icon.Icon",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getClassSpec()', targetType='hudson.triggers.TimerTrigger.TimerTriggerCause'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getNormalizedSelector()', targetType='org.acegisecurity.userdetails.UsernameNotFoundException'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconSizeClass(String)', targetType='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='org.jenkins.ui.icon.Icon.iconDims', targetTypeName='jenkins.security.ResourceDomainRootAction'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.isSvgSprite()', targetType='jenkins.slaves.IOHubProvider'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.getQualifiedUrl(JellyContext)', targetType='jenkins.model.AssetManager'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.jenkins.ui.icon.Icon.toNormalizedIconUrl(String)', targetType='jenkins.model.AssetManager'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.util.xstream.XStreamDOM.ConverterImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.util.xstream.XStreamDOM.ConverterImpl.canConvert(Class)', targetType='jenkins.model.OptionalJobProperty'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.toSpring(), org.acegisecurity.Authentication.getAuthorities(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.getPrincipal()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ClockDifference",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.util.ClockDifference.diff], extractedMethods=[hudson.util.ClockDifference.toHtml(), hudson.util.ClockDifference.abs(), hudson.util.ClockDifference.toString(), hudson.util.ClockDifference.isDangerous()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.model.Nodes",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.save()', targetType='hudson.triggers.TimerTrigger.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodesDir()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.setNodes(Collection<? extends Node>)', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.model.Nodes.getNodes()', targetType='jenkins.security.s2m.AdminFilePathFilter'"
      } ]
    } ]
  } ]
}