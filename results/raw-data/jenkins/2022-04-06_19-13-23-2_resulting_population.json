{
  "executionId" : "886951b2-be46-4a72-a968-21298060c71d",
  "computingTime" : 721951,
  "maxEvaluations" : 10240,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 128,
  "algorithm" : "NSGAII",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.077711818672422,
    "meanNumConcerns" : 1.5644511581067468,
    "meanMetricsIntensity" : 0.03296937024300845,
    "meanLackOfCohesion" : 0.485350300503555
  },
  "population" : [ {
    "solutionId" : "cf23feb9-2793-4eab-8a95-b21773ebf60f",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48585239053363255,
      "MetricsIntensity" : 0.03285960882363935,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 10.111408978393923,
    "generation" : 6,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5624686402408428,
      "LackOfCohesion" : 0.48585239053363255,
      "MetricsIntensity" : 0.03285960882363935,
      "Density" : 3.066164604626143
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b43f379c-1d83-464b-90c7-9c4bc6535547",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.48585239053363266,
      "MetricsIntensity" : 0.032859608823639336,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 10.111408978393923,
    "generation" : 7,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5624686402408428,
      "LackOfCohesion" : 0.48585239053363266,
      "MetricsIntensity" : 0.032859608823639336,
      "Density" : 3.0661646046261426
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "452eda95-06e4-4d04-a81a-34dbc88d9762",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4858982284507578,
      "MetricsIntensity" : 0.03285902174270168,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 10.111460420398192,
    "generation" : 18,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5629703963873554,
      "LackOfCohesion" : 0.4858982284507578,
      "MetricsIntensity" : 0.03285902174270168,
      "Density" : 3.0667025282409908
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "252c8c36-fbd1-4361-8386-ccbdd515d384",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4863787593504765,
      "MetricsIntensity" : 0.032857549820651935,
      "Density" : 1.0
    },
    "euclideanDistance" : 10.11151819500592,
    "generation" : 18,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5629703963873554,
      "LackOfCohesion" : 0.4863787593504765,
      "MetricsIntensity" : 0.032857549820651935,
      "Density" : 3.067778375470683
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5e9afcc5-1932-4864-9982-458dc29fad1c",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4863787593504767,
      "MetricsIntensity" : 0.03285754982065193,
      "Density" : 1.0
    },
    "euclideanDistance" : 10.11151819500592,
    "generation" : 21,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5629703963873551,
      "LackOfCohesion" : 0.4863787593504767,
      "MetricsIntensity" : 0.03285754982065192,
      "Density" : 3.0677783754706835
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "aefd174e-e520-4173-85e7-abb431ffa41e",
    "objectives" : {
      "NumberOfConcerns" : 1.0028966849050531,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4864245972676015,
      "MetricsIntensity" : 0.03285696273971428,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 10.111569658207632,
    "generation" : 15,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634721525338682,
      "LackOfCohesion" : 0.4864245972676015,
      "MetricsIntensity" : 0.03285696273971428,
      "Density" : 3.068316299085529
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8e0e2eaa-ee0d-4999-9fe2-b8242e0deb0a",
    "objectives" : {
      "NumberOfConcerns" : 1.0035403926617317,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4857410551530937,
      "MetricsIntensity" : 0.032865632081915494,
      "Density" : 1.0005260389268806
    },
    "euclideanDistance" : 10.11163538685547,
    "generation" : 15,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5636910732196592,
      "LackOfCohesion" : 0.4857410551530937,
      "MetricsIntensity" : 0.0328656320819155,
      "Density" : 3.0677419354838706
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "32ea8085-f833-4706-b3d2-eff773d0e2e4",
    "objectives" : {
      "NumberOfConcerns" : 1.0038622465400708,
      "NumberOfRefactorings" : 10.0,
      "LackOfCohesion" : 0.4857868678707041,
      "MetricsIntensity" : 0.03286504532372713,
      "Density" : 1.0007013852358408
    },
    "euclideanDistance" : 10.111686885215601,
    "generation" : 6,
    "numberOfRefactorings" : 10,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5641925777331995,
      "LackOfCohesion" : 0.4857868678707041,
      "MetricsIntensity" : 0.03286504532372714,
      "Density" : 3.0682795698924727
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "96af630b-d457-4e21-aace-245805ea3c9a",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4861197831536291,
      "MetricsIntensity" : 0.03283180295308693,
      "Density" : 0.999123268455199
    },
    "euclideanDistance" : 11.101328913792448,
    "generation" : 5,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5627510040160641,
      "LackOfCohesion" : 0.4861197831536291,
      "MetricsIntensity" : 0.03283180295308693,
      "Density" : 3.066738428417653
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "046498cb-88f4-43bd-9c37-df14905ff84d",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48645611287906215,
      "MetricsIntensity" : 0.032877165695435036,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 11.101346305073818,
    "generation" : 17,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5622489959839359,
      "LackOfCohesion" : 0.48645611287906215,
      "MetricsIntensity" : 0.03287716569543504,
      "Density" : 3.066164604626142
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a1bcbdd5-ca57-4644-891f-4ce58774234f",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4866923048059986,
      "MetricsIntensity" : 0.03282915411815956,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 11.101475252544327,
    "generation" : 18,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.563755020080321,
      "LackOfCohesion" : 0.4866923048059986,
      "MetricsIntensity" : 0.03282915411815956,
      "Density" : 3.0688912809472546
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "203922cf-0149-48bd-9136-1877fbceffc0",
    "objectives" : {
      "NumberOfConcerns" : 1.0032185387833923,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48600823945185767,
      "MetricsIntensity" : 0.03283784481924477,
      "Density" : 1.0001753463089602
    },
    "euclideanDistance" : 11.101535051189561,
    "generation" : 17,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5639739086803814,
      "LackOfCohesion" : 0.48600823945185767,
      "MetricsIntensity" : 0.032837844819244774,
      "Density" : 3.0683162990855295
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "e38ecdcf-89ad-4fc2-a8a7-c1e8edc42b7a",
    "objectives" : {
      "NumberOfConcerns" : 1.0035403926617317,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48605407736898293,
      "MetricsIntensity" : 0.03283725644430969,
      "Density" : 1.0003506926179204
    },
    "euclideanDistance" : 11.101581944905988,
    "generation" : 24,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5644756648268943,
      "LackOfCohesion" : 0.48605407736898293,
      "MetricsIntensity" : 0.032837256444309695,
      "Density" : 3.0688542227003763
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "e5b52e2e-3a6a-49f2-87e4-88134a6b843e",
    "objectives" : {
      "NumberOfConcerns" : 1.0035403926617317,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.4860540773689828,
      "MetricsIntensity" : 0.0328372564443097,
      "Density" : 1.0003506926179204
    },
    "euclideanDistance" : 11.101581944905988,
    "generation" : 18,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5644756648268943,
      "LackOfCohesion" : 0.4860540773689828,
      "MetricsIntensity" : 0.03283725644430971,
      "Density" : 3.0688542227003763
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "34dafb51-44b4-404d-9191-886750b4a486",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4851120854011724,
      "MetricsIntensity" : 0.03286031186447119,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 12.092815488991187,
    "generation" : 5,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5617469879518076,
      "LackOfCohesion" : 0.4851120854011724,
      "MetricsIntensity" : 0.0328603118644712,
      "Density" : 3.0651237890204523
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a0511d05-4507-4e42-a9a2-104e75939386",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48563874390916445,
      "MetricsIntensity" : 0.032858251728295575,
      "Density" : 0.999123268455199
    },
    "euclideanDistance" : 12.09290672619252,
    "generation" : 20,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5622489959839359,
      "LackOfCohesion" : 0.48563874390916445,
      "MetricsIntensity" : 0.03285825172829557,
      "Density" : 3.0667384284176533
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8c85ab71-61b8-446e-86c2-147f030700e8",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4872509337060997,
      "MetricsIntensity" : 0.03284729291054903,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 12.093015020388004,
    "generation" : 18,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314411,
      "LackOfCohesion" : 0.4872509337060997,
      "MetricsIntensity" : 0.032847292910549025,
      "Density" : 3.068353067814855
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a554cc8c-c4af-4853-bf98-c65808f946b8",
    "objectives" : {
      "NumberOfConcerns" : 1.0028966849050531,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.48504693390571885,
      "MetricsIntensity" : 0.03286574967422455,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 12.09304766319537,
    "generation" : 26,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634721525338682,
      "LackOfCohesion" : 0.48504693390571885,
      "MetricsIntensity" : 0.03286574967422455,
      "Density" : 3.067240451855835
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "7aa3cfd5-9318-4882-91ad-ec6729b1b79f",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4853792176067895,
      "MetricsIntensity" : 0.03283249106945311,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 13.08568298413909,
    "generation" : 8,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620291310899035,
      "LackOfCohesion" : 0.4853792176067895,
      "MetricsIntensity" : 0.03283249106945311,
      "Density" : 3.065697361335487
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "7b2391e6-5b86-42c6-bf52-b262a1045519",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.48542510600620237,
      "MetricsIntensity" : 0.03283190075110553,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 13.08572268591249,
    "generation" : 22,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606733,
      "LackOfCohesion" : 0.48542510600620237,
      "MetricsIntensity" : 0.03283190075110553,
      "Density" : 3.066235864297253
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "88b8c78d-1de0-4246-8c16-40d36bdf753a",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4859520545243864,
      "MetricsIntensity" : 0.03282983948049366,
      "Density" : 0.9989479221462388
    },
    "euclideanDistance" : 13.08580701666307,
    "generation" : 22,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.4859520545243864,
      "MetricsIntensity" : 0.032829839480493665,
      "Density" : 3.0678513731825534
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "16e64f95-833a-46f4-a2d7-a2b3f2321f8e",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 13.0,
      "LackOfCohesion" : 0.4853138832364317,
      "MetricsIntensity" : 0.032837945888627214,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 13.085897462024668,
    "generation" : 27,
    "numberOfRefactorings" : 13,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.563755020080321,
      "LackOfCohesion" : 0.4853138832364317,
      "MetricsIntensity" : 0.03283794588862721,
      "Density" : 3.067814854682455
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "bdfa691d-9a17-4202-8c95-9bcd945e5730",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4860111946971629,
      "MetricsIntensity" : 0.03281157977758201,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 14.079643323538331,
    "generation" : 10,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606726,
      "LackOfCohesion" : 0.4860111946971629,
      "MetricsIntensity" : 0.03281157977758201,
      "Density" : 3.065697361335487
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ec191b3a-c4a1-497e-a596-dfcb7df04dd9",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4865381432153467,
      "MetricsIntensity" : 0.032809518506970156,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 14.07972171657111,
    "generation" : 9,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.4865381432153467,
      "MetricsIntensity" : 0.032809518506970156,
      "Density" : 3.0673128702207855
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6f6c322c-feec-48af-b2ee-8a6323eb87ab",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.48455364954842295,
      "MetricsIntensity" : 0.03288363292068678,
      "Density" : 0.9996493073820796
    },
    "euclideanDistance" : 14.079784394732844,
    "generation" : 23,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5629703963873551,
      "LackOfCohesion" : 0.48455364954842295,
      "MetricsIntensity" : 0.03288363292068677,
      "Density" : 3.0667025282409908
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "43fab360-d7e3-4722-9d47-a4c0e3f41cfe",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4858996493689497,
      "MetricsIntensity" : 0.03281763609890863,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 14.079805733026781,
    "generation" : 26,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5637550200803212,
      "LackOfCohesion" : 0.4858996493689497,
      "MetricsIntensity" : 0.03281763609890863,
      "Density" : 3.0672766415500545
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0d5876da-bd1a-4760-b3e4-b7184bccf505",
    "objectives" : {
      "NumberOfConcerns" : 1.0028966849050531,
      "NumberOfRefactorings" : 14.0,
      "LackOfCohesion" : 0.4845994874655482,
      "MetricsIntensity" : 0.03288304713374654,
      "Density" : 0.9998246536910398
    },
    "euclideanDistance" : 14.079821343211805,
    "generation" : 24,
    "numberOfRefactorings" : 14,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5634721525338682,
      "LackOfCohesion" : 0.4845994874655482,
      "MetricsIntensity" : 0.03288304713374654,
      "Density" : 3.0672404518558354
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "85620fe5-2ccb-483a-9137-07a0c1c59e91",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4850029420450625,
      "MetricsIntensity" : 0.032840095733223336,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 15.074250905025087,
    "generation" : 13,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5615268709191363,
      "LackOfCohesion" : 0.4850029420450625,
      "MetricsIntensity" : 0.03284009573322334,
      "Density" : 3.0640818524501894
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "62e2cef3-7372-4ebb-98c9-f21178ac734e",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4849312783841961,
      "MetricsIntensity" : 0.03284980498819563,
      "Density" : 0.998246536910398
    },
    "euclideanDistance" : 15.074304815097644,
    "generation" : 25,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620291310899048,
      "LackOfCohesion" : 0.4849312783841961,
      "MetricsIntensity" : 0.03284980498819563,
      "Density" : 3.065697361335487
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b64719f3-d52b-4cde-bba8-7c48481a1e8e",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4849771667836087,
      "MetricsIntensity" : 0.03284921726069306,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 15.074339278015897,
    "generation" : 23,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5625313912606726,
      "LackOfCohesion" : 0.4849771667836087,
      "MetricsIntensity" : 0.03284921726069306,
      "Density" : 3.0662358642972527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5f0541d7-d103-4fe0-be5f-f12ec973b1aa",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4848919516164927,
      "MetricsIntensity" : 0.032846136360573236,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 15.074402532353913,
    "generation" : 25,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5627510040160641,
      "LackOfCohesion" : 0.4848919516164927,
      "MetricsIntensity" : 0.032846136360573236,
      "Density" : 3.065662002152852
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "1fdaf778-d271-4d5d-9e64-f31c0740ad36",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48714290864472776,
      "MetricsIntensity" : 0.03282706712721046,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 15.074410918626405,
    "generation" : 8,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5628140703517586,
      "LackOfCohesion" : 0.48714290864472776,
      "MetricsIntensity" : 0.032827067127210466,
      "Density" : 3.0673128702207864
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6c702bed-cb03-4b1e-b9e7-7bd26986766e",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4848203273962759,
      "MetricsIntensity" : 0.03285584027198194,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 15.074456507873476,
    "generation" : 18,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5632530120481924,
      "LackOfCohesion" : 0.4848203273962759,
      "MetricsIntensity" : 0.03285584027198194,
      "Density" : 3.067276641550055
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "4309d08f-01d3-4f65-b604-bc17ac5514c1",
    "objectives" : {
      "NumberOfConcerns" : 1.0022529771483746,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.48482032739627584,
      "MetricsIntensity" : 0.03285584027198198,
      "Density" : 0.9992986147641593
    },
    "euclideanDistance" : 15.074456507873476,
    "generation" : 17,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5632530120481924,
      "LackOfCohesion" : 0.48482032739627584,
      "MetricsIntensity" : 0.03285584027198198,
      "Density" : 3.0672766415500545
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "466a183c-2f52-4696-9656-f88ad2f68a77",
    "objectives" : {
      "NumberOfConcerns" : 1.002574831026714,
      "NumberOfRefactorings" : 15.0,
      "LackOfCohesion" : 0.4848661905406529,
      "MetricsIntensity" : 0.03285525286793974,
      "Density" : 0.9994739610731194
    },
    "euclideanDistance" : 15.074491009020564,
    "generation" : 22,
    "numberOfRefactorings" : 15,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5637550200803207,
      "LackOfCohesion" : 0.4848661905406529,
      "MetricsIntensity" : 0.03285525286793975,
      "Density" : 3.067814854682455
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "322c016d-77b6-4b0c-8cc6-388101cf6cac",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.48527016129687806,
      "MetricsIntensity" : 0.03281225583469398,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 16.069597198236792,
    "generation" : 12,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261315,
      "LackOfCohesion" : 0.48527016129687806,
      "MetricsIntensity" : 0.03281225583469398,
      "Density" : 3.0646551724137927
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5d7e48cd-2f40-49fb-9798-cb5a66709621",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4856068616335785,
      "MetricsIntensity" : 0.03285766120042028,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 16.0696092000416,
    "generation" : 17,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.4856068616335785,
      "MetricsIntensity" : 0.03285766120042028,
      "Density" : 3.0640818524501894
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d9b68185-d86c-49c4-8dc6-58be352a4a0c",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4857974001448239,
      "MetricsIntensity" : 0.03281019342839582,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 16.069665820069485,
    "generation" : 20,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5623115577889446,
      "LackOfCohesion" : 0.4857974001448239,
      "MetricsIntensity" : 0.03281019342839583,
      "Density" : 3.066271551724139
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "82ba3c48-7344-46ca-a3cc-074ab6658c38",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4851589626030658,
      "MetricsIntensity" : 0.03281831511872109,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 16.06973937704728,
    "generation" : 18,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314414,
      "LackOfCohesion" : 0.4851589626030658,
      "MetricsIntensity" : 0.03281831511872109,
      "Density" : 3.0662358642972527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "4659fa81-9c56-4b9d-8053-fc5e6b5b8bcf",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 16.0,
      "LackOfCohesion" : 0.4851589626030654,
      "MetricsIntensity" : 0.03281831511872111,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 16.06973937704728,
    "generation" : 9,
    "numberOfRefactorings" : 16,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.4851589626030654,
      "MetricsIntensity" : 0.0328183151187211,
      "Density" : 3.066235864297253
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d5d28d05-49c8-4405-8916-0ac4d401ed61",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.48640209061409406,
      "MetricsIntensity" : 0.03282775209468995,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 17.06556359371461,
    "generation" : 29,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620915032679736,
      "LackOfCohesion" : 0.48640209061409406,
      "MetricsIntensity" : 0.032827752094689945,
      "Density" : 3.066271551724138
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "995e3e3e-94e7-4b41-ab05-2043dc25948d",
    "objectives" : {
      "NumberOfConcerns" : 1.0019311232700354,
      "NumberOfRefactorings" : 17.0,
      "LackOfCohesion" : 0.4844442589207134,
      "MetricsIntensity" : 0.032863443339885855,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 17.065672529376954,
    "generation" : 6,
    "numberOfRefactorings" : 17,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5627510040160641,
      "LackOfCohesion" : 0.4844442589207134,
      "MetricsIntensity" : 0.03286344333988586,
      "Density" : 3.065662002152853
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "75fd6f75-7590-4252-83b8-66625bc95063",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4848219752758147,
      "MetricsIntensity" : 0.03282958188505812,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 18.061880313775713,
    "generation" : 26,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5618090452261315,
      "LackOfCohesion" : 0.4848219752758147,
      "MetricsIntensity" : 0.03282958188505812,
      "Density" : 3.0646551724137927
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "c544b5b5-25da-4255-be0a-e62b2c074e34",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.4851586756125148,
      "MetricsIntensity" : 0.03287498725078446,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 18.06189098343264,
    "generation" : 28,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.4851586756125148,
      "MetricsIntensity" : 0.03287498725078446,
      "Density" : 3.064081852450189
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "dc3adfe6-c7d5-4295-a57c-5434d9a01b87",
    "objectives" : {
      "NumberOfConcerns" : 1.0016092693916963,
      "NumberOfRefactorings" : 18.0,
      "LackOfCohesion" : 0.48471102338047184,
      "MetricsIntensity" : 0.032835631628308624,
      "Density" : 0.9984218832193582
    },
    "euclideanDistance" : 18.06200681929651,
    "generation" : 17,
    "numberOfRefactorings" : 18,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5630336514314416,
      "LackOfCohesion" : 0.48471102338047184,
      "MetricsIntensity" : 0.03283563162830862,
      "Density" : 3.0662358642972527
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a560ca86-e772-438a-8bca-9b64c05c357c",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48595365752245645,
      "MetricsIntensity" : 0.032845087696349806,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 19.05867324535214,
    "generation" : 9,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620915032679734,
      "LackOfCohesion" : 0.48595365752245645,
      "MetricsIntensity" : 0.0328450876963498,
      "Density" : 3.066271551724138
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0bb94aa6-fdbf-40ae-a164-eedaeb01aa44",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4859536575224567,
      "MetricsIntensity" : 0.0328450876963498,
      "Density" : 0.9978958442924777
    },
    "euclideanDistance" : 19.05867324535214,
    "generation" : 21,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5620915032679734,
      "LackOfCohesion" : 0.4859536575224567,
      "MetricsIntensity" : 0.0328450876963498,
      "Density" : 3.0662715517241383
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "e5f6d49c-b360-451c-b93b-50e5d4e46aaa",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48505305006194493,
      "MetricsIntensity" : 0.032878221286248975,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 22.050641944493858,
    "generation" : 15,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560020090406831,
      "LackOfCohesion" : 0.48505305006194493,
      "MetricsIntensity" : 0.03287822128624897,
      "Density" : 3.0618945102260495
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ad898c54-309d-4c81-8f03-f3ac94f03723",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48532029692148326,
      "MetricsIntensity" : 0.032850395030419186,
      "Density" : 0.9971944590566368
    },
    "euclideanDistance" : 23.04842130661181,
    "generation" : 6,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603015075376891,
      "LackOfCohesion" : 0.48532029692148326,
      "MetricsIntensity" : 0.032850395030419186,
      "Density" : 3.0624663435648882
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6cb73f4e-1ce5-4185-969d-5cc1b3a9c15f",
    "objectives" : {
      "NumberOfConcerns" : 1.0006437077566785,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4865029618383807,
      "MetricsIntensity" : 0.032886934542073795,
      "Density" : 0.9966684201297563
    },
    "euclideanDistance" : 23.04847939565424,
    "generation" : 19,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5607429718875505,
      "LackOfCohesion" : 0.4865029618383807,
      "MetricsIntensity" : 0.032886934542073795,
      "Density" : 3.059203444564047
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8ea4af32-2e4f-4551-86af-78bd58b57094",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48592472437905376,
      "MetricsIntensity" : 0.03286797585856669,
      "Density" : 0.9971944590566368
    },
    "euclideanDistance" : 24.04639321722044,
    "generation" : 10,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560080442433383,
      "LackOfCohesion" : 0.48592472437905376,
      "MetricsIntensity" : 0.03286797585856669,
      "Density" : 3.0624663435648896
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "9ca7d73c-d6a8-419f-b2c5-a44042b6c3c1",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48460511083935126,
      "MetricsIntensity" : 0.03289553520499149,
      "Density" : 0.9975451516745573
    },
    "euclideanDistance" : 24.046421292058213,
    "generation" : 22,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560020090406831,
      "LackOfCohesion" : 0.48460511083935126,
      "MetricsIntensity" : 0.0328955352049915,
      "Density" : 3.061894510226049
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d5c5e92b-e5b9-4026-bb08-25591295c6fc",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4870614864747336,
      "MetricsIntensity" : 0.03290510256103225,
      "Density" : 0.9964930738207961
    },
    "euclideanDistance" : 24.046427312168174,
    "generation" : 8,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560020090406831,
      "LackOfCohesion" : 0.4870614864747336,
      "MetricsIntensity" : 0.032905102561032254,
      "Density" : 3.0586652314316476
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "1c9092fa-c278-4e5e-8163-8595b4260668",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4867708599451201,
      "MetricsIntensity" : 0.03285912711169791,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 24.04644086799182,
    "generation" : 13,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610246107483678,
      "LackOfCohesion" : 0.4867708599451201,
      "MetricsIntensity" : 0.0328591271116979,
      "Density" : 3.059773828756057
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6c0e6ef8-ec43-45ee-9144-8459006bebf4",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48647986105654656,
      "MetricsIntensity" : 0.03282740981087704,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 24.046479710887933,
    "generation" : 10,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.48647986105654656,
      "MetricsIntensity" : 0.03282740981087704,
      "Density" : 3.064081852450189
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "35e806de-59d2-4ec0-a7b4-39c909557eef",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.48449433936026165,
      "MetricsIntensity" : 0.032901545320799426,
      "Density" : 0.9985972295283184
    },
    "euclideanDistance" : 24.046516291532907,
    "generation" : 24,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5612449799196788,
      "LackOfCohesion" : 0.48449433936026165,
      "MetricsIntensity" : 0.03290154532079943,
      "Density" : 3.0634749865519098
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5612f908-d905-42ba-b090-690db4dd0e63",
    "objectives" : {
      "NumberOfConcerns" : 1.0012874155133569,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4845402025046385,
      "MetricsIntensity" : 0.0329009592114668,
      "Density" : 0.9987725758372786
    },
    "euclideanDistance" : 24.04653789691294,
    "generation" : 19,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5617469879518076,
      "LackOfCohesion" : 0.4845402025046385,
      "MetricsIntensity" : 0.03290095921146681,
      "Density" : 3.0640129101667575
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "55ec8588-57e1-40a6-b34c-3bd2a5372c07",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48571671889360735,
      "MetricsIntensity" : 0.03288823944932449,
      "Density" : 0.995616342275995
    },
    "euclideanDistance" : 25.04449974080457,
    "generation" : 25,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595178302360626,
      "LackOfCohesion" : 0.48571671889360735,
      "MetricsIntensity" : 0.03288823944932449,
      "Density" : 3.057619816908993
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "178f0d9c-ce58-4a29-afca-a1bb3479c880",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4857626072930199,
      "MetricsIntensity" : 0.03288765172182194,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 25.04452044642037,
    "generation" : 20,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560020090406829,
      "LackOfCohesion" : 0.4857626072930199,
      "MetricsIntensity" : 0.03288765172182194,
      "Density" : 3.0581583198707594
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f1a39ea3-4986-4092-b7b0-d04061d5ea25",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48487211090041976,
      "MetricsIntensity" : 0.032867718488510875,
      "Density" : 0.9971944590566368
    },
    "euclideanDistance" : 25.044546133616944,
    "generation" : 24,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603015075376885,
      "LackOfCohesion" : 0.48487211090041976,
      "MetricsIntensity" : 0.032867718488510875,
      "Density" : 3.0624663435648887
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8324f4f9-84c5-485e-ac3d-3644cec74518",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4873298399108077,
      "MetricsIntensity" : 0.03287729111582218,
      "Density" : 0.9961423812028757
    },
    "euclideanDistance" : 25.044551981051956,
    "generation" : 11,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603015075376885,
      "LackOfCohesion" : 0.4873298399108077,
      "MetricsIntensity" : 0.03287729111582218,
      "Density" : 3.0592353257942926
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d43edb63-5701-4c34-8993-9ef6b85b23f0",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48655739824681427,
      "MetricsIntensity" : 0.032847041511247024,
      "Density" : 0.9971944590566368
    },
    "euclideanDistance" : 25.044565950084603,
    "generation" : 22,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5605832076420298,
      "LackOfCohesion" : 0.48655739824681427,
      "MetricsIntensity" : 0.03284704151124702,
      "Density" : 3.06246634356489
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5baec661-7a5a-4bc5-b5d2-1ec2a48d6704",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4873757535930852,
      "MetricsIntensity" : 0.032876703064502806,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 25.04457269375508,
    "generation" : 12,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608040201005027,
      "LackOfCohesion" : 0.4873757535930852,
      "MetricsIntensity" : 0.03287670306450281,
      "Density" : 3.0597738287560587
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "e040b3b2-f889-4c1f-8976-b90980656ad8",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4873757535930852,
      "MetricsIntensity" : 0.032876703064502806,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 25.04457269375508,
    "generation" : 11,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560804020100503,
      "LackOfCohesion" : 0.4873757535930852,
      "MetricsIntensity" : 0.0328767030645028,
      "Density" : 3.0597738287560587
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0c58036c-4ac6-4bb9-a54f-b7e563d95b0d",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4870849277446209,
      "MetricsIntensity" : 0.032844977968010454,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 25.044609993177303,
    "generation" : 12,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610859728506785,
      "LackOfCohesion" : 0.4870849277446209,
      "MetricsIntensity" : 0.032844977968010454,
      "Density" : 3.064081852450189
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "378abf40-0a62-4d82-bda0-f22838aec347",
    "objectives" : {
      "NumberOfConcerns" : 1.0009655616350177,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48565119877680657,
      "MetricsIntensity" : 0.03289366617636579,
      "Density" : 0.9968437664387164
    },
    "euclideanDistance" : 25.044611568766943,
    "generation" : 21,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5612449799196788,
      "LackOfCohesion" : 0.48565119877680657,
      "MetricsIntensity" : 0.03289366617636579,
      "Density" : 3.0597416576964473
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ccaf3a8f-ed8a-47a9-a554-8afd14c05631",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.485984331410904,
      "MetricsIntensity" : 0.03286041871314378,
      "Density" : 0.9952656496580747
    },
    "euclideanDistance" : 26.042770284666787,
    "generation" : 6,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5597989949748738,
      "LackOfCohesion" : 0.485984331410904,
      "MetricsIntensity" : 0.03286041871314379,
      "Density" : 3.058189655172414
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ac2e434e-2b24-412c-9318-e095e3bb0e80",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4852111480112436,
      "MetricsIntensity" : 0.03283015851050357,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 26.04278371292187,
    "generation" : 13,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5600804424333836,
      "LackOfCohesion" : 0.4852111480112436,
      "MetricsIntensity" : 0.03283015851050357,
      "Density" : 3.0614224137931036
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ee465733-648a-4147-adeb-6ad89764498c",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4850999205651399,
      "MetricsIntensity" : 0.032836211269246005,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 26.042871321694886,
    "generation" : 27,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.4850999205651399,
      "MetricsIntensity" : 0.032836211269246005,
      "Density" : 3.063004846526656
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "dc12f18e-1a07-4b37-aa88-a282b086e817",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4858158486505829,
      "MetricsIntensity" : 0.03284773787384592,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 27.04118870370781,
    "generation" : 23,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295773,
      "LackOfCohesion" : 0.4858158486505829,
      "MetricsIntensity" : 0.03284773787384592,
      "Density" : 3.0614224137931036
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "4ca0e81f-6fd7-4138-b8d0-b3b2b9d560cb",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4866350639224009,
      "MetricsIntensity" : 0.032877415394682044,
      "Density" : 0.995440995967035
    },
    "euclideanDistance" : 27.04119494794462,
    "generation" : 23,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5600804424333838,
      "LackOfCohesion" : 0.4866350639224009,
      "MetricsIntensity" : 0.032877415394682044,
      "Density" : 3.058728448275862
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "664ed288-8a6a-4750-865b-24d4e337ead8",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4852687796710137,
      "MetricsIntensity" : 0.03290555336806701,
      "Density" : 0.995616342275995
    },
    "euclideanDistance" : 27.04120066609135,
    "generation" : 28,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595178302360628,
      "LackOfCohesion" : 0.4852687796710137,
      "MetricsIntensity" : 0.03290555336806701,
      "Density" : 3.0576198169089928
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0fd5dad3-f61f-49e2-9ea7-63f465234b39",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4844956280243336,
      "MetricsIntensity" : 0.03287532993445101,
      "Density" : 0.9966684201297563
    },
    "euclideanDistance" : 27.041213629377218,
    "generation" : 26,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5597989949748743,
      "LackOfCohesion" : 0.4844956280243336,
      "MetricsIntensity" : 0.032875329934451004,
      "Density" : 3.0608508346795897
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "21abbe7c-8d3c-4f6d-b671-192bd5ef0912",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4863436691188795,
      "MetricsIntensity" : 0.032845673192416734,
      "Density" : 0.9968437664387164
    },
    "euclideanDistance" : 27.041229457041922,
    "generation" : 22,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5603621730382295,
      "LackOfCohesion" : 0.4863436691188795,
      "MetricsIntensity" : 0.032845673192416734,
      "Density" : 3.0630387931034484
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.ParametersAction.run], extractedMethods=[hudson.model.ParametersAction.iterator(), hudson.model.ParametersAction.getIconFileName(), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getDisplayName(), hudson.model.ParametersAction.getAssignedLabel(SubTask), hudson.model.ParametersAction.merge(ParametersAction), hudson.model.ParametersAction.onLoad(Run<?,?>), hudson.model.ParametersAction.onAttached(Run<?,?>), hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.isSafeParameter(String), hudson.model.ParametersAction.getParameter(String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "9a1ec337-d8b4-435d-8fc3-cbd68731d6bc",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4843848558356267,
      "MetricsIntensity" : 0.03288135448604438,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 27.041298043464533,
    "generation" : 23,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610246107483678,
      "LackOfCohesion" : 0.4843848558356267,
      "MetricsIntensity" : 0.03288135448604438,
      "Density" : 3.0624327233584503
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "eb32808f-068f-4fbd-8194-ec7ba9e47fa2",
    "objectives" : {
      "NumberOfConcerns" : 1.0003218538783392,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.4843848558356271,
      "MetricsIntensity" : 0.03288135448604436,
      "Density" : 0.9977204979835175
    },
    "euclideanDistance" : 27.041298043464533,
    "generation" : 25,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5610246107483674,
      "LackOfCohesion" : 0.4843848558356271,
      "MetricsIntensity" : 0.032881354486044366,
      "Density" : 3.0624327233584503
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "019e298c-39c7-4911-844c-8555082b6d77",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48560784853481764,
      "MetricsIntensity" : 0.032868028862947686,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 28.039683111787294,
    "generation" : 7,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5592964824120612,
      "LackOfCohesion" : 0.48560784853481764,
      "MetricsIntensity" : 0.032868028862947686,
      "Density" : 3.0565732758620694
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "cbf757fa-e930-43d0-ad65-e70b854cd097",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4855361453898405,
      "MetricsIntensity" : 0.03287774217123549,
      "Density" : 0.9952656496580747
    },
    "euclideanDistance" : 28.039712013799978,
    "generation" : 22,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5597989949748745,
      "LackOfCohesion" : 0.4855361453898405,
      "MetricsIntensity" : 0.032877742171235486,
      "Density" : 3.0581896551724146
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "618d2cab-3674-4aab-b90f-9d592ebefa2a",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48722179879714445,
      "MetricsIntensity" : 0.032857072016557076,
      "Density" : 0.9952656496580747
    },
    "euclideanDistance" : 28.039729763466088,
    "generation" : 9,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5600804424333834,
      "LackOfCohesion" : 0.48722179879714445,
      "MetricsIntensity" : 0.032857072016557076,
      "Density" : 3.0581896551724146
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[hudson.model.Queue.BuildableItem.transientCausesOfBlockage, hudson.model.Queue.BuildableItem.isPending], extractedMethods=[hudson.model.Queue.BuildableItem.isStuck(), hudson.model.Queue.BuildableItem.isPending(), hudson.model.Queue.BuildableItem.getCauseOfBlockage()]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b5785973-46e3-48b2-9777-bfe947b3d051",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4850996008683995,
      "MetricsIntensity" : 0.03289292450841109,
      "Density" : 0.9966684201297563
    },
    "euclideanDistance" : 28.039731374567303,
    "generation" : 9,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559577677224736,
      "LackOfCohesion" : 0.4850996008683995,
      "MetricsIntensity" : 0.032892924508411095,
      "Density" : 3.060850834679592
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "e85444cd-409b-45d1-9467-8c2e25f1a6d0",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.4854964638898832,
      "MetricsIntensity" : 0.032874057434954855,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 28.039764417825566,
    "generation" : 28,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560522350577599,
      "LackOfCohesion" : 0.4854964638898832,
      "MetricsIntensity" : 0.03287405743495486,
      "Density" : 3.0581583198707594
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "57a097af-184d-4586-8d61-0d3ef049e035",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 28.0,
      "LackOfCohesion" : 0.48465173454407645,
      "MetricsIntensity" : 0.03285353731961018,
      "Density" : 0.997369805365597
    },
    "euclideanDistance" : 28.039805869288145,
    "generation" : 21,
    "numberOfRefactorings" : 28,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5613065326633169,
      "LackOfCohesion" : 0.48465173454407645,
      "MetricsIntensity" : 0.03285353731961019,
      "Density" : 3.0630048465266557
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "88da6032-7ada-4a3b-9383-4d948a596008",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.4858755485615735,
      "MetricsIntensity" : 0.03284018901581363,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 29.038297933903355,
    "generation" : 8,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595776772247354,
      "LackOfCohesion" : 0.4858755485615735,
      "MetricsIntensity" : 0.03284018901581363,
      "Density" : 3.057142857142857
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b4276bd6-4bd8-4864-ab91-e99da24b5790",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 29.0,
      "LackOfCohesion" : 0.48621243451036683,
      "MetricsIntensity" : 0.03288561941206129,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 29.038304571226114,
    "generation" : 13,
    "numberOfRefactorings" : 29,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5590749120160878,
      "LackOfCohesion" : 0.48621243451036683,
      "MetricsIntensity" : 0.0328856194120613,
      "Density" : 3.056573275862069
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0d54077f-f985-40b0-9ffb-3b9f60e25471",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.48648061566564,
      "MetricsIntensity" : 0.03285777391170165,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 30.037011360400033,
    "generation" : 13,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5593561368209259,
      "LackOfCohesion" : 0.48648061566564,
      "MetricsIntensity" : 0.03285777391170165,
      "Density" : 3.057142857142857
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ff70a924-b724-48c9-af11-818c3d147534",
    "objectives" : {
      "NumberOfConcerns" : 0.998712584486643,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4851596625137542,
      "MetricsIntensity" : 0.03288535491331187,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 30.03703372612329,
    "generation" : 19,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559296482412061,
      "LackOfCohesion" : 0.4851596625137542,
      "MetricsIntensity" : 0.03288535491331187,
      "Density" : 3.056573275862069
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "6cd23583-ba68-4785-aa2e-4f26b525eb84",
    "objectives" : {
      "NumberOfConcerns" : 1.0,
      "NumberOfRefactorings" : 30.0,
      "LackOfCohesion" : 0.4850485246672893,
      "MetricsIntensity" : 0.03289137394454239,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 30.037109631268063,
    "generation" : 27,
    "numberOfRefactorings" : 30,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.560522350577599,
      "LackOfCohesion" : 0.4850485246672893,
      "MetricsIntensity" : 0.03289137394454239,
      "Density" : 3.058158319870759
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b801c719-74fd-45db-b59f-2f0f27849097",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48576400141872944,
      "MetricsIntensity" : 0.03290295501372113,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 31.035829256608846,
    "generation" : 21,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5590749120160883,
      "LackOfCohesion" : 0.48576400141872944,
      "MetricsIntensity" : 0.03290295501372113,
      "Density" : 3.056573275862069
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "9d01935e-4163-4e1f-b1f2-7771c4e2a7c9",
    "objectives" : {
      "NumberOfConcerns" : 0.9996781461216607,
      "NumberOfRefactorings" : 31.0,
      "LackOfCohesion" : 0.48531576903349716,
      "MetricsIntensity" : 0.03286356229847102,
      "Density" : 0.995440995967035
    },
    "euclideanDistance" : 31.035896484259716,
    "generation" : 24,
    "numberOfRefactorings" : 31,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5608040201005027,
      "LackOfCohesion" : 0.48531576903349716,
      "MetricsIntensity" : 0.032863562298471025,
      "Density" : 3.0587284482758625
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "9c7399df-71e7-448c-af57-a04d2e959ad8",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 32.0,
      "LackOfCohesion" : 0.4860319352308743,
      "MetricsIntensity" : 0.03287511907519362,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 32.034693946682154,
    "generation" : 27,
    "numberOfRefactorings" : 32,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5593561368209263,
      "LackOfCohesion" : 0.4860319352308743,
      "MetricsIntensity" : 0.03287511907519362,
      "Density" : 3.057142857142858
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM, jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME], extractedMethods=[jenkins.security.apitoken.ApiTokenStore.revokeAllTokens(), jenkins.security.apitoken.ApiTokenStore.init(), jenkins.security.apitoken.ApiTokenStore.readResolve(), jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean), jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName(), jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[]), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String), jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String), jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b8e4250e-e706-4e4c-9432-329ae92e79eb",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.48565798415942285,
      "MetricsIntensity" : 0.03290617412565138,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 35.031722819346875,
    "generation" : 9,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5577889447236177,
      "LackOfCohesion" : 0.48565798415942285,
      "MetricsIntensity" : 0.03290617412565138,
      "Density" : 3.054388799138396
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "80f41fb4-8f6d-4229-b889-fea87288ab72",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 35.0,
      "LackOfCohesion" : 0.4857038978417004,
      "MetricsIntensity" : 0.03290558607433202,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 35.031737602206206,
    "generation" : 22,
    "numberOfRefactorings" : 35,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.558291457286432,
      "LackOfCohesion" : 0.4857038978417004,
      "MetricsIntensity" : 0.03290558607433202,
      "Density" : 3.054927302100162
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "a5597773-94d9-461f-8097-9d6e12e00651",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.4859257118243401,
      "MetricsIntensity" : 0.03287834793960306,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 36.03082738957345,
    "generation" : 8,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.558069381598793,
      "LackOfCohesion" : 0.4859257118243401,
      "MetricsIntensity" : 0.032878347939603064,
      "Density" : 3.0549568965517255
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f3bd42cc-0df6-4d78-b200-1e9f3cb94d94",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48626259777313313,
      "MetricsIntensity" : 0.03292378570302449,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 36.03083274622857,
    "generation" : 16,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5575666163901456,
      "LackOfCohesion" : 0.48626259777313313,
      "MetricsIntensity" : 0.03292378570302448,
      "Density" : 3.0543887991383953
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "5208faef-bf81-44a2-8237-01e72d269c35",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48597165081735727,
      "MetricsIntensity" : 0.0328777582672591,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 36.0308417586165,
    "generation" : 12,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.558572146807441,
      "LackOfCohesion" : 0.48597165081735727,
      "MetricsIntensity" : 0.0328777582672591,
      "Density" : 3.0554956896551713
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "f4833578-5946-4831-b21c-7c222f041091",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 36.0,
      "LackOfCohesion" : 0.48578256359543204,
      "MetricsIntensity" : 0.032857228317328145,
      "Density" : 0.9959670348939155
    },
    "euclideanDistance" : 36.03089169190569,
    "generation" : 23,
    "numberOfRefactorings" : 36,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295777,
      "LackOfCohesion" : 0.48578256359543204,
      "MetricsIntensity" : 0.032857228317328145,
      "Density" : 3.063646170442286
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "56594273-a8be-4d5a-94e8-63f2cd17160f",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4865308065970568,
      "MetricsIntensity" : 0.03289595388288422,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 37.0299855289917,
    "generation" : 18,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5578470824949693,
      "LackOfCohesion" : 0.4865308065970568,
      "MetricsIntensity" : 0.03289595388288422,
      "Density" : 3.0549568965517255
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "fae359a7-5380-4fe7-ac9a-4f37ae2eafc6",
    "objectives" : {
      "NumberOfConcerns" : 0.9977470228516253,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48520979813835946,
      "MetricsIntensity" : 0.03292349758374306,
      "Density" : 0.9945642644222339
    },
    "euclideanDistance" : 37.03000364167654,
    "generation" : 24,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.557788944723618,
      "LackOfCohesion" : 0.48520979813835946,
      "MetricsIntensity" : 0.03292349758374306,
      "Density" : 3.054388799138396
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "ba36d9cf-8555-45a4-b444-e255aec98d7e",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4852557118206369,
      "MetricsIntensity" : 0.03292291212469619,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 37.030017626242795,
    "generation" : 25,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5582914572864321,
      "LackOfCohesion" : 0.4852557118206369,
      "MetricsIntensity" : 0.03292291212469619,
      "Density" : 3.054927302100162
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d65e20bd-5346-4eba-840c-809afe883239",
    "objectives" : {
      "NumberOfConcerns" : 0.9990344383649823,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4850986326841718,
      "MetricsIntensity" : 0.03292949561130048,
      "Density" : 0.995616342275995
    },
    "euclideanDistance" : 37.03006517338525,
    "generation" : 23,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559015570065294,
      "LackOfCohesion" : 0.4850986326841718,
      "MetricsIntensity" : 0.03292949561130047,
      "Density" : 3.0559741657696446
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "335c990b-dc6a-4692-88e6-6593a319f5ee",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.4850663341622315,
      "MetricsIntensity" : 0.032902409720116314,
      "Density" : 0.9963177275118359
    },
    "euclideanDistance" : 37.03006622978444,
    "generation" : 18,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595776772247354,
      "LackOfCohesion" : 0.4850663341622315,
      "MetricsIntensity" : 0.03290240972011632,
      "Density" : 3.063072776280324
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "3d707f24-c722-437a-95a9-fdfc66808baa",
    "objectives" : {
      "NumberOfConcerns" : 0.9993562922433216,
      "NumberOfRefactorings" : 37.0,
      "LackOfCohesion" : 0.48514452108358447,
      "MetricsIntensity" : 0.03292891047464293,
      "Density" : 0.9957916885849553
    },
    "euclideanDistance" : 37.03007917363105,
    "generation" : 23,
    "numberOfRefactorings" : 37,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5595178302360626,
      "LackOfCohesion" : 0.48514452108358447,
      "MetricsIntensity" : 0.032928910474642935,
      "Density" : 3.056512378902047
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8003d4e4-f168-4b3d-b705-ccbbce2471b5",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4855490214053233,
      "MetricsIntensity" : 0.03288596228463837,
      "Density" : 0.9936875328774329
    },
    "euclideanDistance" : 38.0291791822105,
    "generation" : 8,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5575666163901452,
      "LackOfCohesion" : 0.4855490214053233,
      "MetricsIntensity" : 0.03288596228463837,
      "Density" : 3.053340517241379
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "0726e16a-95ac-4e7a-9a21-20781abf52a6",
    "objectives" : {
      "NumberOfConcerns" : 0.9974251689732861,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4854772787327027,
      "MetricsIntensity" : 0.03289568094756139,
      "Density" : 0.9942135718043135
    },
    "euclideanDistance" : 38.029200463697,
    "generation" : 27,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5580693815987932,
      "LackOfCohesion" : 0.4854772787327027,
      "MetricsIntensity" : 0.03289568094756139,
      "Density" : 3.0549568965517246
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[jenkins.security.UpdateSiteWarningsConfiguration.getIgnoredWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getCategory(), jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings(), jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "38aa4cc1-66c3-42ed-b9d8-9c80d4af0aa9",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 38.0,
      "LackOfCohesion" : 0.4853338831606661,
      "MetricsIntensity" : 0.03287457348082013,
      "Density" : 0.9959670348939155
    },
    "euclideanDistance" : 38.02926138558331,
    "generation" : 17,
    "numberOfRefactorings" : 38,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5598591549295775,
      "LackOfCohesion" : 0.4853338831606661,
      "MetricsIntensity" : 0.03287457348082013,
      "Density" : 3.063646170442287
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>), hudson.model.ParametersAction.getParameters(), hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String), hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)]"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "fbf91cb4-7fda-41cf-870b-d442810efcc9",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4858168366405167,
      "MetricsIntensity" : 0.032858116973397626,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 39.028417710871345,
    "generation" : 11,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5578470824949697,
      "LackOfCohesion" : 0.4858168366405167,
      "MetricsIntensity" : 0.032858116973397626,
      "Density" : 3.053908355795148
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "2a2002fc-befe-4c27-b9df-79beae1d819b",
    "objectives" : {
      "NumberOfConcerns" : 0.9964596073382684,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.48615390840616,
      "MetricsIntensity" : 0.0329035724277789,
      "Density" : 0.9936875328774329
    },
    "euclideanDistance" : 39.028422654903565,
    "generation" : 23,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5573440643863181,
      "LackOfCohesion" : 0.48615390840616,
      "MetricsIntensity" : 0.0329035724277789,
      "Density" : 3.0533405172413786
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "80663c5e-a7a7-4c87-9d72-dae9d4c4b293",
    "objectives" : {
      "NumberOfConcerns" : 0.9964596073382684,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4861539084061597,
      "MetricsIntensity" : 0.03290357242777891,
      "Density" : 0.9936875328774329
    },
    "euclideanDistance" : 39.028422654903565,
    "generation" : 17,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.557344064386318,
      "LackOfCohesion" : 0.4861539084061597,
      "MetricsIntensity" : 0.03290357242777891,
      "Density" : 3.053340517241378
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "8657cb07-f05e-417e-af51-1393873eca56",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 39.0,
      "LackOfCohesion" : 0.4857052139815822,
      "MetricsIntensity" : 0.032864157656228174,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 39.02847601957974,
    "generation" : 24,
    "numberOfRefactorings" : 39,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.559074912016088,
      "LackOfCohesion" : 0.4857052139815822,
      "MetricsIntensity" : 0.032864157656228174,
      "Density" : 3.0554956896551717
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "60e1924f-a77b-4c09-bc14-7f19246406fc",
    "objectives" : {
      "NumberOfConcerns" : 0.9971033150949469,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.48510058831368585,
      "MetricsIntensity" : 0.03290329788629821,
      "Density" : 0.9936875328774329
    },
    "euclideanDistance" : 40.027715837176665,
    "generation" : 26,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5575666163901456,
      "LackOfCohesion" : 0.48510058831368585,
      "MetricsIntensity" : 0.03290329788629821,
      "Density" : 3.053340517241379
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "b06b39b5-7951-4a2f-9851-71d958e6afcc",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4849894217820159,
      "MetricsIntensity" : 0.0329093103478639,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 40.02777271727806,
    "generation" : 22,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5587939698492455,
      "LackOfCohesion" : 0.4849894217820159,
      "MetricsIntensity" : 0.0329093103478639,
      "Density" : 3.054927302100162
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "bc82a314-0721-4f73-9ec4-4b61474f91b2",
    "objectives" : {
      "NumberOfConcerns" : 0.9983907306083039,
      "NumberOfRefactorings" : 40.0,
      "LackOfCohesion" : 0.4849894217820162,
      "MetricsIntensity" : 0.032909310347863895,
      "Density" : 0.9947396107311941
    },
    "euclideanDistance" : 40.02777271727806,
    "generation" : 18,
    "numberOfRefactorings" : 40,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5587939698492461,
      "LackOfCohesion" : 0.4849894217820162,
      "MetricsIntensity" : 0.032909310347863895,
      "Density" : 3.054927302100162
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "361df16c-7264-493f-a047-67532f356270",
    "objectives" : {
      "NumberOfConcerns" : 0.9967814612166077,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4853681562057508,
      "MetricsIntensity" : 0.03287546213688963,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 41.02702712118819,
    "generation" : 22,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5578470824949697,
      "LackOfCohesion" : 0.4853681562057508,
      "MetricsIntensity" : 0.03287546213688963,
      "Density" : 3.0539083557951483
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "cac6902a-79d5-43f7-8cc1-10406ef95797",
    "objectives" : {
      "NumberOfConcerns" : 0.9964596073382684,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4857052279713939,
      "MetricsIntensity" : 0.03292091759127089,
      "Density" : 0.9936875328774329
    },
    "euclideanDistance" : 41.027031820707506,
    "generation" : 16,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5573440643863181,
      "LackOfCohesion" : 0.4857052279713939,
      "MetricsIntensity" : 0.032920917591270894,
      "Density" : 3.053340517241378
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "7eaf716d-7573-43fd-9176-8c2ca97225c7",
    "objectives" : {
      "NumberOfConcerns" : 0.9980688767299646,
      "NumberOfRefactorings" : 41.0,
      "LackOfCohesion" : 0.4852567808899446,
      "MetricsIntensity" : 0.032881493257888035,
      "Density" : 0.9943889181132737
    },
    "euclideanDistance" : 41.02708259356449,
    "generation" : 25,
    "numberOfRefactorings" : 41,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5590749120160883,
      "LackOfCohesion" : 0.4852567808899446,
      "MetricsIntensity" : 0.032881493257888035,
      "Density" : 3.0554956896551717
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.security.csrf.CrumbFilter.destroy(), hudson.security.csrf.CrumbFilter.extractCrumbFromRequest(HttpServletRequest, String), hudson.security.csrf.CrumbFilter.init(FilterConfig), hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d9a715ff-866f-484c-a817-b4a530fd3f08",
    "objectives" : {
      "NumberOfConcerns" : 0.9961377534599292,
      "NumberOfRefactorings" : 42.0,
      "LackOfCohesion" : 0.48597327721420375,
      "MetricsIntensity" : 0.03289307620386867,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 42.02637577144517,
    "generation" : 15,
    "numberOfRefactorings" : 42,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5576245596376443,
      "LackOfCohesion" : 0.48597327721420375,
      "MetricsIntensity" : 0.032893076203868665,
      "Density" : 3.0539083557951487
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[jenkins.security.apitoken.ApiTokenStats.LOGGER, jenkins.security.apitoken.ApiTokenStats.parent], extractedMethods=[jenkins.security.apitoken.ApiTokenStats.getConfigFile(File), jenkins.security.apitoken.ApiTokenStats.getUserFolder(), jenkins.security.apitoken.ApiTokenStats.init(), jenkins.security.apitoken.ApiTokenStats.internalLoad(File), jenkins.security.apitoken.ApiTokenStats.setParent(File), jenkins.security.apitoken.ApiTokenStats.areStatsDisabled(), jenkins.security.apitoken.ApiTokenStats.readResolve(), jenkins.security.apitoken.ApiTokenStats.load(File), jenkins.security.apitoken.ApiTokenStats.removeAll(), jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String), jenkins.security.apitoken.ApiTokenStats.save()]"
      } ]
    } ]
  }, {
    "solutionId" : "d9ecd15c-d704-488c-8e3c-e4de6b6abdbe",
    "objectives" : {
      "NumberOfConcerns" : 0.9961377534599292,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4863889018407169,
      "MetricsIntensity" : 0.03288521714902445,
      "Density" : 0.9929861476415921
    },
    "euclideanDistance" : 49.022606698487756,
    "generation" : 5,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5576245596376443,
      "LackOfCohesion" : 0.4863889018407169,
      "MetricsIntensity" : 0.03288521714902445,
      "Density" : 3.0561252023745262
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "97987208-6599-45fa-b738-240a0452a2ef",
    "objectives" : {
      "NumberOfConcerns" : 0.99581589958159,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4867261596283059,
      "MetricsIntensity" : 0.032930697689197326,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 49.02261064212506,
    "generation" : 10,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.557121288374434,
      "LackOfCohesion" : 0.4867261596283059,
      "MetricsIntensity" : 0.032930697689197326,
      "Density" : 3.055555555555555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "92e4ceb2-b43e-4c4f-baab-819a3b0b938c",
    "objectives" : {
      "NumberOfConcerns" : 0.99581589958159,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.48672615962830545,
      "MetricsIntensity" : 0.03293069768919734,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 49.02261064212506,
    "generation" : 18,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5571212883744336,
      "LackOfCohesion" : 0.48672615962830545,
      "MetricsIntensity" : 0.03293069768919734,
      "Density" : 3.0555555555555545
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "6fed72d9-683e-4e81-b1a8-bfe128f5cae3",
    "objectives" : {
      "NumberOfConcerns" : 0.99581589958159,
      "NumberOfRefactorings" : 49.0,
      "LackOfCohesion" : 0.4867261596283059,
      "MetricsIntensity" : 0.032930697689197326,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 49.02261064212506,
    "generation" : 18,
    "numberOfRefactorings" : 49,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5571212883744345,
      "LackOfCohesion" : 0.4867261596283059,
      "MetricsIntensity" : 0.032930697689197326,
      "Density" : 3.055555555555554
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "c7ab4c70-0837-4f64-b65a-691f4148e9e2",
    "objectives" : {
      "NumberOfConcerns" : 0.9954940457032507,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.48699492062202626,
      "MetricsIntensity" : 0.032902846328692156,
      "Density" : 0.9929861476415921
    },
    "euclideanDistance" : 50.02214786006741,
    "generation" : 8,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5574018126888218,
      "LackOfCohesion" : 0.48699492062202626,
      "MetricsIntensity" : 0.032902846328692156,
      "Density" : 3.056125202374528
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "2e3a3d15-6af2-4897-b3e9-c6c348dad993",
    "objectives" : {
      "NumberOfConcerns" : 0.9954940457032507,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4869949206220263,
      "MetricsIntensity" : 0.03290284632869214,
      "Density" : 0.9929861476415921
    },
    "euclideanDistance" : 50.02214786006741,
    "generation" : 19,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5574018126888214,
      "LackOfCohesion" : 0.4869949206220263,
      "MetricsIntensity" : 0.03290284632869215,
      "Density" : 3.0561252023745262
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.leave(Queue)', targetType='hudson.model.Queue'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.enter(Queue)', targetType='hudson.model.Queue'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "335228b3-cda8-4f3a-9d3c-ca63053e0d97",
    "objectives" : {
      "NumberOfConcerns" : 0.9964596073382684,
      "NumberOfRefactorings" : 50.0,
      "LackOfCohesion" : 0.4856719429162432,
      "MetricsIntensity" : 0.03293040803475311,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 50.02216120356239,
    "generation" : 17,
    "numberOfRefactorings" : 50,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5573440643863168,
      "LackOfCohesion" : 0.4856719429162432,
      "MetricsIntensity" : 0.03293040803475311,
      "Density" : 3.055555555555555
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "04de4868-e60e-42c0-adcd-c0cfa088be35",
    "objectives" : {
      "NumberOfConcerns" : 0.9961377534599292,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.4859399737898172,
      "MetricsIntensity" : 0.0329025718849025,
      "Density" : 0.9929861476415921
    },
    "euclideanDistance" : 51.02171627993946,
    "generation" : 18,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5576245596376443,
      "LackOfCohesion" : 0.4859399737898172,
      "MetricsIntensity" : 0.0329025718849025,
      "Density" : 3.056125202374528
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException), org.acegisecurity.AuthenticationException.toSpring()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "73165089-e972-43b5-84ab-877a39114be9",
    "objectives" : {
      "NumberOfConcerns" : 0.99581589958159,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.4862772315774057,
      "MetricsIntensity" : 0.03294805242507537,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 51.021720066106994,
    "generation" : 14,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5571212883744343,
      "LackOfCohesion" : 0.4862772315774057,
      "MetricsIntensity" : 0.03294805242507537,
      "Density" : 3.0555555555555545
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "6aea1551-292a-4f7d-bd6c-6e0c7a4f352a",
    "objectives" : {
      "NumberOfConcerns" : 0.99581589958159,
      "NumberOfRefactorings" : 51.0,
      "LackOfCohesion" : 0.4862772315774059,
      "MetricsIntensity" : 0.03294805242507536,
      "Density" : 0.9933368402595125
    },
    "euclideanDistance" : 51.021720066106994,
    "generation" : 13,
    "numberOfRefactorings" : 51,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5571212883744343,
      "LackOfCohesion" : 0.4862772315774059,
      "MetricsIntensity" : 0.03294805242507537,
      "Density" : 3.0555555555555545
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper), hudson.util.DOSToUnixPathHelper.constructFile(String)]"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "ad3775ff-fc7d-4568-add2-0714d9087454",
    "objectives" : {
      "NumberOfConcerns" : 0.9954940457032507,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.4865457446815348,
      "MetricsIntensity" : 0.03292021064752759,
      "Density" : 0.9929861476415921
    },
    "euclideanDistance" : 52.02129218297423,
    "generation" : 14,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5574018126888212,
      "LackOfCohesion" : 0.4865457446815348,
      "MetricsIntensity" : 0.03292021064752759,
      "Density" : 3.056125202374528
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  }, {
    "solutionId" : "8caf8c71-54fa-4507-a388-2e720aafa8ac",
    "objectives" : {
      "NumberOfConcerns" : 0.9954940457032507,
      "NumberOfRefactorings" : 52.0,
      "LackOfCohesion" : 0.48654574468153466,
      "MetricsIntensity" : 0.03292021064752761,
      "Density" : 0.9929861476415921
    },
    "euclideanDistance" : 52.02129218297423,
    "generation" : 16,
    "numberOfRefactorings" : 52,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5574018126888212,
      "LackOfCohesion" : 0.48654574468153466,
      "MetricsIntensity" : 0.03292021064752761,
      "Density" : 3.056125202374528
    },
    "sequences" : [ {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStore",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashInHex(String)', targetType='hudson.search.ParsedQuickSilver.Getter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.deleteAllLegacyAndGenerateNewOne(Secret, boolean)', targetType='org.acegisecurity.ui.WebAuthenticationDetails'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.regenerateTokenFromLegacy(Secret)', targetType='hudson.security.SparseACL'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.revokeAllTokens()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.init()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.getTokenListSortedByName()', targetType='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.SORT_BY_LOWERCASED_NAME', targetTypeName='hudson.util.LineEndNormalizingWriter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.readResolve()', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.hashedBytes(byte[])', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStore.plainSecretToHashBytes(String)', targetType='hudson.diagnosis.NullIdDescriptorMonitor'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='jenkins.security.apitoken.ApiTokenStore.HASH_ALGORITHM', targetTypeName='hudson.diagnosis.NullIdDescriptorMonitor'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbFilter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbFilter.isMultipart(HttpServletRequest)', targetType='hudson.util.MultipartFormDataParser'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.Queue.BuildableItem",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isStuck()', targetType='hudson.slaves.CloudRetentionStrategy'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.getCauseOfBlockage()', targetType='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.transientCausesOfBlockage', targetTypeName='hudson.DNSMultiCast'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.Queue.BuildableItem.isPending()', targetType='hudson.Launcher.RemoteLaunchCallable'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.model.Queue.BuildableItem.isPending', targetTypeName='hudson.Launcher.RemoteLaunchCallable'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.mvn.SettingsPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.mvn.SettingsPathHelper.getSettings(AbstractBuild<?,?>, TaskListener, String)', targetType='hudson.FilePath'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.tasks.filters.EnvVarsFilterRuleWrapper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.tasks.filters.EnvVarsFilterRuleWrapper.createRuleWrapper(Run<?,?>, Object, Launcher, List<EnvVarsFilterLocalRule>)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.UpdateSiteWarningsConfiguration",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getApplicableWarnings()', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getAllWarnings()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getPlugin(UpdateSite.Warning)', targetType='hudson.model.UpdateSite.Warning'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.UpdateSiteWarningsConfiguration.getCategory()', targetType='jenkins.model.GlobalConfigurationCategory'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.ParametersAction",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getIconFileName()', targetType='hudson.model.FingerprintMap.FingerprintParams'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onAttached(Run<?,?>)', targetType='hudson.util.HexBinaryConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getAssignedLabel(SubTask)', targetType='hudson.FilePath.CallableWith'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.isSafeParameter(String)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.merge(ParametersAction)', targetType='hudson.model.ViewDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameters()', targetType='hudson.tools.DownloadFromUrlInstaller.InstallableList'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.onLoad(Run<?,?>)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.buildEnvironment(Run<?,?>, EnvVars)', targetType='jenkins.model.DefaultUserCanonicalIdResolver'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.iterator()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.substitute(AbstractBuild<?,?>, String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createBuildWrappers(AbstractBuild<?,?>, Collection<? super BuildWrapper>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getDisplayName()', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.getParameter(String)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.ParametersAction.createVariableResolver(AbstractBuild<?,?>)', targetType='hudson.node_monitors.AbstractAsyncNodeMonitorDescriptor'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.AuthenticationException",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.toSpring()', targetType='hudson.model.queue.ScheduleResult.Existing'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='org.acegisecurity.AuthenticationException.fromSpring(org.springframework.security.core.AuthenticationException)', targetType='hudson.MarkupText.Tag'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.DOSToUnixPathHelper",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.iteratePath(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.DOSToUnixPathHelper.checkPrefix(String, Helper)', targetType='hudson.util.DOSToUnixPathHelper.Helper'"
      } ]
    }, {
      "refactoredTypeName" : "jenkins.security.apitoken.ApiTokenStats",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.setParent(File)', targetType='hudson.FilePath.RenameTo'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.updateUsageForId(String)', targetType='jenkins.slaves.restarter.JnlpSlaveRestarterInstaller'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getUserFolder()', targetType='hudson.cli.SessionIdCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.areStatsDisabled()', targetType='hudson.util.jna.Advapi32.SERVICE_TABLE_ENTRY'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.init()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.readResolve()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.save()', targetType='hudson.util.ClasspathBuilder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.getConfigFile(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.internalLoad(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.load(File)', targetType='jenkins.cli.StopBuildsCommand'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='jenkins.security.apitoken.ApiTokenStats.removeAll()', targetType='jenkins.cli.StopBuildsCommand'"
      } ]
    } ]
  } ]
}