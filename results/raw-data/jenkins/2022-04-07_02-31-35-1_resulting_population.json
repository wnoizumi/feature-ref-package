{
  "executionId" : "9b9d746c-7a06-4e4d-a459-320f5cc344f4",
  "computingTime" : 3922488,
  "maxEvaluations" : 100,
  "initialPopulationSize" : 128,
  "finalPopulationSize" : 27,
  "algorithm" : "MOSA",
  "projectBeforeRefactoring" : {
    "meanDensity" : 3.128479657387581,
    "meanNumConcerns" : 1.5931520644511583,
    "meanMetricsIntensity" : 0.03296937024300846,
    "meanLackOfCohesion" : 0.48535030050355504
  },
  "population" : [ {
    "solutionId" : "5518ec13-0d2c-482d-903a-23290216dd5f",
    "objectives" : {
      "NumberOfConcerns" : 0.9993678887484198,
      "NumberOfRefactorings" : 11.0,
      "LackOfCohesion" : 0.48447791515222755,
      "MetricsIntensity" : 0.03284130800627739,
      "Density" : 0.9988021902806297
    },
    "euclideanDistance" : 11.100997225211467,
    "generation" : 1,
    "numberOfRefactorings" : 11,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5905432595573443,
      "LackOfCohesion" : 0.48447791515222755,
      "MetricsIntensity" : 0.03284130800627739,
      "Density" : 3.1213903743315514
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "3eddcd33-25f9-4170-8a2e-c6e814cf9bc8",
    "objectives" : {
      "NumberOfConcerns" : 0.9993678887484198,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4841694087474582,
      "MetricsIntensity" : 0.032847729319813244,
      "Density" : 0.9988021902806297
    },
    "euclideanDistance" : 12.09263581615105,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.590543259557344,
      "LackOfCohesion" : 0.4841694087474582,
      "MetricsIntensity" : 0.032847729319813244,
      "Density" : 3.121390374331551
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "ad0643bc-60d9-4e13-9625-c6c45a08d256",
    "objectives" : {
      "NumberOfConcerns" : 0.9993678887484198,
      "NumberOfRefactorings" : 12.0,
      "LackOfCohesion" : 0.4842019769623823,
      "MetricsIntensity" : 0.032841308006277374,
      "Density" : 0.9988021902806297
    },
    "euclideanDistance" : 12.092637102732253,
    "generation" : 1,
    "numberOfRefactorings" : 12,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.590543259557344,
      "LackOfCohesion" : 0.4842019769623823,
      "MetricsIntensity" : 0.03284130800627737,
      "Density" : 3.12139037433155
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "241e1b01-5734-4bd3-b194-f085bd9a44af",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.48305081925655957,
      "MetricsIntensity" : 0.03283407379425932,
      "Density" : 0.9974332648870636
    },
    "euclideanDistance" : 19.0584592610262,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5880281690140845,
      "LackOfCohesion" : 0.48305081925655957,
      "MetricsIntensity" : 0.03283407379425932,
      "Density" : 3.1187800963081864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "f0bae1b9-b2b4-4489-af49-9be8048e88b6",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 19.0,
      "LackOfCohesion" : 0.4829460753722505,
      "MetricsIntensity" : 0.032838894285849365,
      "Density" : 0.9977754962354551
    },
    "euclideanDistance" : 19.05849107810363,
    "generation" : 1,
    "numberOfRefactorings" : 19,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227366,
      "LackOfCohesion" : 0.4829460753722505,
      "MetricsIntensity" : 0.032838894285849365,
      "Density" : 3.1198501872659175
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "6d3c1b45-194a-4072-b1c8-d884f97e4d02",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 21.0,
      "LackOfCohesion" : 0.48374624919453874,
      "MetricsIntensity" : 0.0328306413163265,
      "Density" : 0.9976043805612594
    },
    "euclideanDistance" : 21.052945487824413,
    "generation" : 1,
    "numberOfRefactorings" : 21,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.48374624919453874,
      "MetricsIntensity" : 0.0328306413163265,
      "Density" : 3.119315141787051
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "b826d3d7-209b-46bb-a314-f00e04b620e3",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.4829075941961155,
      "MetricsIntensity" : 0.03283693938683262,
      "Density" : 0.9970910335386721
    },
    "euclideanDistance" : 22.050488626200316,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5880281690140847,
      "LackOfCohesion" : 0.4829075941961155,
      "MetricsIntensity" : 0.03283693938683261,
      "Density" : 3.117710005350456
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "a1b010f2-cf7a-422f-9cc7-7177dae753d7",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 22.0,
      "LackOfCohesion" : 0.48302181115990517,
      "MetricsIntensity" : 0.0328123570495963,
      "Density" : 0.9970910335386721
    },
    "euclideanDistance" : 22.0505053950826,
    "generation" : 1,
    "numberOfRefactorings" : 22,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227366,
      "LackOfCohesion" : 0.48302181115990517,
      "MetricsIntensity" : 0.0328123570495963,
      "Density" : 3.117710005350455
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e7e161b9-dde9-4a11-9bc0-a1ccff8d4841",
    "objectives" : {
      "NumberOfConcerns" : 0.9974715549936789,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.482752871711095,
      "MetricsIntensity" : 0.03283224642207554,
      "Density" : 0.9974332648870636
    },
    "euclideanDistance" : 23.048296052256774,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5875251509054327,
      "LackOfCohesion" : 0.482752871711095,
      "MetricsIntensity" : 0.03283224642207554,
      "Density" : 3.1187800963081864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "5c6ac1fa-e1e1-4d59-a2fa-7f2b6bac233b",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48131087567058917,
      "MetricsIntensity" : 0.03283076758871939,
      "Density" : 0.9976043805612594
    },
    "euclideanDistance" : 23.048300662891105,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.48131087567058917,
      "MetricsIntensity" : 0.03283076758871939,
      "Density" : 3.1193151417870517
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "68703768-33d6-4539-a951-4df41eee6aad",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4827459732563488,
      "MetricsIntensity" : 0.03283088834897838,
      "Density" : 0.9972621492128679
    },
    "euclideanDistance" : 23.048302181550888,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5880281690140843,
      "LackOfCohesion" : 0.4827459732563488,
      "MetricsIntensity" : 0.032830888348978376,
      "Density" : 3.1182450508293207
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "90f11e81-5e89-44b3-8d46-bd27d278cacd",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4812924797912662,
      "MetricsIntensity" : 0.03283706691366555,
      "Density" : 0.997946611909651
    },
    "euclideanDistance" : 23.048315103123294,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227377,
      "LackOfCohesion" : 0.4812924797912662,
      "MetricsIntensity" : 0.03283706691366555,
      "Density" : 3.120385232744783
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "6559f81f-22d5-4c98-af27-efe3f0d45c42",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.4823990795319716,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 0.9974332648870636
    },
    "euclideanDistance" : 23.04831600709331,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.588531187122737,
      "LackOfCohesion" : 0.4823990795319716,
      "MetricsIntensity" : 0.03283054103848142,
      "Density" : 3.1187800963081864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "63abb5d7-918e-487f-b618-ea30ba86701f",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48213080629184424,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 0.9976043805612594
    },
    "euclideanDistance" : 23.048317799516038,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.48213080629184424,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 3.1193151417870517
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e6aecc1d-f4a5-4b80-901e-0fefea1b57d9",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48132368708654616,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 0.997946611909651
    },
    "euclideanDistance" : 23.04832943441712,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313884,
      "LackOfCohesion" : 0.48132368708654616,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 3.1203852327447827
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "6f3c631b-8270-421b-8c7b-c5cf186aee65",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48132368708654616,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 0.997946611909651
    },
    "euclideanDistance" : 23.04832943441712,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313882,
      "LackOfCohesion" : 0.48132368708654616,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 3.120385232744784
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "41f1e8a7-3f94-4fdf-a06a-083682209556",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 23.0,
      "LackOfCohesion" : 0.48240674448168963,
      "MetricsIntensity" : 0.03283054103848141,
      "Density" : 0.9974332648870636
    },
    "euclideanDistance" : 23.0483298564228,
    "generation" : 1,
    "numberOfRefactorings" : 23,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313882,
      "LackOfCohesion" : 0.48240674448168963,
      "MetricsIntensity" : 0.03283054103848141,
      "Density" : 3.1187800963081864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e1db21fc-f789-4d66-a18c-9439acaff67b",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.4813158031382648,
      "MetricsIntensity" : 0.03283212566181653,
      "Density" : 0.9976043805612594
    },
    "euclideanDistance" : 24.046279077371757,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5880281690140847,
      "LackOfCohesion" : 0.4813158031382648,
      "MetricsIntensity" : 0.03283212566181653,
      "Density" : 3.1193151417870504
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "e539ec45-2c37-43ae-9f91-a11ca4776190",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.481302991722308,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 0.9974332648870636
    },
    "euclideanDistance" : 24.046284836970997,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.481302991722308,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 3.1187800963081864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "11dbc944-a524-4494-ae08-1730c75f20c5",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 24.0,
      "LackOfCohesion" : 0.481285909834365,
      "MetricsIntensity" : 0.03283706691366558,
      "Density" : 0.997946611909651
    },
    "euclideanDistance" : 24.04630580294534,
    "generation" : 1,
    "numberOfRefactorings" : 24,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.481285909834365,
      "MetricsIntensity" : 0.03283706691366558,
      "Density" : 3.1203852327447827
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "88f7511a-34cc-4857-b293-e60446f72045",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4812951077740263,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 0.9974332648870636
    },
    "euclideanDistance" : 25.044436645124755,
    "generation" : 1,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.4812951077740263,
      "MetricsIntensity" : 0.032830541038481424,
      "Density" : 3.1187800963081864
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.util.io.TarArchiver.buf', targetTypeName='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "f708c22e-29f1-476c-999e-64a675c30aaf",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.48210203493443055,
      "MetricsIntensity" : 0.032829303725643286,
      "Density" : 0.997946611909651
    },
    "euclideanDistance" : 25.044472613813717,
    "generation" : 1,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227366,
      "LackOfCohesion" : 0.48210203493443055,
      "MetricsIntensity" : 0.032829303725643286,
      "Density" : 3.1187165775401073
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.pos', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "093acb95-b3cf-442d-a962-87b6dfe04291",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4821110357753849,
      "MetricsIntensity" : 0.03282953027588126,
      "Density" : 0.9977754962354551
    },
    "euclideanDistance" : 25.04447856735659,
    "generation" : 1,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313882,
      "LackOfCohesion" : 0.4821110357753849,
      "MetricsIntensity" : 0.03282953027588126,
      "Density" : 3.119850187265917
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.pos', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "a52e224c-bdb8-4916-a188-0e9fbe5bf35b",
    "objectives" : {
      "NumberOfConcerns" : 0.9984197218710493,
      "NumberOfRefactorings" : 25.0,
      "LackOfCohesion" : 0.4824606542949405,
      "MetricsIntensity" : 0.03282471417897066,
      "Density" : 0.9977754962354551
    },
    "euclideanDistance" : 25.04448529370713,
    "generation" : 1,
    "numberOfRefactorings" : 25,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5890342052313884,
      "LackOfCohesion" : 0.4824606542949405,
      "MetricsIntensity" : 0.03282471417897066,
      "Density" : 3.119850187265917
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.pos', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "b8706f6c-ec54-4c74-8255-5c9a456b908f",
    "objectives" : {
      "NumberOfConcerns" : 0.9977876106194691,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4820821886107764,
      "MetricsIntensity" : 0.032828956415146306,
      "Density" : 0.9972621492128679
    },
    "euclideanDistance" : 26.04272629520791,
    "generation" : 1,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5880281690140847,
      "LackOfCohesion" : 0.4820821886107764,
      "MetricsIntensity" : 0.032828956415146306,
      "Density" : 3.1182450508293207
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.pos', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "4982e7a9-9b75-414c-b374-65399537cb99",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 26.0,
      "LackOfCohesion" : 0.4824990885428114,
      "MetricsIntensity" : 0.032815819468089195,
      "Density" : 0.9977754962354551
    },
    "euclideanDistance" : 26.042765773202973,
    "generation" : 1,
    "numberOfRefactorings" : 26,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.4824990885428114,
      "MetricsIntensity" : 0.032815819468089195,
      "Density" : 3.1198501872659192
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.pos', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.all()', targetType='jenkins.model.Jenkins'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  }, {
    "solutionId" : "27063097-0c0a-43fe-aadb-9ee18fb606c6",
    "objectives" : {
      "NumberOfConcerns" : 0.9981036662452591,
      "NumberOfRefactorings" : 27.0,
      "LackOfCohesion" : 0.48204684729646124,
      "MetricsIntensity" : 0.032836031753347476,
      "Density" : 0.9967488021902806
    },
    "euclideanDistance" : 27.041138409305365,
    "generation" : 1,
    "numberOfRefactorings" : 27,
    "additionalInformation" : {
      "NumberOfConcerns" : 1.5885311871227363,
      "LackOfCohesion" : 0.48204684729646124,
      "MetricsIntensity" : 0.032836031753347476,
      "Density" : 3.1166399143927235
    },
    "sequences" : [ {
      "refactoredTypeName" : "hudson.tasks.BuildWrappers",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.tasks.BuildWrappers.getFor(AbstractProject<?,?>)', targetType='jenkins.model.Jenkins'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.queue.MappingWorksheet.Mapping",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.assigned(int)', targetType='jenkins.slaves.JnlpSlaveAgentProtocol'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isCompletelyValid()', targetType='jenkins.security.apitoken.ApiTokenPropertyConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.size()', targetType='hudson.console.ConsoleAnnotationOutputStream.LineBuffer'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.toMap()', targetType='hudson.util.LRUStringConverter'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.execute(WorkUnitContext)', targetType='hudson.model.DependencyGraph.DependencyGroup'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.queue.MappingWorksheet.Mapping.isPartiallyValid()', targetType='hudson.util.FormFieldValidator.NonNegativeInteger'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.cli.CLIAction.ServerSideImpl",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.ready()', targetType='hudson.tasks.BuildWrapperDescriptor'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.run()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.handleClose()', targetType='jenkins.model.GlobalPluginConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.cli.CLIAction.ServerSideImpl.onStart()', targetType='hudson.util.DecodingStream'"
      } ]
    }, {
      "refactoredTypeName" : "org.acegisecurity.Authentication",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[org.acegisecurity.Authentication.getPrincipal(), org.acegisecurity.Authentication.setAuthenticated(boolean), org.acegisecurity.Authentication.isAuthenticated(), org.acegisecurity.Authentication.getDetails(), org.acegisecurity.Authentication.getCredentials(), org.acegisecurity.Authentication.fromSpring(org.springframework.security.core.Authentication)]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.ReflectionUtils.Parameter",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.index()', targetType='jenkins.model.IdStrategy.CaseInsensitive.DescriptorImpl'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.ReflectionUtils.Parameter.<T extends Annotation>getAnnotation(Class<T>)', targetType='hudson.util.PersistedList'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.model.BuildAuthorizationToken",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.model.BuildAuthorizationToken.create(StaplerRequest)', targetType='hudson.Util'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.TextFile",
      "refactorings" : [ {
        "refactoringKind" : "Extract Class",
        "change" : "extractedFields=[], extractedMethods=[hudson.util.TextFile.read(), hudson.util.TextFile.head(int), hudson.util.TextFile.exists(), hudson.util.TextFile.lines2(), hudson.util.TextFile.lines(), hudson.util.TextFile.fastTail(int), hudson.util.TextFile.readTrim()]"
      } ]
    }, {
      "refactoredTypeName" : "hudson.MarkupText",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.rangeCheck(int)', targetType='jenkins.tasks.filters.EnvVarsFilterGlobalConfiguration'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.findTokens(Pattern)', targetType='org.acegisecurity.context.SecurityContextHolder'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.toString(boolean)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.MarkupText.addMarkup(int, int, String, String)', targetType='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.markup', targetTypeName='jenkins.ExtensionComponentSet'"
      }, {
        "refactoringKind" : "Move Field",
        "change" : "fieldName='hudson.MarkupText.pos', targetTypeName='jenkins.ExtensionComponentSet'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.util.io.TarArchiver",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.close()', targetType='hudson.slaves.EnvironmentVariablesNodeProperty'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.visit(File, String)', targetType='hudson.util.DirScanner.Full'"
      }, {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.util.io.TarArchiver.understandsSymlink()', targetType='hudson.model.queue.ScheduleResult.Refused'"
      } ]
    }, {
      "refactoredTypeName" : "hudson.security.csrf.CrumbIssuer",
      "refactorings" : [ {
        "refactoringKind" : "Move Method",
        "change" : "method='hudson.security.csrf.CrumbIssuer.initStaplerCrumbIssuer()', targetType='jenkins.model.Jenkins'"
      } ]
    } ]
  } ]
}